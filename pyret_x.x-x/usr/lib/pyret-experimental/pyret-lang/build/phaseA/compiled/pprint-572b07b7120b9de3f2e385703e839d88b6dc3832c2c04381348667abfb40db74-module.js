({"theMap":"{\"version\":3,\"sources\":[\"builtin://pprint\"],\"names\":[\"builtin://pprint\",\",54,7,981,54,17,991\",\",55,8,1000,55,19,1011\",\",57,7,1042,57,17,1052\",\",58,11,1064,58,25,1078\",\",73,7,1901,73,22,1916\",\",74,12,1936,74,28,1952\",\",76,9,1978,76,26,1995\",\",76,30,1999,76,48,2017\",\",76,50,2019,76,78,2047\",\",77,32,2080,77,47,2095\",\",77,50,2098,77,66,2114\",\",77,32,2080,77,66,2114\",\",77,12,2060,77,74,2122\",\",83,24,2223,83,45,2244\",\",84,49,2294,84,63,2308\",\",84,44,2289,84,71,2316\",\",84,24,2269,84,72,2317\",\",85,26,2344,85,43,2361\",\",86,53,2415,86,67,2429\",\",86,48,2410,86,75,2437\",\",86,26,2388,86,76,2438\",\",87,62,2501,87,78,2517\",\",87,85,2524,87,101,2540\",\",87,80,2519,87,109,2548\",\",87,57,2496,87,110,2549\",\",87,34,2473,87,111,2550\",\",88,59,2610,88,78,2629\",\",88,85,2636,88,99,2650\",\",88,80,2631,88,107,2658\",\",88,54,2605,88,108,2659\",\",88,33,2584,88,109,2660\",\",89,65,2726,89,82,2743\",\",89,89,2750,89,106,2767\",\",89,84,2745,89,114,2775\",\",89,60,2721,89,115,2776\",\",89,37,2698,89,116,2777\",\",90,53,2831,90,67,2845\",\",90,48,2826,90,75,2853\",\",90,26,2804,90,76,2854\",\",91,53,2908,91,67,2922\",\",91,48,2903,91,75,2930\",\",91,26,2881,91,76,2931\",\",92,66,2998,92,80,3012\",\",92,61,2993,92,88,3020\",\",92,33,2965,92,89,3021\",\",96,4,3071,96,23,3090\",\",60,0,1080,98,3,3100\",\",61,2,1098,61,57,1153\",\",62,2,1156,62,67,1221\",\",63,2,1224,63,59,1281\",\",64,2,1284,64,69,1351\",\",65,2,1354,65,93,1445\",\",66,2,1448,66,89,1535\",\",67,2,1538,67,96,1632\",\",68,2,1635,68,72,1705\",\",69,2,1708,69,76,1782\",\",70,2,1785,70,72,1855\",\",99,0,3101,101,3,3178\",\",100,2,3114,100,62,3174\",\",134,5,4492,134,18,4505\",\",135,26,4533,135,32,4539\",\",135,56,4563,135,62,4569\",\",135,34,4541,135,69,4576\",\",137,9,4595,137,23,4609\",\",137,4,4590,137,30,4616\",\",144,16,4750,144,33,4767\",\",147,14,4810,147,35,4831\",\",147,4,4800,147,36,4832\",\",150,14,4882,150,36,4904\",\",151,21,4926,151,42,4947\",\",151,16,4921,151,50,4955\",\",154,14,5002,154,36,5024\",\",157,8,5145,157,19,5156\",\",156,10,5091,158,9,5166\",\",159,6,5173,159,20,5187\",\",155,4,5029,160,7,5195\",\",163,7,5274,163,22,5289\",\",165,14,5323,165,25,5334\",\",166,10,5345,166,22,5357\",\",167,10,5368,167,23,5381\",\",168,23,5405,168,30,5412\",\",169,42,5462,169,52,5472\",\",170,74,5548,170,81,5555\",\",170,83,5557,170,93,5567\",\",170,52,5526,170,94,5568\",\",172,10,5615,172,22,5627\",\",173,18,5646,173,37,5665\",\",173,39,5667,173,49,5677\",\",175,10,5717,175,24,5731\",\",176,18,5750,176,28,5760\",\",176,30,5762,176,40,5772\",\",177,49,5823,177,67,5841\",\",177,69,5843,177,79,5853\",\",177,44,5818,177,80,5854\",\",178,56,5912,178,61,5917\",\",178,51,5907,178,68,5924\",\",178,70,5926,178,80,5936\",\",178,46,5902,178,81,5937\",\",181,12,6001,181,55,6044\",\",183,12,6073,183,27,6088\",\",184,23,6112,184,33,6122\",\",187,31,6208,187,68,6245\",\",187,70,6247,187,80,6257\",\",187,26,6203,187,81,6258\",\",190,28,6345,190,38,6355\",\",192,12,6385,192,26,6399\",\",193,20,6420,193,30,6430\",\",193,32,6432,193,42,6442\",\",196,37,6543,196,53,6559\",\",196,55,6561,196,65,6571\",\",196,32,6538,196,66,6572\",\",196,16,6522,196,67,6573\",\",197,53,6627,197,70,6644\",\",197,72,6646,197,82,6656\",\",197,48,6622,197,83,6657\",\",197,32,6606,197,84,6658\",\",198,19,6678,198,33,6692\",\",198,18,6677,198,48,6707\",\",202,33,6987,202,49,7003\",\",202,51,7005,202,61,7015\",\",202,28,6982,202,62,7016\",\",202,12,6966,202,63,7017\",\",204,33,7067,204,50,7084\",\",204,52,7086,204,62,7096\",\",204,28,7062,204,63,7097\",\",204,12,7046,204,64,7098\",\",209,46,7183,209,60,7197\",\",209,62,7199,209,78,7215\",\",209,35,7172,209,79,7216\",\",209,20,7157,209,80,7217\",\",209,14,7151,209,18,7155\",\",209,2,7139,209,82,7219\",\",210,2,7222,210,14,7234\",\",213,16,7256,213,32,7272\",\",214,18,7291,214,35,7308\",\",215,32,7341,215,44,7353\",\",215,46,7355,215,60,7369\",\",215,23,7332,215,61,7370\",\",216,32,7407,216,44,7419\",\",216,46,7421,216,60,7435\",\",216,23,7398,216,61,7436\",\",217,54,7495,217,69,7510\",\",217,71,7512,217,88,7529\",\",217,34,7475,217,89,7530\",\",218,36,7571,218,48,7583\",\",218,50,7585,218,64,7599\",\",218,25,7560,218,65,7600\",\",219,31,7636,219,40,7645\",\",220,23,7673,220,41,7691\",\",221,28,7724,221,44,7740\",\",221,21,7717,221,52,7748\",\",223,29,7783,223,40,7794\",\",223,25,7779,223,41,7795\",\",224,9,7809,224,17,7817\",\",225,9,7827,225,17,7835\",\",226,9,7845,226,17,7853\",\",227,9,7863,227,17,7871\",\",228,9,7881,228,17,7889\",\",229,9,7899,229,17,7907\",\",230,9,7917,230,17,7925\",\",231,9,7935,231,17,7943\",\",232,8,7952,232,16,7960\",\",233,7,7968,233,15,7976\",\",235,23,8001,235,31,8009\",\",235,15,7993,235,42,8020\",\",236,21,8046,236,30,8055\",\",236,13,8038,236,30,8055\",\",237,19,8075,237,28,8084\",\",237,12,8068,237,28,8084\",\",241,7,8181,241,21,8195\",\",241,23,8197,241,30,8204\",\",242,28,8233,242,35,8240\",\",242,22,8227,242,35,8240\",\",242,16,8221,242,36,8241\",\",242,10,8215,242,36,8241\",\",240,2,8117,244,5,8255\",\",246,26,8286,246,35,8295\",\",246,17,8277,246,58,8318\",\",247,17,8340,247,57,8380\",\",248,21,8406,248,31,8416\",\",248,21,8406,248,40,8425\",\",248,15,8400,248,41,8426\",\",249,21,8452,249,31,8462\",\",249,21,8452,249,40,8471\",\",249,15,8446,249,41,8472\",\",250,23,8500,250,33,8510\",\",250,23,8500,250,42,8519\",\",250,17,8494,250,43,8520\",\",251,13,8538,251,21,8546\",\",252,13,8560,252,21,8568\",\",253,21,8590,253,35,8604\",\",253,21,8590,253,48,8617\",\",253,15,8584,253,49,8618\",\",254,21,8644,254,35,8658\",\",254,21,8644,254,48,8671\",\",254,15,8638,254,49,8672\",\",256,22,8700,256,32,8710\",\",256,16,8694,256,33,8711\",\",257,42,8758,257,51,8767\",\",257,42,8758,257,55,8771\",\",257,34,8750,257,56,8772\",\",257,30,8746,257,56,8772\",\",257,24,8740,257,57,8773\",\",259,20,8884,259,28,8892\",\",259,16,8880,259,28,8892\",\",259,16,8880,259,33,8897\",\",259,2,8866,259,38,8902\",\",262,24,9023,262,32,9031\",\",262,19,9018,262,32,9031\",\",262,19,9018,262,36,9035\",\",262,2,9001,262,38,9037\",\",265,5,9149,265,21,9165\",\",265,44,9188,265,53,9197\",\",265,44,9188,265,64,9208\",\",265,36,9180,265,65,9209\",\",265,29,9173,265,65,9209\",\",265,23,9167,265,66,9210\",\",266,29,9240,266,38,9249\",\",266,29,9240,266,49,9260\",\",266,21,9232,266,50,9261\",\",266,14,9225,266,50,9261\",\",266,53,9264,266,62,9273\",\",266,14,9225,266,62,9273\",\",266,14,9225,266,70,9281\",\",266,8,9219,266,71,9282\",\",270,5,9405,270,21,9421\",\",270,50,9450,270,59,9459\",\",270,50,9450,270,70,9470\",\",270,44,9444,270,71,9471\",\",270,36,9436,270,72,9472\",\",270,29,9429,270,72,9472\",\",270,23,9423,270,73,9473\",\",271,35,9509,271,44,9518\",\",271,35,9509,271,55,9529\",\",271,29,9503,271,56,9530\",\",271,21,9495,271,57,9531\",\",271,14,9488,271,57,9531\",\",271,66,9540,271,75,9549\",\",271,66,9540,271,83,9557\",\",271,60,9534,271,84,9558\",\",271,14,9488,271,84,9558\",\",271,8,9482,271,85,9559\",\",277,7,9678,277,19,9690\",\",278,12,9708,278,26,9722\",\",279,10,9736,279,19,9745\",\",279,10,9736,279,23,9749\",\",276,2,9625,281,5,9763\",\",284,5,9918,284,25,9938\",\",285,29,9974,285,48,9993\",\",285,8,9953,285,56,10001\",\",290,35,10109,290,58,10132\",\",290,29,10103,290,59,10133\",\",290,22,10096,290,59,10133\",\",290,68,10142,290,77,10151\",\",290,68,10142,290,85,10159\",\",290,62,10136,290,86,10160\",\",290,22,10096,290,86,10160\",\",290,16,10090,290,87,10161\",\",290,8,10082,290,87,10161\",\",290,2,10076,290,88,10162\"],\"mappings\":\"AAACA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;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\":\"builtin://pprint\"}",
"theModule":"function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__375(R,NAMESPACE,M,$$import68,$$import69,$lists21,$VS13) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"builtin://pprint\";\nvar D = R.undefined;\nvar L = [[M,54,7,981,54,17,991],\n[M,55,8,1000,55,19,1011],\n[M,57,7,1042,57,17,1052],\n[M,58,11,1064,58,25,1078],\n[M,72,2,1867,80,5,2146],\n[M,73,7,1901,73,16,1910],\n[M,74,12,1936,74,21,1945],\n[M,76,9,1978,76,26,1995],\n[M,76,50,2019,76,56,2025],\n[M,76,50,2019,76,78,2047],\n[M,77,12,2060,77,18,2066],\n[M,77,32,2080,77,47,2095],\n[M,77,50,2098,77,66,2114],\n[M,77,12,2060,77,74,2122],\n[M,77,32,2080,77,66,2114],\n[M,76,30,1999,76,48,2017],\n[M,74,12,1936,74,28,1952],\n[M,73,7,1901,73,22,1916],\n[M,81,2,2150,94,5,3035],\n[M,83,24,2223,83,45,2244],\n[M,83,6,2205,83,45,2244],\n[M,82,4,2176,93,7,3029],\n[M,84,49,2294,84,63,2308],\n[M,84,24,2269,84,72,2317],\n[M,84,44,2289,84,71,2316],\n[M,84,6,2251,84,72,2317],\n[M,85,26,2344,85,43,2361],\n[M,85,6,2324,85,43,2361],\n[M,86,53,2415,86,67,2429],\n[M,86,26,2388,86,76,2438],\n[M,86,48,2410,86,75,2437],\n[M,86,6,2368,86,76,2438],\n[M,87,62,2501,87,78,2517],\n[M,87,85,2524,87,101,2540],\n[M,87,34,2473,87,111,2550],\n[M,87,57,2496,87,110,2549],\n[M,87,80,2519,87,109,2548],\n[M,87,6,2445,87,111,2550],\n[M,88,59,2610,88,78,2629],\n[M,88,85,2636,88,99,2650],\n[M,88,33,2584,88,109,2660],\n[M,88,54,2605,88,108,2659],\n[M,88,80,2631,88,107,2658],\n[M,88,6,2557,88,109,2660],\n[M,89,65,2726,89,82,2743],\n[M,89,89,2750,89,106,2767],\n[M,89,37,2698,89,116,2777],\n[M,89,60,2721,89,115,2776],\n[M,89,84,2745,89,114,2775],\n[M,89,6,2667,89,116,2777],\n[M,90,53,2831,90,67,2845],\n[M,90,26,2804,90,76,2854],\n[M,90,48,2826,90,75,2853],\n[M,90,6,2784,90,76,2854],\n[M,91,53,2908,91,67,2922],\n[M,91,26,2881,91,76,2931],\n[M,91,48,2903,91,75,2930],\n[M,91,6,2861,91,76,2931],\n[M,92,66,2998,92,80,3012],\n[M,92,33,2965,92,89,3021],\n[M,92,61,2993,92,88,3020],\n[M,92,6,2938,92,89,3021],\n[M,82,10,2182,82,19,2191],\n[M,95,2,3039,97,5,3096],\n[M,96,4,3071,96,10,3077],\n[M,96,4,3071,96,23,3090],\n[M,61,2,1098,61,57,1153],\n[M,61,25,1121,61,31,1127],\n[M,61,49,1145,61,56,1152],\n[M,62,2,1156,62,67,1221],\n[M,62,13,1167,62,19,1173],\n[M,62,35,1189,62,41,1195],\n[M,62,59,1213,62,66,1220],\n[M,63,2,1224,63,59,1281],\n[M,63,27,1249,63,33,1255],\n[M,63,51,1273,63,58,1280],\n[M,64,2,1284,64,69,1351],\n[M,64,15,1297,64,21,1303],\n[M,64,37,1319,64,43,1325],\n[M,64,61,1343,64,68,1350],\n[M,65,2,1354,65,93,1445],\n[M,65,18,1370,65,27,1379],\n[M,65,36,1388,65,45,1397],\n[M,65,61,1413,65,67,1419],\n[M,65,85,1437,65,92,1444],\n[M,66,2,1448,66,89,1535],\n[M,66,19,1465,66,25,1471],\n[M,66,32,1478,66,41,1487],\n[M,66,57,1503,66,63,1509],\n[M,66,81,1527,66,88,1534],\n[M,67,2,1538,67,96,1632],\n[M,67,20,1556,67,29,1565],\n[M,67,39,1575,67,48,1584],\n[M,67,64,1600,67,70,1606],\n[M,67,88,1624,67,95,1631],\n[M,68,2,1635,68,72,1705],\n[M,68,15,1648,68,24,1657],\n[M,68,40,1673,68,46,1679],\n[M,68,64,1697,68,71,1704],\n[M,69,2,1708,69,76,1782],\n[M,69,22,1728,69,28,1734],\n[M,69,44,1750,69,50,1756],\n[M,69,68,1774,69,75,1781],\n[M,70,2,1785,70,72,1855],\n[M,70,15,1798,70,24,1807],\n[M,70,40,1823,70,46,1829],\n[M,70,64,1847,70,71,1854],\n[M,60,0,1080,98,3,3100],\n[M,100,2,3114,100,62,3174],\n[M,100,19,3131,100,25,3137],\n[M,100,38,3150,100,45,3157],\n[M,100,52,3164,100,61,3173],\n[M,99,0,3101,101,3,3178],\n[M,133,0,4450,139,3,4626],\n[M,135,26,4533,135,32,4539],\n[M,135,56,4563,135,62,4569],\n[M,135,34,4541,135,69,4576],\n[M,137,4,4590,137,30,4616],\n[M,140,0,4627,211,3,7238],\n[M,143,2,4716,145,5,4773],\n[M,144,16,4750,144,33,4767],\n[M,146,2,4776,148,5,4838],\n[M,147,4,4800,147,36,4832],\n[M,147,14,4810,147,35,4831],\n[M,149,2,4841,152,5,4961],\n[M,151,16,4921,151,50,4955],\n[M,151,21,4926,151,42,4947],\n[M,150,14,4882,150,36,4904],\n[M,153,2,4964,161,5,5201],\n[M,155,4,5029,160,7,5195],\n[M,156,10,5091,158,9,5166],\n[M,157,8,5145,157,19,5156],\n[M,159,6,5173,159,20,5187],\n[M,154,14,5002,154,36,5024],\n[M,162,2,5204,208,5,7136],\n[M,162,56,5258,162,63,5265],\n[M,165,14,5323,165,25,5334],\n[M,166,10,5345,166,22,5357],\n[M,167,10,5368,167,23,5381],\n[M,168,23,5405,168,30,5412],\n[M,169,42,5462,169,52,5472],\n[M,169,8,5428,169,53,5473],\n[M,168,6,5388,206,9,7122],\n[M,170,74,5548,170,81,5555],\n[M,170,83,5557,170,93,5567],\n[M,170,52,5526,170,94,5568],\n[M,170,8,5482,170,95,5569],\n[M,173,39,5667,173,49,5677],\n[M,173,18,5646,173,37,5665],\n[M,172,10,5615,172,22,5627],\n[M,171,8,5578,173,50,5678],\n[M,176,30,5762,176,40,5772],\n[M,176,18,5750,176,28,5760],\n[M,175,10,5717,175,24,5731],\n[M,174,8,5687,176,41,5773],\n[M,177,69,5843,177,79,5853],\n[M,177,44,5818,177,80,5854],\n[M,177,8,5782,177,81,5855],\n[M,178,70,5926,178,80,5936],\n[M,178,46,5902,178,81,5937],\n[M,178,56,5912,178,61,5917],\n[M,178,8,5864,178,82,5938],\n[M,181,12,6001,181,55,6044],\n[M,184,23,6112,184,33,6122],\n[M,183,12,6073,183,27,6088],\n[M,179,8,5947,185,13,6137],\n[M,187,70,6247,187,80,6257],\n[M,187,26,6203,187,81,6258],\n[M,186,8,6146,187,82,6259],\n[M,190,28,6345,190,38,6355],\n[M,193,32,6432,193,42,6442],\n[M,193,20,6420,193,30,6430],\n[M,192,12,6385,192,26,6399],\n[M,188,8,6268,194,13,6457],\n[M,196,55,6561,196,65,6571],\n[M,196,32,6538,196,66,6572],\n[M,197,72,6646,197,82,6656],\n[M,197,48,6622,197,83,6657],\n[M,202,51,7005,202,61,7015],\n[M,202,28,6982,202,62,7016],\n[M,204,52,7086,204,62,7096],\n[M,204,28,7062,204,63,7097],\n[M,198,18,6677,198,48,6707],\n[M,198,19,6678,198,33,6692],\n[M,196,16,6522,196,67,6573],\n[M,197,32,6606,197,84,6658],\n[M,202,12,6966,202,63,7017],\n[M,204,12,7046,204,64,7098],\n[M,196,10,6516,205,13,7112],\n[M,195,8,6466,205,13,7112],\n[M,168,12,5394,168,21,5403],\n[M,163,7,5274,163,22,5289],\n[M,162,24,5226,162,30,5232],\n[M,162,41,5243,162,51,5253],\n[M,209,13,7150,209,81,7218],\n[M,209,14,7151,209,18,7155],\n[M,209,46,7183,209,60,7197],\n[M,209,62,7199,209,78,7215],\n[M,210,2,7222,210,14,7234],\n[M,209,2,7139,209,82,7219],\n[M,140,25,4652,140,34,4661],\n[M,215,15,7324,215,65,7374],\n[M,215,32,7341,215,44,7353],\n[M,215,46,7355,215,60,7369],\n[M,216,15,7390,216,65,7440],\n[M,216,32,7407,216,44,7419],\n[M,216,46,7421,216,60,7435],\n[M,217,17,7458,217,93,7534],\n[M,217,54,7495,217,69,7510],\n[M,217,71,7512,217,88,7529],\n[M,218,14,7549,218,69,7604],\n[M,218,36,7571,218,48,7583],\n[M,218,50,7585,218,64,7599],\n[M,219,16,7621,219,44,7649],\n[M,219,31,7636,219,40,7645],\n[M,220,15,7665,220,45,7695],\n[M,221,13,7709,221,56,7752],\n[M,221,28,7724,221,44,7740],\n[M,223,0,7754,223,45,7799],\n[M,223,25,7779,223,41,7795],\n[M,223,29,7783,223,40,7794],\n[M,223,16,7770,223,22,7776],\n[M,235,0,7978,235,46,8024],\n[M,235,15,7993,235,42,8020],\n[M,235,23,8001,235,31,8009],\n[M,239,0,8086,245,3,8259],\n[M,240,2,8117,244,5,8255],\n[M,241,23,8197,241,30,8204],\n[M,242,10,8215,242,36,8241],\n[M,242,16,8221,242,36,8241],\n[M,242,22,8227,242,35,8240],\n[M,242,28,8233,242,35,8240],\n[M,246,0,8260,246,62,8322],\n[M,246,37,8297,246,50,8310],\n[M,246,17,8277,246,58,8318],\n[M,246,26,8286,246,35,8295],\n[M,247,0,8323,247,61,8384],\n[M,247,36,8359,247,49,8372],\n[M,247,17,8340,247,57,8380],\n[M,248,0,8385,248,45,8430],\n[M,248,15,8400,248,41,8426],\n[M,248,21,8406,248,40,8425],\n[M,248,21,8406,248,31,8416],\n[M,249,0,8431,249,45,8476],\n[M,249,15,8446,249,41,8472],\n[M,249,21,8452,249,40,8471],\n[M,249,21,8452,249,31,8462],\n[M,250,0,8477,250,47,8524],\n[M,250,17,8494,250,43,8520],\n[M,250,23,8500,250,42,8519],\n[M,250,23,8500,250,33,8510],\n[M,253,0,8569,253,53,8622],\n[M,253,15,8584,253,49,8618],\n[M,253,21,8590,253,48,8617],\n[M,253,21,8590,253,35,8604],\n[M,254,0,8623,254,53,8676],\n[M,254,15,8638,254,49,8672],\n[M,254,21,8644,254,48,8671],\n[M,254,21,8644,254,35,8658],\n[M,256,0,8678,256,37,8715],\n[M,256,16,8694,256,33,8711],\n[M,256,22,8700,256,32,8710],\n[M,257,0,8716,257,61,8777],\n[M,257,24,8740,257,57,8773],\n[M,257,30,8746,257,56,8772],\n[M,257,34,8750,257,56,8772],\n[M,257,42,8758,257,55,8771],\n[M,257,42,8758,257,51,8767],\n[M,258,0,8778,260,3,8906],\n[M,259,2,8866,259,38,8902],\n[M,259,16,8880,259,33,8897],\n[M,259,16,8880,259,28,8892],\n[M,259,20,8884,259,28,8892],\n[M,258,15,8793,258,21,8799],\n[M,258,28,8806,258,34,8812],\n[M,258,42,8820,258,51,8829],\n[M,258,58,8836,258,67,8845],\n[M,258,74,8852,258,83,8861],\n[M,261,0,8907,263,3,9041],\n[M,262,2,9001,262,38,9037],\n[M,262,19,9018,262,36,9035],\n[M,262,19,9018,262,32,9031],\n[M,262,24,9023,262,32,9031],\n[M,261,21,8928,261,27,8934],\n[M,261,34,8941,261,40,8947],\n[M,261,48,8955,261,57,8964],\n[M,261,64,8971,261,73,8980],\n[M,261,80,8987,261,89,8996],\n[M,264,0,9042,268,3,9292],\n[M,265,23,9167,265,66,9210],\n[M,265,29,9173,265,65,9209],\n[M,265,36,9180,265,65,9209],\n[M,265,44,9188,265,64,9208],\n[M,265,44,9188,265,53,9197],\n[M,266,8,9219,266,71,9282],\n[M,266,14,9225,266,70,9281],\n[M,266,14,9225,266,62,9273],\n[M,266,53,9264,266,62,9273],\n[M,266,14,9225,266,50,9261],\n[M,266,21,9232,266,50,9261],\n[M,266,29,9240,266,49,9260],\n[M,266,29,9240,266,38,9249],\n[M,264,18,9060,264,24,9066],\n[M,264,31,9073,264,37,9079],\n[M,264,47,9089,264,56,9098],\n[M,264,70,9112,264,79,9121],\n[M,264,90,9132,264,99,9141],\n[M,269,0,9293,273,3,9569],\n[M,270,23,9423,270,73,9473],\n[M,270,29,9429,270,72,9472],\n[M,270,36,9436,270,72,9472],\n[M,270,44,9444,270,71,9471],\n[M,270,50,9450,270,70,9470],\n[M,270,50,9450,270,59,9459],\n[M,271,8,9482,271,85,9559],\n[M,271,14,9488,271,84,9558],\n[M,271,60,9534,271,84,9558],\n[M,271,66,9540,271,83,9557],\n[M,271,66,9540,271,75,9549],\n[M,271,14,9488,271,57,9531],\n[M,271,21,9495,271,57,9531],\n[M,271,29,9503,271,56,9530],\n[M,271,35,9509,271,55,9529],\n[M,271,35,9509,271,44,9518],\n[M,269,23,9316,269,29,9322],\n[M,269,36,9329,269,42,9335],\n[M,269,52,9345,269,61,9354],\n[M,269,75,9368,269,84,9377],\n[M,269,95,9388,269,104,9397],\n[M,275,0,9571,282,3,9767],\n[M,276,2,9625,281,5,9763],\n[M,279,10,9736,279,23,9749],\n[M,279,10,9736,279,19,9745],\n[M,275,20,9591,275,29,9600],\n[M,275,39,9610,275,49,9620],\n[M,283,0,9768,287,3,10011],\n[M,284,5,9918,284,25,9938],\n[M,285,8,9953,285,56,10001],\n[M,285,29,9974,285,48,9993],\n[M,283,27,9795,283,33,9801],\n[M,283,40,9808,283,46,9814],\n[M,283,56,9824,283,65,9833],\n[M,283,75,9843,283,84,9852],\n[M,283,93,9861,283,102,9870],\n[M,283,113,9881,283,122,9890],\n[M,283,132,9900,283,142,9910],\n[M,289,0,10013,291,3,10166],\n[M,290,2,10076,290,88,10162],\n[M,290,8,10082,290,87,10161],\n[M,290,16,10090,290,87,10161],\n[M,290,22,10096,290,86,10160],\n[M,290,62,10136,290,86,10160],\n[M,290,68,10142,290,85,10159],\n[M,290,68,10142,290,77,10151],\n[M,290,22,10096,290,59,10133],\n[M,290,29,10103,290,59,10133],\n[M,290,35,10109,290,58,10132],\n[\"dummy location\"],\n[M,252,13,8560,252,21,8568],\n[M,251,13,8538,251,21,8546],\n[M,237,12,8068,237,28,8084],\n[M,237,19,8075,237,28,8084],\n[M,236,13,8038,236,30,8055],\n[M,236,21,8046,236,30,8055],\n[M,233,7,7968,233,15,7976],\n[M,232,8,7952,232,16,7960],\n[M,231,9,7935,231,17,7943],\n[M,230,9,7917,230,17,7925],\n[M,229,9,7899,229,17,7907],\n[M,228,9,7881,228,17,7889],\n[M,227,9,7863,227,17,7871],\n[M,226,9,7845,226,17,7853],\n[M,225,9,7827,225,17,7835],\n[M,224,9,7809,224,17,7817],\n[M,56,12,1024,56,22,1034],\n[M,3,0,13,348,3,11754]];\nvar $type$Nothing1 = R.gF(R.modules[\"builtin://global\"],\"defined-types\")[\"Nothing\"];\nvar string$length1 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"string-length\"];\nvar raise1 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"raise\"];\nvar tostring1 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"tostring\"];\nvar nothing2 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"nothing\"];\nvar builtins1 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"builtins\"];\nvar _minus9 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"_minus\"];\nvar $type$Number3 = R.gF(R.modules[\"builtin://global\"],\"defined-types\")[\"Number\"];\nvar string$repeat1 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"string-repeat\"];\nvar _greaterequal2 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"_greaterequal\"];\nvar _plus5 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"_plus\"];\nvar $type$Boolean6 = R.gF(R.modules[\"builtin://global\"],\"defined-types\")[\"Boolean\"];\nvar $type$String8 = R.gF(R.modules[\"builtin://global\"],\"defined-types\")[\"String\"];\nvar lists61 = R.gF($lists21,\"values\");\nvar VS62 = R.gF($VS13,\"values\");\nvar lists65 = R.gF($lists21,\"types\");\nvar VS66 = R.gF($VS13,\"types\");\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$$import68);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$$import69);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$lists21);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$VS13);\nvar $cases_dispatch1312 = {\"mt-doc\":7,\n\"concat\":8,\n\"str\":10,\n\"blank\":13,\n\"align\":16,\n\"nest\":18,\n\"hardline\":21,\n\"if-flat\":25,\n\"align-spaces\":30,\n\"group\":35};\nvar $cases_dispatch353 = {\"mt-doc\":2,\n\"str\":3,\n\"hardline\":6,\n\"blank\":7,\n\"concat\":10,\n\"nest\":15,\n\"if-flat\":20,\n\"group\":25,\n\"align\":28,\n\"align-spaces\":31};\nvar $toplevel71 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__375($$resumer14) {\nvar $step70 = 0;\nvar $elidedFrames105 = 0;\nvar $ans102 = D;\nvar $al103 = L[375];\nif(R.isAR($$resumer14)) {\n$step70 = $$resumer14.step;\n$al103 = $$resumer14.from;\n$ans102 = $$resumer14.ans;\n$elidedFrames105 = $$resumer14.elidedFrames;\n$resumer14 = $$resumer14.args[0];\nif$flat1508 = $$resumer14.vars[0];\nis$if$flat491 = $$resumer14.vars[1];\nis$align$spaces496 = $$resumer14.vars[2];\nhang1764 = $$resumer14.vars[3];\nstr1495 = $$resumer14.vars[4];\ndquote1737 = $$resumer14.vars[5];\nis$PPrintDoc466 = $$resumer14.vars[6];\nItem1942 = $$resumer14.vars[7];\nis$empty1118 = $$resumer14.vars[8];\nprefix1777 = $$resumer14.vars[9];\nvert1666 = $$resumer14.vars[10];\nparens1680 = $$resumer14.vars[11];\nprovides1943 = $$resumer14.vars[12];\nis$group498 = $$resumer14.vars[13];\nsemi1566 = $$resumer14.vars[14];\nconcat1936 = $$resumer14.vars[15];\nsemibreak1940 = $$resumer14.vars[16];\nis$concat484 = $$resumer14.vars[17];\nsquote1750 = $$resumer14.vars[18];\ncomma1516 = $$resumer14.vars[19];\nis$align494 = $$resumer14.vars[20];\ncollect$concats527 = $$resumer14.vars[21];\nlbrack1700 = $$resumer14.vars[22];\nflow1647 = $$resumer14.vars[23];\nnumber1499 = $$resumer14.vars[24];\nis$Item510 = $$resumer14.vars[25];\nstr$dquote1711 = $$resumer14.vars[26];\nblank1507 = $$resumer14.vars[27];\ninfix1801 = $$resumer14.vars[28];\nsbreak1515 = $$resumer14.vars[29];\nalign$spaces497 = $$resumer14.vars[30];\nis$item511 = $$resumer14.vars[31];\nempty1117 = $$resumer14.vars[32];\nlabel$align$surround1935 = $$resumer14.vars[33];\nlbrace1688 = $$resumer14.vars[34];\nbraces1692 = $$resumer14.vars[35];\nis$mt$doc120 = $$resumer14.vars[36];\nbrackets1703 = $$resumer14.vars[37];\nis$nest487 = $$resumer14.vars[38];\nrbrack1701 = $$resumer14.vars[39];\nalign1761 = $$resumer14.vars[40];\nseparate1895 = $$resumer14.vars[41];\nsurround$separate1921 = $$resumer14.vars[42];\nis$str471 = $$resumer14.vars[43];\nlist1321 = $$resumer14.vars[44];\ncommabreak1939 = $$resumer14.vars[45];\nlparen1675 = $$resumer14.vars[46];\nis$hardline475 = $$resumer14.vars[47];\nflow$map1628 = $$resumer14.vars[48];\nlangle1937 = $$resumer14.vars[49];\nrbrace1689 = $$resumer14.vars[50];\nPPrintDoc354 = $$resumer14.vars[51];\nitem512 = $$resumer14.vars[52];\ninfix$break1819 = $$resumer14.vars[53];\nnest1760 = $$resumer14.vars[54];\ngroup1587 = $$resumer14.vars[55];\nformat367 = $$resumer14.vars[56];\nanswer1944 = $$resumer14.vars[57];\nList1317 = $$resumer14.vars[58];\nlink1116 = $$resumer14.vars[59];\nsurround1846 = $$resumer14.vars[60];\nrparen1676 = $$resumer14.vars[61];\nrangle1938 = $$resumer14.vars[62];\nsoft$surround1871 = $$resumer14.vars[63];\nmt$doc1625 = $$resumer14.vars[64];\nstr$squote1748 = $$resumer14.vars[65];\nis$blank479 = $$resumer14.vars[66];\nhardline1509 = $$resumer14.vars[67];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans102 = R.mC();\n}\nwhile(!R.isContinuation($ans102)) {\nswitch($step70) {\ncase 0: var PPrintDoc106 = R.nB(\"PPrintDoc\",L[107]);\nvar PPrintDoc354 = R.mBA(PPrintDoc106,\"PPrintDoc\");\nvar Item107 = R.nB(\"Item\",L[112]);\nvar Item1942 = R.mBA(Item107,\"Item\");\n$al103 = L[0];\nvar link1116 = G(lists61,\"link\",L[0]);\n$al103 = L[1];\nvar empty1117 = G(lists61,\"empty\",L[1]);\nvar List1317 = R.gDA(L[374],\"lists\",lists65,\"List\");\n$al103 = L[2];\nvar list1321 = G(lists61,\"list\",L[2]);\n$al103 = L[3];\nvar is$empty1118 = G(lists61,\"is-empty\",L[3]);\nvar PPrintDoc464 = {\"$var\":D};\nvar is$PPrintDoc466 = {\"$var\":D};\nvar is$mt$doc120 = {\"$var\":D};\nvar mt$doc469 = {\"$var\":D};\nvar is$str471 = {\"$var\":D};\nvar str473 = {\"$var\":D};\nvar is$hardline475 = {\"$var\":D};\nvar hardline477 = {\"$var\":D};\nvar is$blank479 = {\"$var\":D};\nvar blank482 = {\"$var\":D};\nvar is$concat484 = {\"$var\":D};\nvar concat123 = {\"$var\":D};\nvar is$nest487 = {\"$var\":D};\nvar nest489 = {\"$var\":D};\nvar is$if$flat491 = {\"$var\":D};\nvar if$flat493 = {\"$var\":D};\nvar is$align494 = {\"$var\":D};\nvar align495 = {\"$var\":D};\nvar is$align$spaces496 = {\"$var\":D};\nvar align$spaces497 = {\"$var\":D};\nvar is$group498 = {\"$var\":D};\nvar group499 = {\"$var\":D};\nvar Item509 = {\"$var\":D};\nvar is$Item510 = {\"$var\":D};\nvar is$item511 = {\"$var\":D};\nvar item512 = {\"$var\":D};\nvar collect$concats527 = {\"$var\":D};\nvar format367 = {\"$var\":D};\nvar $temp_full112 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__4($self222,$other113) {\nvar $step111 = 0;\nvar $elidedFrames119 = 0;\nvar $ans116 = D;\nvar $al117 = L[4];\nif(R.isAR($self222)) {\n$step111 = $self222.step;\n$al117 = $self222.from;\n$ans116 = $self222.ans;\n$elidedFrames119 = $self222.elidedFrames;\nself222 = $self222.args[0];\nother113 = $self222.args[1];\nanf_fun125 = $self222.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[4],2,$t,true);\n}\nvar self222 = $self222;\nvar other113 = $other113;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans116 = R.mC();\n}\nwhile(!R.isContinuation($ans116)) {\nswitch($step111) {\ncase 0: var anf_fun121 = is$mt$doc120.$var === D?U(L[5],\"is-mt-doc\"):is$mt$doc120.$var;\n$step111 = 1;\n$al117 = L[17];\nif(typeof(anf_fun121.app) !== \"function\") {\nR.ffi.throwNonFunApp($al117,anf_fun121);\n}\n$ans116 = anf_fun121.app(self222);\nbreak;\ncase 1: var anf_if170 = $ans116;\n$step111 = R.checkPyretTrue(anf_if170)?2:3;\nbreak;\ncase 2: $step111 = 13;\n$ans116 = other113;\nbreak;\ncase 3: var anf_fun122 = is$mt$doc120.$var === D?U(L[6],\"is-mt-doc\"):is$mt$doc120.$var;\n$step111 = 4;\n$al117 = L[16];\nif(typeof(anf_fun122.app) !== \"function\") {\nR.ffi.throwNonFunApp($al117,anf_fun122);\n}\n$ans116 = anf_fun122.app(other113);\nbreak;\ncase 4: var anf_if169 = $ans116;\n$step111 = R.checkPyretTrue(anf_if169)?5:6;\nbreak;\ncase 5: $step111 = 13;\n$ans116 = self222;\nbreak;\ncase 6: $al117 = L[7];\nvar anf_if168 = G(self222,\"has-hardline\",L[7]);\n$step111 = R.checkPyretTrue(anf_if168)?7:8;\nbreak;\ncase 7: $step111 = 9;\n$ans116 = (true);\nbreak;\ncase 8: $al117 = L[15];\nvar anf_arg167 = G(other113,\"has-hardline\",L[15]);\n$step111 = 9;\n$al117 = L[15];\n$ans116 = R.checkWrapBoolean(anf_arg167);\nbreak;\ncase 9: var anf_if126 = $ans116;\n$step111 = R.checkPyretTrue(anf_if126)?10:11;\nbreak;\ncase 10: var anf_fun124 = concat123.$var === D?U(L[8],\"concat\"):concat123.$var;\n$step111 = 13;\n$al117 = L[9];\nif(typeof(anf_fun124.app) !== \"function\") {\nR.ffi.throwNonFunApp($al117,anf_fun124);\n}\n$ans116 = anf_fun124.app(self222,other113,(0),(true));\nbreak;\ncase 11: var anf_fun125 = concat123.$var === D?U(L[10],\"concat\"):concat123.$var;\n$al117 = L[11];\nvar anf_arg289 = G(self222,\"flat-width\",L[11]);\n$al117 = L[12];\nvar anf_arg497 = G(other113,\"flat-width\",L[12]);\n$step111 = 12;\n$al117 = L[14];\n// omitting isFunction check;\n$ans116 = _plus5.app(anf_arg289,anf_arg497);\nbreak;\ncase 12: var anf_arg498 = $ans116;\n$step111 = 13;\n$al117 = L[13];\nif(typeof(anf_fun125.app) !== \"function\") {\nR.ffi.throwNonFunApp($al117,anf_fun125);\n}\n$ans116 = anf_fun125.app(self222,other113,anf_arg498,(false));\nbreak;\ncase 13: ++R.GAS;\nreturn $ans116;\ndefault: R.ffi.throwSpinnakerError(L[4],$step111);\n}\n}\nif($step111 !== 13) {\n$ans116.stack[R.EXN_STACKHEIGHT++] = R.mAR($al117,$temp_full112,$step111,[self222,other113],[anf_fun125],$elidedFrames119);\n}\nreturn $ans116;\n};\nvar anf_shared371 = R.makeMethod1($temp_full112,\"_plus\");\nvar $temp_full176 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__18($self252) {\nvar $step175 = 0;\nvar $elidedFrames185 = 0;\nvar $ans182 = D;\nvar $al183 = L[18];\nif(R.isAR($self252)) {\n$step175 = $self252.step;\n$al183 = $self252.from;\n$ans182 = $self252.ans;\n$elidedFrames185 = $self252.elidedFrames;\nself252 = $self252.args[0];\nsnd221 = $self252.vars[0];\nanf_arg274 = $self252.vars[1];\nanf_arg233 = $self252.vars[2];\nanf_arg556 = $self252.vars[3];\nvert279 = $self252.vars[4];\ncases186 = $self252.vars[5];\nd240 = $self252.vars[6];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[18],1,$t,true);\n}\nvar self252 = $self252;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans182 = R.mC();\n}\nwhile(!R.isContinuation($ans182)) {\nswitch($step175) {\ncase 0: var cases186 = self252;\n$step175 = 1;\n$al183 = L[62];\nvar $ann$check356 = R._cA(L[62],PPrintDoc354,cases186);\nif(R.isContinuation($ann$check356)) {\n$ans182 = $ann$check356;\n}\nbreak;\ncase 1: $al183 = L[21];\n$step175 = $cases_dispatch353[cases186.$name] || 34;\nbreak;\ncase 2: if(cases186.$arity !== 2) {\nif(cases186.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[20],2,cases186.$arity,L[21],cases186.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[20],true,L[21],cases186.$loc);\n}\n}\nvar $fn194 = cases186.$constructor.$fieldNames;\nR.dF(cases186.dict[$fn194[0]],cases186.$mut_fields_mask[0],false);\nR.dF(cases186.dict[$fn194[1]],cases186.$mut_fields_mask[1],false);\n$step175 = 35;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-str\",L[19],(\"EmptyDoc\"));\nbreak;\ncase 3: if(cases186.$arity !== 3) {\nif(cases186.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[25],3,cases186.$arity,L[21],cases186.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[25],true,L[21],cases186.$loc);\n}\n}\nvar $fn199 = cases186.$constructor.$fieldNames;\nvar s197 = R.dF(cases186.dict[$fn199[0]],cases186.$mut_fields_mask[0],false);\nR.dF(cases186.dict[$fn199[1]],cases186.$mut_fields_mask[1],false);\nR.dF(cases186.dict[$fn199[2]],cases186.$mut_fields_mask[2],false);\n$step175 = 4;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-value\",L[22],s197);\nbreak;\ncase 4: var anf_arg310 = $ans182;\n$step175 = 5;\n$al183 = L[24];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al183,link1116);\n}\n$ans182 = link1116.app(anf_arg310,empty1117);\nbreak;\ncase 5: var anf_arg510 = $ans182;\n$step175 = 35;\n$ans182 = R.maybeMethodCall2(VS62,\"vs-constr\",L[23],(\"Str\"),anf_arg510);\nbreak;\ncase 6: if(cases186.$arity !== 2) {\nif(cases186.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[27],2,cases186.$arity,L[21],cases186.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[27],true,L[21],cases186.$loc);\n}\n}\nvar $fn203 = cases186.$constructor.$fieldNames;\nR.dF(cases186.dict[$fn203[0]],cases186.$mut_fields_mask[0],false);\nR.dF(cases186.dict[$fn203[1]],cases186.$mut_fields_mask[1],false);\n$step175 = 35;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-str\",L[26],(\"CRLF\"));\nbreak;\ncase 7: if(cases186.$arity !== 3) {\nif(cases186.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[31],3,cases186.$arity,L[21],cases186.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[31],true,L[21],cases186.$loc);\n}\n}\nvar $fn217 = cases186.$constructor.$fieldNames;\nvar n206 = R.dF(cases186.dict[$fn217[0]],cases186.$mut_fields_mask[0],false);\nR.dF(cases186.dict[$fn217[1]],cases186.$mut_fields_mask[1],false);\nR.dF(cases186.dict[$fn217[2]],cases186.$mut_fields_mask[2],false);\n$step175 = 8;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-value\",L[28],n206);\nbreak;\ncase 8: var anf_arg511 = $ans182;\n$step175 = 9;\n$al183 = L[30];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al183,link1116);\n}\n$ans182 = link1116.app(anf_arg511,empty1117);\nbreak;\ncase 9: var anf_arg214 = $ans182;\n$step175 = 35;\n$ans182 = R.maybeMethodCall2(VS62,\"vs-constr\",L[29],(\"Blank\"),anf_arg214);\nbreak;\ncase 10: if(cases186.$arity !== 4) {\nif(cases186.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[37],4,cases186.$arity,L[21],cases186.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[37],true,L[21],cases186.$loc);\n}\n}\nvar $fn236 = cases186.$constructor.$fieldNames;\nvar fst220 = R.dF(cases186.dict[$fn236[0]],cases186.$mut_fields_mask[0],false);\nvar snd221 = R.dF(cases186.dict[$fn236[1]],cases186.$mut_fields_mask[1],false);\nR.dF(cases186.dict[$fn236[2]],cases186.$mut_fields_mask[2],false);\nR.dF(cases186.dict[$fn236[3]],cases186.$mut_fields_mask[3],false);\n$step175 = 11;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-value\",L[32],fst220);\nbreak;\ncase 11: var anf_arg233 = $ans182;\n$step175 = 12;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-value\",L[33],snd221);\nbreak;\ncase 12: var anf_arg524 = $ans182;\n$step175 = 13;\n$al183 = L[36];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al183,link1116);\n}\n$ans182 = link1116.app(anf_arg524,empty1117);\nbreak;\ncase 13: var anf_arg525 = $ans182;\n$step175 = 14;\n$al183 = L[35];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al183,link1116);\n}\n$ans182 = link1116.app(anf_arg233,anf_arg525);\nbreak;\ncase 14: var anf_arg234 = $ans182;\n$step175 = 35;\n$ans182 = R.maybeMethodCall2(VS62,\"vs-constr\",L[34],(\"Concat\"),anf_arg234);\nbreak;\ncase 15: if(cases186.$arity !== 4) {\nif(cases186.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[43],4,cases186.$arity,L[21],cases186.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[43],true,L[21],cases186.$loc);\n}\n}\nvar $fn276 = cases186.$constructor.$fieldNames;\nvar indent239 = R.dF(cases186.dict[$fn276[0]],cases186.$mut_fields_mask[0],false);\nvar d240 = R.dF(cases186.dict[$fn276[1]],cases186.$mut_fields_mask[1],false);\nR.dF(cases186.dict[$fn276[2]],cases186.$mut_fields_mask[2],false);\nR.dF(cases186.dict[$fn276[3]],cases186.$mut_fields_mask[3],false);\n$step175 = 16;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-value\",L[38],indent239);\nbreak;\ncase 16: var anf_arg274 = $ans182;\n$step175 = 17;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-value\",L[39],d240);\nbreak;\ncase 17: var anf_arg539 = $ans182;\n$step175 = 18;\n$al183 = L[42];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al183,link1116);\n}\n$ans182 = link1116.app(anf_arg539,empty1117);\nbreak;\ncase 18: var anf_arg540 = $ans182;\n$step175 = 19;\n$al183 = L[41];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al183,link1116);\n}\n$ans182 = link1116.app(anf_arg274,anf_arg540);\nbreak;\ncase 19: var anf_arg404 = $ans182;\n$step175 = 35;\n$ans182 = R.maybeMethodCall2(VS62,\"vs-constr\",L[40],(\"Nest\"),anf_arg404);\nbreak;\ncase 20: if(cases186.$arity !== 4) {\nif(cases186.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[49],4,cases186.$arity,L[21],cases186.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[49],true,L[21],cases186.$loc);\n}\n}\nvar $fn322 = cases186.$constructor.$fieldNames;\nvar flat278 = R.dF(cases186.dict[$fn322[0]],cases186.$mut_fields_mask[0],false);\nvar vert279 = R.dF(cases186.dict[$fn322[1]],cases186.$mut_fields_mask[1],false);\nR.dF(cases186.dict[$fn322[2]],cases186.$mut_fields_mask[2],false);\nR.dF(cases186.dict[$fn322[3]],cases186.$mut_fields_mask[3],false);\n$step175 = 21;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-value\",L[44],flat278);\nbreak;\ncase 21: var anf_arg556 = $ans182;\n$step175 = 22;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-value\",L[45],vert279);\nbreak;\ncase 22: var anf_arg320 = $ans182;\n$step175 = 23;\n$al183 = L[48];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al183,link1116);\n}\n$ans182 = link1116.app(anf_arg320,empty1117);\nbreak;\ncase 23: var anf_arg369 = $ans182;\n$step175 = 24;\n$al183 = L[47];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al183,link1116);\n}\n$ans182 = link1116.app(anf_arg556,anf_arg369);\nbreak;\ncase 24: var anf_arg565 = $ans182;\n$step175 = 35;\n$ans182 = R.maybeMethodCall2(VS62,\"vs-constr\",L[46],(\"IfFlat\"),anf_arg565);\nbreak;\ncase 25: if(cases186.$arity !== 3) {\nif(cases186.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[53],3,cases186.$arity,L[21],cases186.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[53],true,L[21],cases186.$loc);\n}\n}\nvar $fn337 = cases186.$constructor.$fieldNames;\nvar d325 = R.dF(cases186.dict[$fn337[0]],cases186.$mut_fields_mask[0],false);\nR.dF(cases186.dict[$fn337[1]],cases186.$mut_fields_mask[1],false);\nR.dF(cases186.dict[$fn337[2]],cases186.$mut_fields_mask[2],false);\n$step175 = 26;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-value\",L[50],d325);\nbreak;\ncase 26: var anf_arg566 = $ans182;\n$step175 = 27;\n$al183 = L[52];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al183,link1116);\n}\n$ans182 = link1116.app(anf_arg566,empty1117);\nbreak;\ncase 27: var anf_arg335 = $ans182;\n$step175 = 35;\n$ans182 = R.maybeMethodCall2(VS62,\"vs-constr\",L[51],(\"Group\"),anf_arg335);\nbreak;\ncase 28: if(cases186.$arity !== 3) {\nif(cases186.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[57],3,cases186.$arity,L[21],cases186.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[57],true,L[21],cases186.$loc);\n}\n}\nvar $fn342 = cases186.$constructor.$fieldNames;\nvar d339 = R.dF(cases186.dict[$fn342[0]],cases186.$mut_fields_mask[0],false);\nR.dF(cases186.dict[$fn342[1]],cases186.$mut_fields_mask[1],false);\nR.dF(cases186.dict[$fn342[2]],cases186.$mut_fields_mask[2],false);\n$step175 = 29;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-value\",L[54],d339);\nbreak;\ncase 29: var anf_arg340 = $ans182;\n$step175 = 30;\n$al183 = L[56];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al183,link1116);\n}\n$ans182 = link1116.app(anf_arg340,empty1117);\nbreak;\ncase 30: var anf_arg576 = $ans182;\n$step175 = 35;\n$ans182 = R.maybeMethodCall2(VS62,\"vs-constr\",L[55],(\"Align\"),anf_arg576);\nbreak;\ncase 31: if(cases186.$arity !== 3) {\nif(cases186.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[61],3,cases186.$arity,L[21],cases186.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[61],true,L[21],cases186.$loc);\n}\n}\nvar $fn350 = cases186.$constructor.$fieldNames;\nvar n346 = R.dF(cases186.dict[$fn350[0]],cases186.$mut_fields_mask[0],false);\nR.dF(cases186.dict[$fn350[1]],cases186.$mut_fields_mask[1],false);\nR.dF(cases186.dict[$fn350[2]],cases186.$mut_fields_mask[2],false);\n$step175 = 32;\n$ans182 = R.maybeMethodCall1(VS62,\"vs-value\",L[58],n346);\nbreak;\ncase 32: var anf_arg577 = $ans182;\n$step175 = 33;\n$al183 = L[60];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al183,link1116);\n}\n$ans182 = link1116.app(anf_arg577,empty1117);\nbreak;\ncase 33: var anf_arg164 = $ans182;\n$step175 = 35;\n$ans182 = R.maybeMethodCall2(VS62,\"vs-constr\",L[59],(\"AlignSpaces\"),anf_arg164);\nbreak;\ncase 34: $step175 = 35;\n$al183 = L[21];\n$ans182 = R.throwNoCasesMatched(L[21],cases186);\nbreak;\ncase 35: ++R.GAS;\nreturn $ans182;\ndefault: R.ffi.throwSpinnakerError(L[18],$step175);\n}\n}\nif($step175 !== 35) {\n$ans182.stack[R.EXN_STACKHEIGHT++] = R.mAR($al183,$temp_full176,$step175,[self252],[snd221,anf_arg274,anf_arg233,anf_arg556,vert279,cases186,d240],$elidedFrames185);\n}\nreturn $ans182;\n};\nvar anf_shared372 = R.makeMethod0($temp_full176,\"_output\");\nvar $temp_full361 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__63($self379,$width362) {\nvar $step360 = 0;\nvar $elidedFrames366 = 0;\nvar $ans363 = D;\nvar $al364 = L[63];\nif(R.isAR($self379)) {\n$step360 = $self379.step;\n$al364 = $self379.from;\n$ans363 = $self379.ans;\n$elidedFrames366 = $self379.elidedFrames;\nself379 = $self379.args[0];\nwidth362 = $self379.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[63],2,$t,true);\n}\nvar self379 = $self379;\nvar width362 = $width362;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans363 = R.mC();\n}\nwhile(!R.isContinuation($ans363)) {\nswitch($step360) {\ncase 0: var anf_fun368 = format367.$var === D?U(L[64],\"format\"):format367.$var;\n$step360 = 1;\n$al364 = L[65];\nif(typeof(anf_fun368.app) !== \"function\") {\nR.ffi.throwNonFunApp($al364,anf_fun368);\n}\n$ans363 = anf_fun368.app(width362,self379);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans363;\ndefault: R.ffi.throwSpinnakerError(L[63],$step360);\n}\n}\nif($step360 !== 1) {\n$ans363.stack[R.EXN_STACKHEIGHT++] = R.mAR($al364,$temp_full361,$step360,[self379,width362],[],$elidedFrames366);\n}\nreturn $ans363;\n};\nvar anf_shared373 = R.makeMethod1($temp_full361,\"pretty\");\nvar $mt$doc_getfields378 = function singleton_variant(f) {\nreturn f(this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $mt$doc_mutablemask377 = [false,false];\nvar $mt$doc$base374 = {\"$fieldNames\":[\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared371,\n\"_output\":anf_shared372,\n\"pretty\":anf_shared373,\n\"_match\":R.mM(\"mt-doc\",2)};\nvar $mt$doc$brander375 = R.nB(\"mt-doc\",L[66]);\nvar $mt$doc$brands376 = {};\n$mt$doc$brands376[PPrintDoc106._brand] = true;\n$mt$doc$brands376[$mt$doc$brander375._brand] = true;\nvar mt$doc379 = R.mVC(L[66],function $synthesizedConstructor_$mt$doc$base() {\nreturn [$type$Number3,$type$Boolean6];\n},[\"flat$width380\",\"has$hardline381\"],[L[67],L[68]],[false,false],[\"flat$width380\",\"has$hardline381\"],$mt$doc_mutablemask377,$mt$doc$base374,$mt$doc$brands376,\"mt-doc\",$mt$doc_getfields378,$mt$doc$base374);\nvar $str_getfields386 = function singleton_variant(f) {\nreturn f(this.dict[\"s\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $str_mutablemask385 = [false,false,false];\nvar $str$base382 = {\"$fieldNames\":[\"s\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared371,\n\"_output\":anf_shared372,\n\"pretty\":anf_shared373,\n\"_match\":R.mM(\"str\",3)};\nvar $str$brander383 = R.nB(\"str\",L[69]);\nvar $str$brands384 = {};\n$str$brands384[PPrintDoc106._brand] = true;\n$str$brands384[$str$brander383._brand] = true;\nvar str387 = R.mVC(L[69],function $synthesizedConstructor_$str$base() {\nreturn [$type$String8,$type$Number3,$type$Boolean6];\n},[\"s388\",\"flat$width389\",\"has$hardline390\"],[L[70],L[71],L[72]],[false,false,false],[\"s388\",\"flat$width389\",\"has$hardline390\"],$str_mutablemask385,$str$base382,$str$brands384,\"str\",$str_getfields386,$str$base382);\nvar $hardline_getfields395 = function singleton_variant(f) {\nreturn f(this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $hardline_mutablemask394 = [false,false];\nvar $hardline$base391 = {\"$fieldNames\":[\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared371,\n\"_output\":anf_shared372,\n\"pretty\":anf_shared373,\n\"_match\":R.mM(\"hardline\",2)};\nvar $hardline$brander392 = R.nB(\"hardline\",L[73]);\nvar $hardline$brands393 = {};\n$hardline$brands393[PPrintDoc106._brand] = true;\n$hardline$brands393[$hardline$brander392._brand] = true;\nvar hardline396 = R.mVC(L[73],function $synthesizedConstructor_$hardline$base() {\nreturn [$type$Number3,$type$Boolean6];\n},[\"flat$width397\",\"has$hardline398\"],[L[74],L[75]],[false,false],[\"flat$width397\",\"has$hardline398\"],$hardline_mutablemask394,$hardline$base391,$hardline$brands393,\"hardline\",$hardline_getfields395,$hardline$base391);\nvar $blank_getfields403 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $blank_mutablemask402 = [false,false,false];\nvar $blank$base399 = {\"$fieldNames\":[\"n\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared371,\n\"_output\":anf_shared372,\n\"pretty\":anf_shared373,\n\"_match\":R.mM(\"blank\",3)};\nvar $blank$brander400 = R.nB(\"blank\",L[76]);\nvar $blank$brands401 = {};\n$blank$brands401[PPrintDoc106._brand] = true;\n$blank$brands401[$blank$brander400._brand] = true;\nvar blank404 = R.mVC(L[76],function $synthesizedConstructor_$blank$base() {\nreturn [$type$Number3,$type$Number3,$type$Boolean6];\n},[\"n405\",\"flat$width406\",\"has$hardline407\"],[L[77],L[78],L[79]],[false,false,false],[\"n405\",\"flat$width406\",\"has$hardline407\"],$blank_mutablemask402,$blank$base399,$blank$brands401,\"blank\",$blank_getfields403,$blank$base399);\nvar $concat_getfields412 = function singleton_variant(f) {\nreturn f(this.dict[\"fst\"],this.dict[\"snd\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $concat_mutablemask411 = [false,false,false,false];\nvar $concat$base408 = {\"$fieldNames\":[\"fst\",\"snd\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared371,\n\"_output\":anf_shared372,\n\"pretty\":anf_shared373,\n\"_match\":R.mM(\"concat\",4)};\nvar $concat$brander409 = R.nB(\"concat\",L[80]);\nvar $concat$brands410 = {};\n$concat$brands410[PPrintDoc106._brand] = true;\n$concat$brands410[$concat$brander409._brand] = true;\nvar concat413 = R.mVC(L[80],function $synthesizedConstructor_$concat$base() {\nreturn [PPrintDoc354,PPrintDoc354,$type$Number3,$type$Boolean6];\n},[\"fst414\",\"snd415\",\"flat$width416\",\"has$hardline417\"],[L[81],L[82],L[83],L[84]],[false,false,false,false],[\"fst414\",\"snd415\",\"flat$width416\",\"has$hardline417\"],$concat_mutablemask411,$concat$base408,$concat$brands410,\"concat\",$concat_getfields412,$concat$base408);\nvar $nest_getfields422 = function singleton_variant(f) {\nreturn f(this.dict[\"indent\"],this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $nest_mutablemask421 = [false,false,false,false];\nvar $nest$base418 = {\"$fieldNames\":[\"indent\",\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared371,\n\"_output\":anf_shared372,\n\"pretty\":anf_shared373,\n\"_match\":R.mM(\"nest\",4)};\nvar $nest$brander419 = R.nB(\"nest\",L[85]);\nvar $nest$brands420 = {};\n$nest$brands420[PPrintDoc106._brand] = true;\n$nest$brands420[$nest$brander419._brand] = true;\nvar nest423 = R.mVC(L[85],function $synthesizedConstructor_$nest$base() {\nreturn [$type$Number3,PPrintDoc354,$type$Number3,$type$Boolean6];\n},[\"indent424\",\"d425\",\"flat$width426\",\"has$hardline427\"],[L[86],L[87],L[88],L[89]],[false,false,false,false],[\"indent424\",\"d425\",\"flat$width426\",\"has$hardline427\"],$nest_mutablemask421,$nest$base418,$nest$brands420,\"nest\",$nest_getfields422,$nest$base418);\nvar $if$flat_getfields432 = function singleton_variant(f) {\nreturn f(this.dict[\"flat\"],this.dict[\"vert\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $if$flat_mutablemask431 = [false,false,false,false];\nvar $if$flat$base428 = {\"$fieldNames\":[\"flat\",\"vert\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared371,\n\"_output\":anf_shared372,\n\"pretty\":anf_shared373,\n\"_match\":R.mM(\"if-flat\",4)};\nvar $if$flat$brander429 = R.nB(\"if-flat\",L[90]);\nvar $if$flat$brands430 = {};\n$if$flat$brands430[PPrintDoc106._brand] = true;\n$if$flat$brands430[$if$flat$brander429._brand] = true;\nvar if$flat433 = R.mVC(L[90],function $synthesizedConstructor_$if$flat$base() {\nreturn [PPrintDoc354,PPrintDoc354,$type$Number3,$type$Boolean6];\n},[\"flat434\",\"vert435\",\"flat$width436\",\"has$hardline437\"],[L[91],L[92],L[93],L[94]],[false,false,false,false],[\"flat434\",\"vert435\",\"flat$width436\",\"has$hardline437\"],$if$flat_mutablemask431,$if$flat$base428,$if$flat$brands430,\"if-flat\",$if$flat_getfields432,$if$flat$base428);\nvar $align_getfields442 = function singleton_variant(f) {\nreturn f(this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $align_mutablemask441 = [false,false,false];\nvar $align$base438 = {\"$fieldNames\":[\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared371,\n\"_output\":anf_shared372,\n\"pretty\":anf_shared373,\n\"_match\":R.mM(\"align\",3)};\nvar $align$brander439 = R.nB(\"align\",L[95]);\nvar $align$brands440 = {};\n$align$brands440[PPrintDoc106._brand] = true;\n$align$brands440[$align$brander439._brand] = true;\nvar align443 = R.mVC(L[95],function $synthesizedConstructor_$align$base() {\nreturn [PPrintDoc354,$type$Number3,$type$Boolean6];\n},[\"d444\",\"flat$width445\",\"has$hardline446\"],[L[96],L[97],L[98]],[false,false,false],[\"d444\",\"flat$width445\",\"has$hardline446\"],$align_mutablemask441,$align$base438,$align$brands440,\"align\",$align_getfields442,$align$base438);\nvar $align$spaces_getfields451 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $align$spaces_mutablemask450 = [false,false,false];\nvar $align$spaces$base447 = {\"$fieldNames\":[\"n\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared371,\n\"_output\":anf_shared372,\n\"pretty\":anf_shared373,\n\"_match\":R.mM(\"align-spaces\",3)};\nvar $align$spaces$brander448 = R.nB(\"align-spaces\",L[99]);\nvar $align$spaces$brands449 = {};\n$align$spaces$brands449[PPrintDoc106._brand] = true;\n$align$spaces$brands449[$align$spaces$brander448._brand] = true;\nvar align$spaces452 = R.mVC(L[99],function $synthesizedConstructor_$align$spaces$base() {\nreturn [$type$Number3,$type$Number3,$type$Boolean6];\n},[\"n355\",\"flat$width453\",\"has$hardline454\"],[L[100],L[101],L[102]],[false,false,false],[\"n355\",\"flat$width453\",\"has$hardline454\"],$align$spaces_mutablemask450,$align$spaces$base447,$align$spaces$brands449,\"align-spaces\",$align$spaces_getfields451,$align$spaces$base447);\nvar $group_getfields459 = function singleton_variant(f) {\nreturn f(this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $group_mutablemask458 = [false,false,false];\nvar $group$base455 = {\"$fieldNames\":[\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared371,\n\"_output\":anf_shared372,\n\"pretty\":anf_shared373,\n\"_match\":R.mM(\"group\",3)};\nvar $group$brander456 = R.nB(\"group\",L[103]);\nvar $group$brands457 = {};\n$group$brands457[PPrintDoc106._brand] = true;\n$group$brands457[$group$brander456._brand] = true;\nvar group460 = R.mVC(L[103],function $synthesizedConstructor_$group$base() {\nreturn [PPrintDoc354,$type$Number3,$type$Boolean6];\n},[\"d259\",\"flat$width461\",\"has$hardline462\"],[L[104],L[105],L[106]],[false,false,false],[\"d259\",\"flat$width461\",\"has$hardline462\"],$group_mutablemask458,$group$base455,$group$brands457,\"group\",$group_getfields459,$group$base455);\nvar anf_assign463 = R.mO({\"PPrintDoc\":G(PPrintDoc106,\"test\",L[107]),\n\"is-mt-doc\":G($mt$doc$brander375,\"test\",L[66]),\n\"mt-doc\":mt$doc379,\n\"is-str\":G($str$brander383,\"test\",L[69]),\n\"str\":str387,\n\"is-hardline\":G($hardline$brander392,\"test\",L[73]),\n\"hardline\":hardline396,\n\"is-blank\":G($blank$brander400,\"test\",L[76]),\n\"blank\":blank404,\n\"is-concat\":G($concat$brander409,\"test\",L[80]),\n\"concat\":concat413,\n\"is-nest\":G($nest$brander419,\"test\",L[85]),\n\"nest\":nest423,\n\"is-if-flat\":G($if$flat$brander429,\"test\",L[90]),\n\"if-flat\":if$flat433,\n\"is-align\":G($align$brander439,\"test\",L[95]),\n\"align\":align443,\n\"is-align-spaces\":G($align$spaces$brander448,\"test\",L[99]),\n\"align-spaces\":align$spaces452,\n\"is-group\":G($group$brander456,\"test\",L[103]),\n\"group\":group460});\nPPrintDoc464.$var = anf_assign463;\nR.nothing;\n$al103 = L[107];\nvar anf_assign465 = G(PPrintDoc464.$var,\"PPrintDoc\",L[107]);\nis$PPrintDoc466.$var = anf_assign465;\nR.nothing;\n$al103 = L[66];\nvar anf_assign467 = G(PPrintDoc464.$var,\"is-mt-doc\",L[66]);\nis$mt$doc120.$var = anf_assign467;\nR.nothing;\n$al103 = L[66];\nvar anf_assign468 = G(PPrintDoc464.$var,\"mt-doc\",L[66]);\nmt$doc469.$var = anf_assign468;\nR.nothing;\n$al103 = L[69];\nvar anf_assign470 = G(PPrintDoc464.$var,\"is-str\",L[69]);\nis$str471.$var = anf_assign470;\nR.nothing;\n$al103 = L[69];\nvar anf_assign472 = G(PPrintDoc464.$var,\"str\",L[69]);\nstr473.$var = anf_assign472;\nR.nothing;\n$al103 = L[73];\nvar anf_assign474 = G(PPrintDoc464.$var,\"is-hardline\",L[73]);\nis$hardline475.$var = anf_assign474;\nR.nothing;\n$al103 = L[73];\nvar anf_assign476 = G(PPrintDoc464.$var,\"hardline\",L[73]);\nhardline477.$var = anf_assign476;\nR.nothing;\n$al103 = L[76];\nvar anf_assign478 = G(PPrintDoc464.$var,\"is-blank\",L[76]);\nis$blank479.$var = anf_assign478;\nR.nothing;\n$al103 = L[76];\nvar anf_assign481 = G(PPrintDoc464.$var,\"blank\",L[76]);\nblank482.$var = anf_assign481;\nR.nothing;\n$al103 = L[80];\nvar anf_assign483 = G(PPrintDoc464.$var,\"is-concat\",L[80]);\nis$concat484.$var = anf_assign483;\nR.nothing;\n$al103 = L[80];\nvar anf_assign485 = G(PPrintDoc464.$var,\"concat\",L[80]);\nconcat123.$var = anf_assign485;\nR.nothing;\n$al103 = L[85];\nvar anf_assign486 = G(PPrintDoc464.$var,\"is-nest\",L[85]);\nis$nest487.$var = anf_assign486;\nR.nothing;\n$al103 = L[85];\nvar anf_assign488 = G(PPrintDoc464.$var,\"nest\",L[85]);\nnest489.$var = anf_assign488;\nR.nothing;\n$al103 = L[90];\nvar anf_assign490 = G(PPrintDoc464.$var,\"is-if-flat\",L[90]);\nis$if$flat491.$var = anf_assign490;\nR.nothing;\n$al103 = L[90];\nvar anf_assign492 = G(PPrintDoc464.$var,\"if-flat\",L[90]);\nif$flat493.$var = anf_assign492;\nR.nothing;\n$al103 = L[95];\nvar anf_assign328 = G(PPrintDoc464.$var,\"is-align\",L[95]);\nis$align494.$var = anf_assign328;\nR.nothing;\n$al103 = L[95];\nvar anf_assign330 = G(PPrintDoc464.$var,\"align\",L[95]);\nalign495.$var = anf_assign330;\nR.nothing;\n$al103 = L[99];\nvar anf_assign332 = G(PPrintDoc464.$var,\"is-align-spaces\",L[99]);\nis$align$spaces496.$var = anf_assign332;\nR.nothing;\n$al103 = L[99];\nvar anf_assign334 = G(PPrintDoc464.$var,\"align-spaces\",L[99]);\nalign$spaces497.$var = anf_assign334;\nR.nothing;\n$al103 = L[103];\nvar anf_assign336 = G(PPrintDoc464.$var,\"is-group\",L[103]);\nis$group498.$var = anf_assign336;\nR.nothing;\n$al103 = L[103];\nvar anf_assign338 = G(PPrintDoc464.$var,\"group\",L[103]);\ngroup499.$var = anf_assign338;\nR.nothing;\nvar $item_getfields504 = function singleton_variant(f) {\nreturn f(this.dict[\"indent\"],this.dict[\"is-flat\"],this.dict[\"d\"]);\n};\nvar $item_mutablemask503 = [false,false,false];\nvar $item$base500 = {\"$fieldNames\":[\"indent\",\"is-flat\",\"d\"],\n\"_match\":R.mM(\"item\",3)};\nvar $item$brander501 = R.nB(\"item\",L[108]);\nvar $item$brands502 = {};\n$item$brands502[Item107._brand] = true;\n$item$brands502[$item$brander501._brand] = true;\nvar item505 = R.mVC(L[108],function $synthesizedConstructor_$item$base() {\nreturn [$type$Number3,$type$Boolean6,PPrintDoc354];\n},[\"indent506\",\"is$flat507\",\"d508\"],[L[109],L[110],L[111]],[false,false,false],[\"indent506\",\"is$flat507\",\"d508\"],$item_mutablemask503,$item$base500,$item$brands502,\"item\",$item_getfields504,$item$base500);\nvar anf_assign340 = R.mO({\"Item\":G(Item107,\"test\",L[112]),\n\"is-item\":G($item$brander501,\"test\",L[108]),\n\"item\":item505});\nItem509.$var = anf_assign340;\nR.nothing;\n$al103 = L[112];\nvar anf_assign343 = G(Item509.$var,\"Item\",L[112]);\nis$Item510.$var = anf_assign343;\nR.nothing;\n$al103 = L[108];\nvar anf_assign345 = G(Item509.$var,\"is-item\",L[108]);\nis$item511.$var = anf_assign345;\nR.nothing;\n$al103 = L[108];\nvar anf_assign347 = G(Item509.$var,\"item\",L[108]);\nitem512.$var = anf_assign347;\nR.nothing;\nvar $temp_lam518 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__113($i519,$m520,$it521,$rest522) {\nvar $step517 = 0;\nvar $elidedFrames526 = 0;\nvar $ans523 = D;\nvar $al524 = L[113];\nif(R.isAR($i519)) {\n$step517 = $i519.step;\n$al524 = $i519.from;\n$ans523 = $i519.ans;\n$elidedFrames526 = $i519.elidedFrames;\ni519 = $i519.args[0];\nm520 = $i519.args[1];\nit521 = $i519.args[2];\nrest522 = $i519.args[3];\nanf_arg682 = $i519.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[113],4,$t,false);\n}\nvar i519 = $i519;\nvar m520 = $m520;\nvar it521 = $it521;\nvar rest522 = $rest522;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans523 = R.mC();\n}\nwhile(!R.isContinuation($ans523)) {\nswitch($step517) {\ncase 0: // caller optimization;\n$ans523 = is$concat484.$var.app(it521);\nvar anf_if528 = $ans523;\n$step517 = R.checkPyretTrue(anf_if528)?1:3;\nbreak;\ncase 1: $al524 = L[114];\nvar anf_arg682 = G(it521,\"fst\",L[114]);\n$al524 = L[115];\nvar anf_arg683 = G(it521,\"snd\",L[115]);\n$step517 = 2;\n$al524 = L[116];\n// omitting isFunction check;\n$ans523 = collect$concats527.$var.app(i519,m520,anf_arg683,rest522);\nbreak;\ncase 2: var anf_arg684 = $ans523;\n$step517 = 0;\n++$elidedFrames526;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans523 = R.mC();\n}\ni519 = i519;\nm520 = m520;\nit521 = anf_arg682;\nrest522 = anf_arg684;\ncontinue;\ncase 3: // caller optimization;\n$ans523 = item512.$var.app(i519,m520,it521);\nvar anf_arg438 = $ans523;\n$step517 = 4;\n$al524 = L[117];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al524,link1116);\n}\n$ans523 = link1116.app(anf_arg438,rest522);\nbreak;\ncase 4: ++R.GAS;\nreturn $ans523;\ndefault: R.ffi.throwSpinnakerError(L[113],$step517);\n}\n}\nif($step517 !== 4) {\n$ans523.stack[R.EXN_STACKHEIGHT++] = R.mAR($al524,$temp_lam518,$step517,[i519,m520,it521,rest522],[anf_arg682],$elidedFrames526);\n}\nreturn $ans523;\n};\nvar anf_assign371 = R.mF($temp_lam518,\"collect-concats\");\ncollect$concats527.$var = anf_assign371;\nR.nothing;\nvar $temp_lam533 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__118($width534,$doc535) {\nvar $step532 = 0;\nvar $elidedFrames540 = 0;\nvar $ans537 = D;\nvar $al538 = L[118];\nif(R.isAR($width534)) {\n$step532 = $width534.step;\n$al538 = $width534.from;\n$ans537 = $width534.ans;\n$elidedFrames540 = $width534.elidedFrames;\nwidth534 = $width534.args[0];\ndoc535 = $width534.args[1];\ngen$output1109 = $width534.vars[0];\nprocess1123 = $width534.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[118],2,$t,false);\n}\nvar width534 = $width534;\nvar doc535 = $doc535;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans537 = R.mC();\n}\nwhile(!R.isContinuation($ans537)) {\nswitch($step532) {\ncase 0: $step532 = 1;\n$al538 = L[200];\nvar $ann$check1325 = R._cA(L[200],PPrintDoc354,doc535);\nif(R.isContinuation($ann$check1325)) {\n$ans537 = $ann$check1325;\n}\nbreak;\ncase 1: var cur$line548 = {\"$var\":empty1117};\nvar output570 = {\"$var\":empty1117};\nvar emit$text553 = {\"$var\":D};\nvar emit$spaces562 = {\"$var\":D};\nvar emit$newline905 = {\"$var\":D};\nvar gen$output1109 = {\"$var\":D};\nvar process1123 = {\"$var\":D};\nvar $temp_lam542 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__119($s543) {\nvar $step541 = 0;\nvar $elidedFrames547 = 0;\nvar $ans544 = D;\nvar $al545 = L[119];\nif(R.isAR($s543)) {\n$step541 = $s543.step;\n$al545 = $s543.from;\n$ans544 = $s543.ans;\n$elidedFrames547 = $s543.elidedFrames;\ns543 = $s543.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[119],1,$t,false);\n}\nvar s543 = $s543;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans544 = R.mC();\n}\nwhile(!R.isContinuation($ans544)) {\nswitch($step541) {\ncase 0: var anf_arg696 = cur$line548.$var;\n$step541 = 1;\n$al545 = L[120];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al545,link1116);\n}\n$ans544 = link1116.app(s543,anf_arg696);\nbreak;\ncase 1: var anf_assign549 = $ans544;\n$step541 = 2;\ncur$line548.$var = anf_assign549;\n$ans544 = R.nothing;\nbreak;\ncase 2: ++R.GAS;\nreturn $ans544;\ndefault: R.ffi.throwSpinnakerError(L[119],$step541);\n}\n}\nif($step541 !== 2) {\n$ans544.stack[R.EXN_STACKHEIGHT++] = R.mAR($al545,$temp_lam542,$step541,[s543],[],$elidedFrames547);\n}\nreturn $ans544;\n};\nvar anf_assign552 = R.mF($temp_lam542,\"emit-text\");\nemit$text553.$var = anf_assign552;\nR.nothing;\nvar $temp_lam555 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__121($n556) {\nvar $step554 = 0;\nvar $elidedFrames560 = 0;\nvar $ans557 = D;\nvar $al558 = L[121];\nif(R.isAR($n556)) {\n$step554 = $n556.step;\n$al558 = $n556.from;\n$ans557 = $n556.ans;\n$elidedFrames560 = $n556.elidedFrames;\nn556 = $n556.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[121],1,$t,false);\n}\nvar n556 = $n556;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans557 = R.mC();\n}\nwhile(!R.isContinuation($ans557)) {\nswitch($step554) {\ncase 0: $step554 = 1;\n$al558 = L[123];\n// omitting isFunction check;\n$ans557 = string$repeat1.app((\" \"),n556);\nbreak;\ncase 1: var anf_arg440 = $ans557;\n$step554 = 2;\n$al558 = L[122];\n// omitting isFunction check;\n$ans557 = emit$text553.$var.app(anf_arg440);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans557;\ndefault: R.ffi.throwSpinnakerError(L[121],$step554);\n}\n}\nif($step554 !== 2) {\n$ans557.stack[R.EXN_STACKHEIGHT++] = R.mAR($al558,$temp_lam555,$step554,[n556],[],$elidedFrames560);\n}\nreturn $ans557;\n};\nvar anf_assign435 = R.mF($temp_lam555,\"emit-spaces\");\nemit$spaces562.$var = anf_assign435;\nR.nothing;\nvar $temp_lam564 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__124($i565) {\nvar $step563 = 0;\nvar $elidedFrames569 = 0;\nvar $ans566 = D;\nvar $al567 = L[124];\nif(R.isAR($i565)) {\n$step563 = $i565.step;\n$al567 = $i565.from;\n$ans566 = $i565.ans;\n$elidedFrames569 = $i565.elidedFrames;\ni565 = $i565.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[124],1,$t,false);\n}\nvar i565 = $i565;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans566 = R.mC();\n}\nwhile(!R.isContinuation($ans566)) {\nswitch($step563) {\ncase 0: var anf_arg711 = cur$line548.$var;\nvar anf_arg712 = output570.$var;\n$step563 = 1;\n$al567 = L[127];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al567,link1116);\n}\n$ans566 = link1116.app(anf_arg711,anf_arg712);\nbreak;\ncase 1: var anf_assign441 = $ans566;\noutput570.$var = anf_assign441;\nR.nothing;\n$step563 = 2;\n$al567 = L[126];\n// omitting isFunction check;\n$ans566 = string$repeat1.app((\" \"),i565);\nbreak;\ncase 2: var anf_arg899 = $ans566;\n$step563 = 3;\n$al567 = L[125];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al567,link1116);\n}\n$ans566 = link1116.app(anf_arg899,empty1117);\nbreak;\ncase 3: var anf_assign445 = $ans566;\n$step563 = 4;\ncur$line548.$var = anf_assign445;\n$ans566 = R.nothing;\nbreak;\ncase 4: ++R.GAS;\nreturn $ans566;\ndefault: R.ffi.throwSpinnakerError(L[124],$step563);\n}\n}\nif($step563 !== 4) {\n$ans566.stack[R.EXN_STACKHEIGHT++] = R.mAR($al567,$temp_lam564,$step563,[i565],[],$elidedFrames569);\n}\nreturn $ans566;\n};\nvar anf_assign447 = R.mF($temp_lam564,\"emit-newline\");\nemit$newline905.$var = anf_assign447;\nR.nothing;\nvar $temp_lam909 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__128($$resumer14) {\nvar $step908 = 0;\nvar $elidedFrames913 = 0;\nvar $ans910 = D;\nvar $al911 = L[128];\nif(R.isAR($$resumer14)) {\n$step908 = $$resumer14.step;\n$al911 = $$resumer14.from;\n$ans910 = $$resumer14.ans;\n$elidedFrames913 = $$resumer14.elidedFrames;\n$resumer14 = $$resumer14.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[128],0,$t,false);\n}\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans910 = R.mC();\n}\nwhile(!R.isContinuation($ans910)) {\nswitch($step908) {\ncase 0: var anf_arg728 = cur$line548.$var;\nvar anf_arg729 = output570.$var;\n$step908 = 1;\n$al911 = L[133];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al911,link1116);\n}\n$ans910 = link1116.app(anf_arg728,anf_arg729);\nbreak;\ncase 1: var anf_assign453 = $ans910;\noutput570.$var = anf_assign453;\nR.nothing;\nvar $temp_lam915 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__129($lines916,$line917) {\nvar $step914 = 0;\nvar $elidedFrames921 = 0;\nvar $ans918 = D;\nvar $al919 = L[129];\nif(R.isAR($lines916)) {\n$step914 = $lines916.step;\n$al919 = $lines916.from;\n$ans918 = $lines916.ans;\n$elidedFrames921 = $lines916.elidedFrames;\nlines916 = $lines916.args[0];\nline917 = $lines916.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[129],2,$t,false);\n}\nvar lines916 = $lines916;\nvar line917 = $line917;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans918 = R.mC();\n}\nwhile(!R.isContinuation($ans918)) {\nswitch($step914) {\ncase 0: var $temp_lam923 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__130($acc924,$piece925) {\nvar $step922 = 0;\nvar $elidedFrames929 = 0;\nvar $ans926 = D;\nvar $al927 = L[130];\nif(R.isAR($acc924)) {\n$step922 = $acc924.step;\n$al927 = $acc924.from;\n$ans926 = $acc924.ans;\n$elidedFrames929 = $acc924.elidedFrames;\nacc924 = $acc924.args[0];\npiece925 = $acc924.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[130],2,$t,false);\n}\nvar acc924 = $acc924;\nvar piece925 = $piece925;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans926 = R.mC();\n}\nwhile(!R.isContinuation($ans926)) {\nswitch($step922) {\ncase 0: $step922 = 1;\n$al927 = L[131];\n// omitting isFunction check;\n$ans926 = _plus5.app(piece925,acc924);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans926;\ndefault: R.ffi.throwSpinnakerError(L[130],$step922);\n}\n}\nif($step922 !== 1) {\n$ans926.stack[R.EXN_STACKHEIGHT++] = R.mAR($al927,$temp_lam923,$step922,[acc924,piece925],[],$elidedFrames929);\n}\nreturn $ans926;\n};\nvar anf_arg933 = R.mF($temp_lam923,\"for-body<line 156, column 10>\");\n$step914 = 1;\n$ans918 = R.maybeMethodCall3(lists61,\"fold\",L[130],anf_arg933,(\"\"),line917);\nbreak;\ncase 1: var l934 = $ans918;\n$step914 = 2;\n$al919 = L[132];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al919,link1116);\n}\n$ans918 = link1116.app(l934,lines916);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans918;\ndefault: R.ffi.throwSpinnakerError(L[129],$step914);\n}\n}\nif($step914 !== 2) {\n$ans918.stack[R.EXN_STACKHEIGHT++] = R.mAR($al919,$temp_lam915,$step914,[lines916,line917],[],$elidedFrames921);\n}\nreturn $ans918;\n};\nvar anf_arg747 = R.mF($temp_lam915,\"for-body<line 155, column 4>\");\nvar anf_arg1107 = output570.$var;\n$step908 = 2;\n$ans910 = R.maybeMethodCall3(lists61,\"fold\",L[129],anf_arg747,empty1117,anf_arg1107);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans910;\ndefault: R.ffi.throwSpinnakerError(L[128],$step908);\n}\n}\nif($step908 !== 2) {\n$ans910.stack[R.EXN_STACKHEIGHT++] = R.mAR($al911,$temp_lam909,$step908,[],[],$elidedFrames913);\n}\nreturn $ans910;\n};\nvar anf_assign512 = R.mF($temp_lam909,\"gen-output\");\ngen$output1109.$var = anf_assign512;\nR.nothing;\nvar $temp_lam1111 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__134($column1112,$items1113) {\nvar $step1110 = 0;\nvar $elidedFrames1117 = 0;\nvar $ans1114 = D;\nvar $al1115 = L[134];\nif(R.isAR($column1112)) {\n$step1110 = $column1112.step;\n$al1115 = $column1112.from;\n$ans1114 = $column1112.ans;\n$elidedFrames1117 = $column1112.elidedFrames;\ncolumn1112 = $column1112.args[0];\nitems1113 = $column1112.args[1];\nvert1287 = $column1112.vars[0];\nfirst1121 = $column1112.vars[1];\nm1198 = $column1112.vars[2];\ni1197 = $column1112.vars[3];\nn1217 = $column1112.vars[4];\nn1405 = $column1112.vars[5];\nann_check_temp1119 = $column1112.vars[6];\ncases1122 = $column1112.vars[7];\nd1277 = $column1112.vars[8];\nflat1286 = $column1112.vars[9];\nflat$width1206 = $column1112.vars[10];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[134],2,$t,false);\n}\nvar column1112 = $column1112;\nvar items1113 = $items1113;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1114 = R.mC();\n}\nwhile(!R.isContinuation($ans1114)) {\nswitch($step1110) {\ncase 0: $step1110 = 1;\n$al1115 = L[192];\nvar $ann$check1315 = R._cA(L[192],$type$Number3,column1112);\nif(R.isContinuation($ann$check1315)) {\n$ans1114 = $ann$check1315;\n}\nbreak;\ncase 1: $step1110 = 2;\n$al1115 = L[193];\nvar $ann$check1316 = R._cA(L[193],List1317,items1113);\nif(R.isContinuation($ann$check1316)) {\n$ans1114 = $ann$check1316;\n}\nbreak;\ncase 2: $step1110 = 3;\n$al1115 = L[191];\nif(typeof(is$empty1118.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1115,is$empty1118);\n}\n$ans1114 = is$empty1118.app(items1113);\nbreak;\ncase 3: var anf_if1314 = $ans1114;\n$step1110 = R.checkPyretTrue(anf_if1314)?4:5;\nbreak;\ncase 4: $step1110 = 37;\n$ans1114 = nothing2;\nbreak;\ncase 5: $al1115 = L[136];\nvar first1121 = G(items1113,\"first\",L[136]);\n$al1115 = L[137];\nvar i1197 = G(first1121,\"indent\",L[137]);\n$al1115 = L[138];\nvar m1198 = G(first1121,\"is-flat\",L[138]);\n$al1115 = L[139];\nvar cases1122 = G(first1121,\"d\",L[139]);\n$step1110 = 6;\n$al1115 = L[190];\nvar $ann$check1313 = R._cA(L[190],PPrintDoc354,cases1122);\nif(R.isContinuation($ann$check1313)) {\n$ans1114 = $ann$check1313;\n}\nbreak;\ncase 6: $al1115 = L[142];\n$step1110 = $cases_dispatch1312[cases1122.$name] || 36;\nbreak;\ncase 7: if(cases1122.$arity !== 2) {\nif(cases1122.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[141],2,cases1122.$arity,L[142],cases1122.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[141],true,L[142],cases1122.$loc);\n}\n}\nvar $fn1194 = cases1122.$constructor.$fieldNames;\nR.dF(cases1122.dict[$fn1194[0]],cases1122.$mut_fields_mask[0],false);\nR.dF(cases1122.dict[$fn1194[1]],cases1122.$mut_fields_mask[1],false);\n$al1115 = L[140];\nvar anf_arg1179 = G(items1113,\"rest\",L[140]);\n$step1110 = 0;\n++$elidedFrames1117;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1114 = R.mC();\n}\ncolumn1112 = column1112;\nitems1113 = anf_arg1179;\ncontinue;\ncase 8: if(cases1122.$arity !== 4) {\nif(cases1122.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[146],4,cases1122.$arity,L[142],cases1122.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[146],true,L[142],cases1122.$loc);\n}\n}\nvar $fn1200 = cases1122.$constructor.$fieldNames;\nR.dF(cases1122.dict[$fn1200[0]],cases1122.$mut_fields_mask[0],false);\nR.dF(cases1122.dict[$fn1200[1]],cases1122.$mut_fields_mask[1],false);\nR.dF(cases1122.dict[$fn1200[2]],cases1122.$mut_fields_mask[2],false);\nR.dF(cases1122.dict[$fn1200[3]],cases1122.$mut_fields_mask[3],false);\n$al1115 = L[143];\nvar anf_arg762 = G(first1121,\"d\",L[143]);\n$al1115 = L[144];\nvar anf_arg480 = G(items1113,\"rest\",L[144]);\n$step1110 = 9;\n$al1115 = L[145];\n// omitting isFunction check;\n$ans1114 = collect$concats527.$var.app(i1197,m1198,anf_arg762,anf_arg480);\nbreak;\ncase 9: var anf_arg760 = $ans1114;\n$step1110 = 0;\n++$elidedFrames1117;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1114 = R.mC();\n}\ncolumn1112 = column1112;\nitems1113 = anf_arg760;\ncontinue;\ncase 10: if(cases1122.$arity !== 3) {\nif(cases1122.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[150],3,cases1122.$arity,L[142],cases1122.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[150],true,L[142],cases1122.$loc);\n}\n}\nvar $fn1215 = cases1122.$constructor.$fieldNames;\nvar s1205 = R.dF(cases1122.dict[$fn1215[0]],cases1122.$mut_fields_mask[0],false);\nvar flat$width1206 = R.dF(cases1122.dict[$fn1215[1]],cases1122.$mut_fields_mask[1],false);\nR.dF(cases1122.dict[$fn1215[2]],cases1122.$mut_fields_mask[2],false);\n$step1110 = 11;\n$al1115 = L[149];\n// omitting isFunction check;\n$ans1114 = emit$text553.$var.app(s1205);\nbreak;\ncase 11: $step1110 = 12;\n$al1115 = L[148];\n// omitting isFunction check;\n$ans1114 = _plus5.app(column1112,flat$width1206);\nbreak;\ncase 12: var anf_arg763 = $ans1114;\n$al1115 = L[147];\nvar anf_arg481 = G(items1113,\"rest\",L[147]);\n$step1110 = 0;\n++$elidedFrames1117;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1114 = R.mC();\n}\ncolumn1112 = anf_arg763;\nitems1113 = anf_arg481;\ncontinue;\ncase 13: if(cases1122.$arity !== 3) {\nif(cases1122.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[154],3,cases1122.$arity,L[142],cases1122.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[154],true,L[142],cases1122.$loc);\n}\n}\nvar $fn1269 = cases1122.$constructor.$fieldNames;\nvar n1217 = R.dF(cases1122.dict[$fn1269[0]],cases1122.$mut_fields_mask[0],false);\nR.dF(cases1122.dict[$fn1269[1]],cases1122.$mut_fields_mask[1],false);\nR.dF(cases1122.dict[$fn1269[2]],cases1122.$mut_fields_mask[2],false);\n$step1110 = 14;\n$al1115 = L[153];\n// omitting isFunction check;\n$ans1114 = emit$spaces562.$var.app(n1217);\nbreak;\ncase 14: $step1110 = 15;\n$al1115 = L[152];\n// omitting isFunction check;\n$ans1114 = _plus5.app(column1112,n1217);\nbreak;\ncase 15: var anf_arg1263 = $ans1114;\n$al1115 = L[151];\nvar anf_arg777 = G(items1113,\"rest\",L[151]);\n$step1110 = 0;\n++$elidedFrames1117;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1114 = R.mC();\n}\ncolumn1112 = anf_arg1263;\nitems1113 = anf_arg777;\ncontinue;\ncase 16: if(cases1122.$arity !== 3) {\nif(cases1122.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[157],3,cases1122.$arity,L[142],cases1122.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[157],true,L[142],cases1122.$loc);\n}\n}\nvar $fn1273 = cases1122.$constructor.$fieldNames;\nvar d1271 = R.dF(cases1122.dict[$fn1273[0]],cases1122.$mut_fields_mask[0],false);\nR.dF(cases1122.dict[$fn1273[1]],cases1122.$mut_fields_mask[1],false);\nR.dF(cases1122.dict[$fn1273[2]],cases1122.$mut_fields_mask[2],false);\n// caller optimization;\n$ans1114 = item512.$var.app(column1112,m1198,d1271);\nvar anf_arg482 = $ans1114;\n$al1115 = L[155];\nvar anf_arg775 = G(items1113,\"rest\",L[155]);\n$step1110 = 17;\n$al1115 = L[156];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1115,link1116);\n}\n$ans1114 = link1116.app(anf_arg482,anf_arg775);\nbreak;\ncase 17: var anf_arg778 = $ans1114;\n$step1110 = 0;\n++$elidedFrames1117;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1114 = R.mC();\n}\ncolumn1112 = column1112;\nitems1113 = anf_arg778;\ncontinue;\ncase 18: if(cases1122.$arity !== 4) {\nif(cases1122.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[161],4,cases1122.$arity,L[142],cases1122.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[161],true,L[142],cases1122.$loc);\n}\n}\nvar $fn1279 = cases1122.$constructor.$fieldNames;\nvar n1276 = R.dF(cases1122.dict[$fn1279[0]],cases1122.$mut_fields_mask[0],false);\nvar d1277 = R.dF(cases1122.dict[$fn1279[1]],cases1122.$mut_fields_mask[1],false);\nR.dF(cases1122.dict[$fn1279[2]],cases1122.$mut_fields_mask[2],false);\nR.dF(cases1122.dict[$fn1279[3]],cases1122.$mut_fields_mask[3],false);\n$step1110 = 19;\n$al1115 = L[160];\n// omitting isFunction check;\n$ans1114 = _plus5.app(i1197,n1276);\nbreak;\ncase 19: var anf_arg483 = $ans1114;\n// caller optimization;\n$ans1114 = item512.$var.app(anf_arg483,m1198,d1277);\nvar anf_arg487 = $ans1114;\n$al1115 = L[158];\nvar anf_arg792 = G(items1113,\"rest\",L[158]);\n$step1110 = 20;\n$al1115 = L[159];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1115,link1116);\n}\n$ans1114 = link1116.app(anf_arg487,anf_arg792);\nbreak;\ncase 20: var anf_arg495 = $ans1114;\n$step1110 = 0;\n++$elidedFrames1117;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1114 = R.mC();\n}\ncolumn1112 = column1112;\nitems1113 = anf_arg495;\ncontinue;\ncase 21: if(cases1122.$arity !== 2) {\nif(cases1122.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[165],2,cases1122.$arity,L[142],cases1122.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[165],true,L[142],cases1122.$loc);\n}\n}\nvar $fn1283 = cases1122.$constructor.$fieldNames;\nR.dF(cases1122.dict[$fn1283[0]],cases1122.$mut_fields_mask[0],false);\nR.dF(cases1122.dict[$fn1283[1]],cases1122.$mut_fields_mask[1],false);\n$step1110 = R.checkPyretTrue(m1198)?22:23;\nbreak;\ncase 22: $step1110 = 37;\n$al1115 = L[162];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1115,raise1);\n}\n$ans1114 = raise1.app((\"Impossible for HardLine to be flat\"));\nbreak;\ncase 23: $step1110 = 24;\n$al1115 = L[164];\n// omitting isFunction check;\n$ans1114 = emit$newline905.$var.app(i1197);\nbreak;\ncase 24: $al1115 = L[163];\nvar anf_arg790 = G(items1113,\"rest\",L[163]);\n$step1110 = 0;\n++$elidedFrames1117;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1114 = R.mC();\n}\ncolumn1112 = i1197;\nitems1113 = anf_arg790;\ncontinue;\ncase 25: if(cases1122.$arity !== 4) {\nif(cases1122.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[168],4,cases1122.$arity,L[142],cases1122.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[168],true,L[142],cases1122.$loc);\n}\n}\nvar $fn1289 = cases1122.$constructor.$fieldNames;\nvar flat1286 = R.dF(cases1122.dict[$fn1289[0]],cases1122.$mut_fields_mask[0],false);\nvar vert1287 = R.dF(cases1122.dict[$fn1289[1]],cases1122.$mut_fields_mask[1],false);\nR.dF(cases1122.dict[$fn1289[2]],cases1122.$mut_fields_mask[2],false);\nR.dF(cases1122.dict[$fn1289[3]],cases1122.$mut_fields_mask[3],false);\n$step1110 = R.checkPyretTrue(m1198)?26:27;\nbreak;\ncase 26: $step1110 = 28;\n$ans1114 = flat1286;\nbreak;\ncase 27: $step1110 = 28;\n$ans1114 = vert1287;\nbreak;\ncase 28: var anf_arg793 = $ans1114;\n// caller optimization;\n$ans1114 = item512.$var.app(i1197,m1198,anf_arg793);\nvar anf_arg492 = $ans1114;\n$al1115 = L[166];\nvar anf_arg502 = G(items1113,\"rest\",L[166]);\n$step1110 = 29;\n$al1115 = L[167];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1115,link1116);\n}\n$ans1114 = link1116.app(anf_arg492,anf_arg502);\nbreak;\ncase 29: var anf_arg807 = $ans1114;\n$step1110 = 0;\n++$elidedFrames1117;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1114 = R.mC();\n}\ncolumn1112 = column1112;\nitems1113 = anf_arg807;\ncontinue;\ncase 30: if(cases1122.$arity !== 3) {\nif(cases1122.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[173],3,cases1122.$arity,L[142],cases1122.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[173],true,L[142],cases1122.$loc);\n}\n}\nvar $fn1294 = cases1122.$constructor.$fieldNames;\nvar n1405 = R.dF(cases1122.dict[$fn1294[0]],cases1122.$mut_fields_mask[0],false);\nR.dF(cases1122.dict[$fn1294[1]],cases1122.$mut_fields_mask[1],false);\nR.dF(cases1122.dict[$fn1294[2]],cases1122.$mut_fields_mask[2],false);\n$step1110 = R.checkPyretTrue(m1198)?31:32;\nbreak;\ncase 31: $al1115 = L[169];\nvar anf_arg503 = G(items1113,\"rest\",L[169]);\n$step1110 = 0;\n++$elidedFrames1117;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1114 = R.mC();\n}\ncolumn1112 = column1112;\nitems1113 = anf_arg503;\ncontinue;\ncase 32: $step1110 = 33;\n$al1115 = L[172];\n// omitting isFunction check;\n$ans1114 = emit$spaces562.$var.app(n1405);\nbreak;\ncase 33: $step1110 = 34;\n$al1115 = L[171];\n// omitting isFunction check;\n$ans1114 = _plus5.app(column1112,n1405);\nbreak;\ncase 34: var anf_arg805 = $ans1114;\n$al1115 = L[170];\nvar anf_arg808 = G(items1113,\"rest\",L[170]);\n$step1110 = 0;\n++$elidedFrames1117;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1114 = R.mC();\n}\ncolumn1112 = anf_arg805;\nitems1113 = anf_arg808;\ncontinue;\ncase 35: if(cases1122.$arity !== 3) {\nif(cases1122.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[189],3,cases1122.$arity,L[142],cases1122.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[189],true,L[142],cases1122.$loc);\n}\n}\n$step1110 = 37;\n$al1115 = L[189];\nvar $temp_branch1301 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__142($d1297,$flat$width1298,$has$hardline1300) {\nvar $step1302 = 0;\nvar $elidedFrames1309 = 0;\nvar $ans1306 = D;\nvar $al1307 = L[188];\nif(R.isAR($d1297)) {\n$step1302 = $d1297.step;\n$al1307 = $d1297.from;\n$ans1306 = $d1297.ans;\n$elidedFrames1309 = $d1297.elidedFrames;\nd1297 = $d1297.args[0];\nflat$width1298 = $d1297.args[1];\nhas$hardline1300 = $d1297.args[2];\n} else {\nvar d1297 = $d1297;\nvar flat$width1298 = $flat$width1298;\nvar has$hardline1300 = $has$hardline1300;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1306 = R.mC();\n}\nwhile(!R.isContinuation($ans1306)) {\nswitch($step1302) {\ncase 0: $step1302 = R.checkPyretTrue(m1198)?1:3;\nbreak;\ncase 1: // caller optimization;\n$ans1306 = item512.$var.app(i1197,(true),d1297);\nvar anf_arg506 = $ans1306;\n$al1307 = L[174];\nvar anf_arg533 = G(items1113,\"rest\",L[174]);\n$step1302 = 2;\n$al1307 = L[175];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1307,link1116);\n}\n$ans1306 = link1116.app(anf_arg506,anf_arg533);\nbreak;\ncase 2: var anf_arg822 = $ans1306;\n$step1302 = 13;\n$al1307 = L[184];\n// omitting isFunction check;\n$ans1306 = process1123.$var.app(column1112,anf_arg822);\nbreak;\ncase 3: $step1302 = R.checkPyretTrue(has$hardline1300)?4:6;\nbreak;\ncase 4: // caller optimization;\n$ans1306 = item512.$var.app(i1197,(false),d1297);\nvar anf_arg538 = $ans1306;\n$al1307 = L[176];\nvar anf_arg820 = G(items1113,\"rest\",L[176]);\n$step1302 = 5;\n$al1307 = L[177];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1307,link1116);\n}\n$ans1306 = link1116.app(anf_arg538,anf_arg820);\nbreak;\ncase 5: var anf_arg823 = $ans1306;\n$step1302 = 13;\n$al1307 = L[185];\n// omitting isFunction check;\n$ans1306 = process1123.$var.app(column1112,anf_arg823);\nbreak;\ncase 6: $step1302 = 7;\n$al1307 = L[183];\n// omitting isFunction check;\n$ans1306 = _minus9.app(width534,column1112);\nbreak;\ncase 7: var anf_arg561 = $ans1306;\n$step1302 = 8;\n$al1307 = L[182];\n// omitting isFunction check;\n$ans1306 = _greaterequal2.app(anf_arg561,flat$width1298);\nbreak;\ncase 8: var anf_if1299 = $ans1306;\n$step1302 = R.checkPyretTrue(anf_if1299)?9:11;\nbreak;\ncase 9: // caller optimization;\n$ans1306 = item512.$var.app(i1197,(true),d1297);\nvar anf_arg837 = $ans1306;\n$al1307 = L[178];\nvar anf_arg72 = G(items1113,\"rest\",L[178]);\n$step1302 = 10;\n$al1307 = L[179];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1307,link1116);\n}\n$ans1306 = link1116.app(anf_arg837,anf_arg72);\nbreak;\ncase 10: var anf_arg835 = $ans1306;\n$step1302 = 13;\n$al1307 = L[186];\n// omitting isFunction check;\n$ans1306 = process1123.$var.app(column1112,anf_arg835);\nbreak;\ncase 11: // caller optimization;\n$ans1306 = item512.$var.app(i1197,(false),d1297);\nvar anf_arg838 = $ans1306;\n$al1307 = L[180];\nvar anf_arg582 = G(items1113,\"rest\",L[180]);\n$step1302 = 12;\n$al1307 = L[181];\nif(typeof(link1116.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1307,link1116);\n}\n$ans1306 = link1116.app(anf_arg838,anf_arg582);\nbreak;\ncase 12: var anf_arg575 = $ans1306;\n$step1302 = 13;\n$al1307 = L[187];\n// omitting isFunction check;\n$ans1306 = process1123.$var.app(column1112,anf_arg575);\nbreak;\ncase 13: ++R.GAS;\nreturn $ans1306;\ndefault: R.ffi.throwSpinnakerError(L[188],$step1302);\n}\n}\nif($step1302 !== 13) {\n$ans1306.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1307,$temp_branch1301,$step1302,[d1297,flat$width1298,has$hardline1300],[],$elidedFrames1309);\n}\nreturn $ans1306;\n};\n$ans1114 = cases1122.$app_fields($temp_branch1301,[false,false,false]);\nbreak;\ncase 36: $step1110 = 37;\n$al1115 = L[142];\n$ans1114 = R.throwNoCasesMatched(L[142],cases1122);\nbreak;\ncase 37: var ann_check_temp1119 = $ans1114;\n$step1110 = 38;\n$al1115 = L[135];\nvar $ann$check1120 = R._cA(L[135],$type$Nothing1,ann_check_temp1119);\nif(R.isContinuation($ann$check1120)) {\n$ans1114 = $ann$check1120;\n}\nbreak;\ncase 38: $step1110 = 39;\n$ans1114 = ann_check_temp1119;\nbreak;\ncase 39: ++R.GAS;\nreturn $ans1114;\ndefault: R.ffi.throwSpinnakerError(L[134],$step1110);\n}\n}\nif($step1110 !== 39) {\n$ans1114.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1115,$temp_lam1111,$step1110,[column1112,items1113],[vert1287,first1121,m1198,i1197,n1217,n1405,ann_check_temp1119,cases1122,d1277,flat1286,flat$width1206],$elidedFrames1117);\n}\nreturn $ans1114;\n};\nvar anf_assign1320 = R.mF($temp_lam1111,\"process\");\nprocess1123.$var = anf_assign1320;\nR.nothing;\n$al538 = L[195];\nvar anf_fun1324 = R.getMaker1(list1321,(\"make1\"),L[194],L[195]);\n$al538 = L[196];\nvar anf_arg850 = G(doc535,\"flat-width\",L[196]);\n$al538 = L[197];\nvar anf_arg853 = G(doc535,\"has-hardline\",L[197]);\n// caller optimization;\n$ans537 = group499.$var.app(doc535,anf_arg850,anf_arg853);\nvar anf_arg146 = $ans537;\n// caller optimization;\n$ans537 = item512.$var.app((0),(false),anf_arg146);\nvar anf_arg150 = $ans537;\n$step532 = 2;\n$al538 = L[195];\nif(typeof(anf_fun1324.app) !== \"function\") {\nR.ffi.throwNonFunApp($al538,anf_fun1324);\n}\n$ans537 = anf_fun1324.app(anf_arg150);\nbreak;\ncase 2: var anf_arg867 = $ans537;\n$step532 = 3;\n$al538 = L[199];\n// omitting isFunction check;\n$ans537 = process1123.$var.app((0),anf_arg867);\nbreak;\ncase 3: $step532 = 4;\n$al538 = L[198];\n// omitting isFunction check;\n$ans537 = gen$output1109.$var.app();\nbreak;\ncase 4: ++R.GAS;\nreturn $ans537;\ndefault: R.ffi.throwSpinnakerError(L[118],$step532);\n}\n}\nif($step532 !== 4) {\n$ans537.stack[R.EXN_STACKHEIGHT++] = R.mAR($al538,$temp_lam533,$step532,[width534,doc535],[gen$output1109,process1123],$elidedFrames540);\n}\nreturn $ans537;\n};\nvar anf_assign1327 = R.mF($temp_lam533,\"format\");\nformat367.$var = anf_assign1327;\nR.nothing;\n// caller optimization;\n$ans102 = mt$doc469.$var.app((0),(false));\nvar mt$doc1625 = $ans102;\n// caller optimization;\n$ans102 = hardline477.$var.app((0),(true));\nvar hardline1509 = $ans102;\nvar $temp_lam1329 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__201($d1330) {\nvar $step1328 = 0;\nvar $elidedFrames1334 = 0;\nvar $ans1331 = D;\nvar $al1332 = L[201];\nif(R.isAR($d1330)) {\n$step1328 = $d1330.step;\n$al1332 = $d1330.from;\n$ans1331 = $d1330.ans;\n$elidedFrames1334 = $d1330.elidedFrames;\nd1330 = $d1330.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[201],1,$t,false);\n}\nvar d1330 = $d1330;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1331 = R.mC();\n}\nwhile(!R.isContinuation($ans1331)) {\nswitch($step1328) {\ncase 0: $al1332 = L[202];\nvar anf_arg865 = G(d1330,\"flat-width\",L[202]);\n$al1332 = L[203];\nvar anf_arg868 = G(d1330,\"has-hardline\",L[203]);\n// caller optimization;\n$ans1331 = align495.$var.app(d1330,anf_arg865,anf_arg868);\n$step1328 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1331;\ndefault: R.ffi.throwSpinnakerError(L[201],$step1328);\n}\n}\nif($step1328 !== 1) {\n$ans1331.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1332,$temp_lam1329,$step1328,[d1330],[],$elidedFrames1334);\n}\nreturn $ans1331;\n};\nvar align1761 = R.mF($temp_lam1329,\"\");\nvar $temp_lam1337 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__204($d1338) {\nvar $step1336 = 0;\nvar $elidedFrames1342 = 0;\nvar $ans1339 = D;\nvar $al1340 = L[204];\nif(R.isAR($d1338)) {\n$step1336 = $d1338.step;\n$al1340 = $d1338.from;\n$ans1339 = $d1338.ans;\n$elidedFrames1342 = $d1338.elidedFrames;\nd1338 = $d1338.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[204],1,$t,false);\n}\nvar d1338 = $d1338;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1339 = R.mC();\n}\nwhile(!R.isContinuation($ans1339)) {\nswitch($step1336) {\ncase 0: $al1340 = L[205];\nvar anf_arg1434 = G(d1338,\"flat-width\",L[205]);\n$al1340 = L[206];\nvar anf_arg881 = G(d1338,\"has-hardline\",L[206]);\n// caller optimization;\n$ans1339 = group499.$var.app(d1338,anf_arg1434,anf_arg881);\n$step1336 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1339;\ndefault: R.ffi.throwSpinnakerError(L[204],$step1336);\n}\n}\nif($step1336 !== 1) {\n$ans1339.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1340,$temp_lam1337,$step1336,[d1338],[],$elidedFrames1342);\n}\nreturn $ans1339;\n};\nvar group1587 = R.mF($temp_lam1337,\"\");\nvar $temp_lam1438 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__207($flat1439,$vert1440) {\nvar $step1437 = 0;\nvar $elidedFrames1444 = 0;\nvar $ans1441 = D;\nvar $al1442 = L[207];\nif(R.isAR($flat1439)) {\n$step1437 = $flat1439.step;\n$al1442 = $flat1439.from;\n$ans1441 = $flat1439.ans;\n$elidedFrames1444 = $flat1439.elidedFrames;\nflat1439 = $flat1439.args[0];\nvert1440 = $flat1439.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[207],2,$t,false);\n}\nvar flat1439 = $flat1439;\nvar vert1440 = $vert1440;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1441 = R.mC();\n}\nwhile(!R.isContinuation($ans1441)) {\nswitch($step1437) {\ncase 0: $al1442 = L[208];\nvar anf_arg1446 = G(flat1439,\"flat-width\",L[208]);\n$al1442 = L[209];\nvar anf_arg605 = G(flat1439,\"has-hardline\",L[209]);\n// caller optimization;\n$ans1441 = if$flat493.$var.app(flat1439,vert1440,anf_arg1446,anf_arg605);\n$step1437 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1441;\ndefault: R.ffi.throwSpinnakerError(L[207],$step1437);\n}\n}\nif($step1437 !== 1) {\n$ans1441.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1442,$temp_lam1438,$step1437,[flat1439,vert1440],[],$elidedFrames1444);\n}\nreturn $ans1441;\n};\nvar if$flat1508 = R.mF($temp_lam1438,\"\");\nvar $temp_lam1452 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__210($n1453,$d1454) {\nvar $step1451 = 0;\nvar $elidedFrames1458 = 0;\nvar $ans1455 = D;\nvar $al1456 = L[210];\nif(R.isAR($n1453)) {\n$step1451 = $n1453.step;\n$al1456 = $n1453.from;\n$ans1455 = $n1453.ans;\n$elidedFrames1458 = $n1453.elidedFrames;\nn1453 = $n1453.args[0];\nd1454 = $n1453.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[210],2,$t,false);\n}\nvar n1453 = $n1453;\nvar d1454 = $d1454;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1455 = R.mC();\n}\nwhile(!R.isContinuation($ans1455)) {\nswitch($step1451) {\ncase 0: $al1456 = L[211];\nvar anf_arg606 = G(d1454,\"flat-width\",L[211]);\n$al1456 = L[212];\nvar anf_arg882 = G(d1454,\"has-hardline\",L[212]);\n// caller optimization;\n$ans1455 = nest489.$var.app(n1453,d1454,anf_arg606,anf_arg882);\n$step1451 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1455;\ndefault: R.ffi.throwSpinnakerError(L[210],$step1451);\n}\n}\nif($step1451 !== 1) {\n$ans1455.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1456,$temp_lam1452,$step1451,[n1453,d1454],[],$elidedFrames1458);\n}\nreturn $ans1455;\n};\nvar nest1760 = R.mF($temp_lam1452,\"\");\nvar $temp_lam1462 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__213($fst1463,$snd1464) {\nvar $step1461 = 0;\nvar $elidedFrames1468 = 0;\nvar $ans1465 = D;\nvar $al1466 = L[213];\nif(R.isAR($fst1463)) {\n$step1461 = $fst1463.step;\n$al1466 = $fst1463.from;\n$ans1465 = $fst1463.ans;\n$elidedFrames1468 = $fst1463.elidedFrames;\nfst1463 = $fst1463.args[0];\nsnd1464 = $fst1463.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[213],2,$t,false);\n}\nvar fst1463 = $fst1463;\nvar snd1464 = $snd1464;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1465 = R.mC();\n}\nwhile(!R.isContinuation($ans1465)) {\nswitch($step1461) {\ncase 0: $step1461 = 1;\n$al1466 = L[214];\n// omitting isFunction check;\n$ans1465 = _plus5.app(fst1463,snd1464);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1465;\ndefault: R.ffi.throwSpinnakerError(L[213],$step1461);\n}\n}\nif($step1461 !== 1) {\n$ans1465.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1466,$temp_lam1462,$step1461,[fst1463,snd1464],[],$elidedFrames1468);\n}\nreturn $ans1465;\n};\nvar concat1936 = R.mF($temp_lam1462,\"\");\nvar $temp_lam1471 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__215($n1472) {\nvar $step1470 = 0;\nvar $elidedFrames1476 = 0;\nvar $ans1473 = D;\nvar $al1474 = L[215];\nif(R.isAR($n1472)) {\n$step1470 = $n1472.step;\n$al1474 = $n1472.from;\n$ans1473 = $n1472.ans;\n$elidedFrames1476 = $n1472.elidedFrames;\nn1472 = $n1472.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[215],1,$t,false);\n}\nvar n1472 = $n1472;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1473 = R.mC();\n}\nwhile(!R.isContinuation($ans1473)) {\nswitch($step1470) {\ncase 0: // caller optimization;\n$ans1473 = blank482.$var.app(n1472,n1472,(false));\n$step1470 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1473;\ndefault: R.ffi.throwSpinnakerError(L[215],$step1470);\n}\n}\nif($step1470 !== 1) {\n$ans1473.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1474,$temp_lam1471,$step1470,[n1472],[],$elidedFrames1476);\n}\nreturn $ans1473;\n};\nvar blank1507 = R.mF($temp_lam1471,\"\");\nvar $temp_lam1481 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__216($s1482) {\nvar $step1480 = 0;\nvar $elidedFrames1486 = 0;\nvar $ans1483 = D;\nvar $al1484 = L[216];\nif(R.isAR($s1482)) {\n$step1480 = $s1482.step;\n$al1484 = $s1482.from;\n$ans1483 = $s1482.ans;\n$elidedFrames1486 = $s1482.elidedFrames;\ns1482 = $s1482.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[216],1,$t,false);\n}\nvar s1482 = $s1482;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1483 = R.mC();\n}\nwhile(!R.isContinuation($ans1483)) {\nswitch($step1480) {\ncase 0: $step1480 = 1;\n$al1484 = L[217];\n// omitting isFunction check;\n$ans1483 = string$length1.app(s1482);\nbreak;\ncase 1: var anf_arg883 = $ans1483;\n// caller optimization;\n$ans1483 = str473.$var.app(s1482,anf_arg883,(false));\n$step1480 = 2;\nbreak;\ncase 2: ++R.GAS;\nreturn $ans1483;\ndefault: R.ffi.throwSpinnakerError(L[216],$step1480);\n}\n}\nif($step1480 !== 2) {\n$ans1483.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1484,$temp_lam1481,$step1480,[s1482],[],$elidedFrames1486);\n}\nreturn $ans1483;\n};\nvar str1495 = R.mF($temp_lam1481,\"\");\nvar number1499 = {\"$var\":D};\nvar $temp_lam1489 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__218($n1490) {\nvar $step1488 = 0;\nvar $elidedFrames1494 = 0;\nvar $ans1491 = D;\nvar $al1492 = L[218];\nif(R.isAR($n1490)) {\n$step1488 = $n1490.step;\n$al1492 = $n1490.from;\n$ans1491 = $n1490.ans;\n$elidedFrames1494 = $n1490.elidedFrames;\nn1490 = $n1490.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[218],1,$t,false);\n}\nvar n1490 = $n1490;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1491 = R.mC();\n}\nwhile(!R.isContinuation($ans1491)) {\nswitch($step1488) {\ncase 0: $step1488 = 1;\n$al1492 = L[221];\nvar $ann$check1496 = R._cA(L[221],$type$Number3,n1490);\nif(R.isContinuation($ann$check1496)) {\n$ans1491 = $ann$check1496;\n}\nbreak;\ncase 1: $step1488 = 2;\n$al1492 = L[220];\nif(typeof(tostring1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1492,tostring1);\n}\n$ans1491 = tostring1.app(n1490);\nbreak;\ncase 2: var anf_arg603 = $ans1491;\n$step1488 = 3;\n$al1492 = L[219];\n// omitting isFunction check;\n$ans1491 = str1495.app(anf_arg603);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1491;\ndefault: R.ffi.throwSpinnakerError(L[218],$step1488);\n}\n}\nif($step1488 !== 3) {\n$ans1491.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1492,$temp_lam1489,$step1488,[n1490],[],$elidedFrames1494);\n}\nreturn $ans1491;\n};\nvar anf_assign1498 = R.mF($temp_lam1489,\"number\");\nnumber1499.$var = anf_assign1498;\nR.nothing;\n$step70 = 1;\n$al103 = L[373];\n// omitting isFunction check;\n$ans102 = str1495.app((\"(\"));\nbreak;\ncase 1: var lparen1675 = $ans102;\n$step70 = 2;\n$al103 = L[372];\n// omitting isFunction check;\n$ans102 = str1495.app((\")\"));\nbreak;\ncase 2: var rparen1676 = $ans102;\n$step70 = 3;\n$al103 = L[371];\n// omitting isFunction check;\n$ans102 = str1495.app((\"{\"));\nbreak;\ncase 3: var lbrace1688 = $ans102;\n$step70 = 4;\n$al103 = L[370];\n// omitting isFunction check;\n$ans102 = str1495.app((\"}\"));\nbreak;\ncase 4: var rbrace1689 = $ans102;\n$step70 = 5;\n$al103 = L[369];\n// omitting isFunction check;\n$ans102 = str1495.app((\"[\"));\nbreak;\ncase 5: var lbrack1700 = $ans102;\n$step70 = 6;\n$al103 = L[368];\n// omitting isFunction check;\n$ans102 = str1495.app((\"]\"));\nbreak;\ncase 6: var rbrack1701 = $ans102;\n$step70 = 7;\n$al103 = L[367];\n// omitting isFunction check;\n$ans102 = str1495.app((\"<\"));\nbreak;\ncase 7: var langle1937 = $ans102;\n$step70 = 8;\n$al103 = L[366];\n// omitting isFunction check;\n$ans102 = str1495.app((\">\"));\nbreak;\ncase 8: var rangle1938 = $ans102;\n$step70 = 9;\n$al103 = L[365];\n// omitting isFunction check;\n$ans102 = str1495.app((\",\"));\nbreak;\ncase 9: var comma1516 = $ans102;\n$step70 = 10;\n$al103 = L[364];\n// omitting isFunction check;\n$ans102 = str1495.app((\";\"));\nbreak;\ncase 10: var semi1566 = $ans102;\nvar sbreak1515 = {\"$var\":D};\nvar $temp_lam1501 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__222($n1502) {\nvar $step1500 = 0;\nvar $elidedFrames1506 = 0;\nvar $ans1503 = D;\nvar $al1504 = L[222];\nif(R.isAR($n1502)) {\n$step1500 = $n1502.step;\n$al1504 = $n1502.from;\n$ans1503 = $n1502.ans;\n$elidedFrames1506 = $n1502.elidedFrames;\nn1502 = $n1502.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[222],1,$t,false);\n}\nvar n1502 = $n1502;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1503 = R.mC();\n}\nwhile(!R.isContinuation($ans1503)) {\nswitch($step1500) {\ncase 0: $step1500 = 1;\n$al1504 = L[224];\n// omitting isFunction check;\n$ans1503 = blank1507.app(n1502);\nbreak;\ncase 1: var anf_arg608 = $ans1503;\n$step1500 = 2;\n$al1504 = L[223];\n// omitting isFunction check;\n$ans1503 = if$flat1508.app(anf_arg608,hardline1509);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans1503;\ndefault: R.ffi.throwSpinnakerError(L[222],$step1500);\n}\n}\nif($step1500 !== 2) {\n$ans1503.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1504,$temp_lam1501,$step1500,[n1502],[],$elidedFrames1506);\n}\nreturn $ans1503;\n};\nvar anf_assign1514 = R.mF($temp_lam1501,\"sbreak\");\nsbreak1515.$var = anf_assign1514;\nR.nothing;\n$step70 = 11;\n$al103 = L[363];\n// omitting isFunction check;\n$ans102 = sbreak1515.$var.app((1));\nbreak;\ncase 11: var anf_arg1565 = $ans102;\n$step70 = 12;\n$al103 = L[362];\n// omitting isFunction check;\n$ans102 = _plus5.app(comma1516,anf_arg1565);\nbreak;\ncase 12: var commabreak1939 = $ans102;\n$step70 = 13;\n$al103 = L[361];\n// omitting isFunction check;\n$ans102 = sbreak1515.$var.app((1));\nbreak;\ncase 13: var anf_arg651 = $ans102;\n$step70 = 14;\n$al103 = L[360];\n// omitting isFunction check;\n$ans102 = _plus5.app(semi1566,anf_arg651);\nbreak;\ncase 14: var semibreak1940 = $ans102;\nvar flow$map1628 = {\"$var\":D};\nvar flow1647 = {\"$var\":D};\nvar vert1666 = {\"$var\":D};\nvar parens1680 = {\"$var\":D};\nvar braces1692 = {\"$var\":D};\nvar brackets1703 = {\"$var\":D};\nvar $temp_lam1568 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__225($sep1569,$f1570,$items1571) {\nvar $step1567 = 0;\nvar $elidedFrames1578 = 0;\nvar $ans1575 = D;\nvar $al1576 = L[225];\nif(R.isAR($sep1569)) {\n$step1567 = $sep1569.step;\n$al1576 = $sep1569.from;\n$ans1575 = $sep1569.ans;\n$elidedFrames1578 = $sep1569.elidedFrames;\nsep1569 = $sep1569.args[0];\nf1570 = $sep1569.args[1];\nitems1571 = $sep1569.args[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[225],3,$t,false);\n}\nvar sep1569 = $sep1569;\nvar f1570 = $f1570;\nvar items1571 = $items1571;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1575 = R.mC();\n}\nwhile(!R.isContinuation($ans1575)) {\nswitch($step1567) {\ncase 0: var $temp_lam1580 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__226($acc1581,$item1582) {\nvar $step1579 = 0;\nvar $elidedFrames1586 = 0;\nvar $ans1583 = D;\nvar $al1584 = L[226];\nif(R.isAR($acc1581)) {\n$step1579 = $acc1581.step;\n$al1584 = $acc1581.from;\n$ans1583 = $acc1581.ans;\n$elidedFrames1586 = $acc1581.elidedFrames;\nacc1581 = $acc1581.args[0];\nitem1582 = $acc1581.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[226],2,$t,false);\n}\nvar acc1581 = $acc1581;\nvar item1582 = $item1582;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1583 = R.mC();\n}\nwhile(!R.isContinuation($ans1583)) {\nswitch($step1579) {\ncase 0: // caller optimization;\n$ans1583 = is$mt$doc120.$var.app(acc1581);\nvar anf_if1621 = $ans1583;\n$step1579 = R.checkPyretTrue(anf_if1621)?1:2;\nbreak;\ncase 1: $step1579 = 6;\n$al1584 = L[227];\nif(typeof(f1570.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1584,f1570);\n}\n$ans1583 = f1570.app(item1582);\nbreak;\ncase 2: $step1579 = 3;\n$al1584 = L[231];\nif(typeof(f1570.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1584,f1570);\n}\n$ans1583 = f1570.app(item1582);\nbreak;\ncase 3: var anf_arg930 = $ans1583;\n$step1579 = 4;\n$al1584 = L[230];\n// omitting isFunction check;\n$ans1583 = _plus5.app(sep1569,anf_arg930);\nbreak;\ncase 4: var anf_arg686 = $ans1583;\n$step1579 = 5;\n$al1584 = L[229];\n// omitting isFunction check;\n$ans1583 = group1587.app(anf_arg686);\nbreak;\ncase 5: var anf_arg1620 = $ans1583;\n$step1579 = 6;\n$al1584 = L[228];\n// omitting isFunction check;\n$ans1583 = _plus5.app(acc1581,anf_arg1620);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1583;\ndefault: R.ffi.throwSpinnakerError(L[226],$step1579);\n}\n}\nif($step1579 !== 6) {\n$ans1583.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1584,$temp_lam1580,$step1579,[acc1581,item1582],[],$elidedFrames1586);\n}\nreturn $ans1583;\n};\nvar anf_arg714 = R.mF($temp_lam1580,\"for-body<line 240, column 2>\");\n$step1567 = 1;\n$ans1575 = R.maybeMethodCall3(lists61,\"fold\",L[226],anf_arg714,mt$doc1625,items1571);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1575;\ndefault: R.ffi.throwSpinnakerError(L[225],$step1567);\n}\n}\nif($step1567 !== 1) {\n$ans1575.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1576,$temp_lam1568,$step1567,[sep1569,f1570,items1571],[],$elidedFrames1578);\n}\nreturn $ans1575;\n};\nvar anf_assign1627 = R.mF($temp_lam1568,\"flow-map\");\nflow$map1628.$var = anf_assign1627;\nR.nothing;\nvar $temp_lam1630 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__232($items1631) {\nvar $step1629 = 0;\nvar $elidedFrames1636 = 0;\nvar $ans1633 = D;\nvar $al1634 = L[232];\nif(R.isAR($items1631)) {\n$step1629 = $items1631.step;\n$al1634 = $items1631.from;\n$ans1633 = $items1631.ans;\n$elidedFrames1636 = $items1631.elidedFrames;\nitems1631 = $items1631.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[232],1,$t,false);\n}\nvar items1631 = $items1631;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1633 = R.mC();\n}\nwhile(!R.isContinuation($ans1633)) {\nswitch($step1629) {\ncase 0: $step1629 = 1;\n$al1634 = L[235];\n// omitting isFunction check;\n$ans1633 = sbreak1515.$var.app((1));\nbreak;\ncase 1: var anf_arg707 = $ans1633;\nvar $temp_lam1638 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__233($x1639) {\nvar $step1637 = 0;\nvar $elidedFrames1643 = 0;\nvar $ans1640 = D;\nvar $al1641 = L[233];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[233],1,$t,false);\n}\nvar x1639 = $x1639;\n// callee optimization;\nwhile(!R.isContinuation($ans1640)) {\nswitch($step1637) {\ncase 0: $step1637 = 1;\n$ans1640 = x1639;\nbreak;\ncase 1: return $ans1640;\ndefault: R.ffi.throwSpinnakerError(L[233],$step1637);\n}\n}\nreturn $ans1640;\n};\nvar anf_arg715 = R.mF($temp_lam1638,\"\");\n$step1629 = 2;\n$al1634 = L[234];\n// omitting isFunction check;\n$ans1633 = flow$map1628.$var.app(anf_arg707,anf_arg715,items1631);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans1633;\ndefault: R.ffi.throwSpinnakerError(L[232],$step1629);\n}\n}\nif($step1629 !== 2) {\n$ans1633.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1634,$temp_lam1630,$step1629,[items1631],[],$elidedFrames1636);\n}\nreturn $ans1633;\n};\nvar anf_assign1646 = R.mF($temp_lam1630,\"flow\");\nflow1647.$var = anf_assign1646;\nR.nothing;\nvar $temp_lam1649 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__236($items1650) {\nvar $step1648 = 0;\nvar $elidedFrames1655 = 0;\nvar $ans1652 = D;\nvar $al1653 = L[236];\nif(R.isAR($items1650)) {\n$step1648 = $items1650.step;\n$al1653 = $items1650.from;\n$ans1652 = $items1650.ans;\n$elidedFrames1655 = $items1650.elidedFrames;\nitems1650 = $items1650.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[236],1,$t,false);\n}\nvar items1650 = $items1650;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1652 = R.mC();\n}\nwhile(!R.isContinuation($ans1652)) {\nswitch($step1648) {\ncase 0: var $temp_lam1657 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__237($x1658) {\nvar $step1656 = 0;\nvar $elidedFrames1662 = 0;\nvar $ans1659 = D;\nvar $al1660 = L[237];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[237],1,$t,false);\n}\nvar x1658 = $x1658;\n// callee optimization;\nwhile(!R.isContinuation($ans1659)) {\nswitch($step1656) {\ncase 0: $step1656 = 1;\n$ans1659 = x1658;\nbreak;\ncase 1: return $ans1659;\ndefault: R.ffi.throwSpinnakerError(L[237],$step1656);\n}\n}\nreturn $ans1659;\n};\nvar anf_arg709 = R.mF($temp_lam1657,\"\");\n$step1648 = 1;\n$al1653 = L[238];\n// omitting isFunction check;\n$ans1652 = flow$map1628.$var.app(hardline1509,anf_arg709,items1650);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1652;\ndefault: R.ffi.throwSpinnakerError(L[236],$step1648);\n}\n}\nif($step1648 !== 1) {\n$ans1652.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1653,$temp_lam1649,$step1648,[items1650],[],$elidedFrames1655);\n}\nreturn $ans1652;\n};\nvar anf_assign1665 = R.mF($temp_lam1649,\"vert\");\nvert1666.$var = anf_assign1665;\nR.nothing;\nvar $temp_lam1668 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__239($d1669) {\nvar $step1667 = 0;\nvar $elidedFrames1674 = 0;\nvar $ans1671 = D;\nvar $al1672 = L[239];\nif(R.isAR($d1669)) {\n$step1667 = $d1669.step;\n$al1672 = $d1669.from;\n$ans1671 = $d1669.ans;\n$elidedFrames1674 = $d1669.elidedFrames;\nd1669 = $d1669.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[239],1,$t,false);\n}\nvar d1669 = $d1669;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1671 = R.mC();\n}\nwhile(!R.isContinuation($ans1671)) {\nswitch($step1667) {\ncase 0: $step1667 = 1;\n$al1672 = L[242];\n// omitting isFunction check;\n$ans1671 = _plus5.app(lparen1675,d1669);\nbreak;\ncase 1: var anf_arg765 = $ans1671;\n$step1667 = 2;\n$al1672 = L[241];\n// omitting isFunction check;\n$ans1671 = _plus5.app(anf_arg765,rparen1676);\nbreak;\ncase 2: var anf_arg364 = $ans1671;\n$step1667 = 3;\n$al1672 = L[240];\n// omitting isFunction check;\n$ans1671 = group1587.app(anf_arg364);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1671;\ndefault: R.ffi.throwSpinnakerError(L[239],$step1667);\n}\n}\nif($step1667 !== 3) {\n$ans1671.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1672,$temp_lam1668,$step1667,[d1669],[],$elidedFrames1674);\n}\nreturn $ans1671;\n};\nvar anf_assign1679 = R.mF($temp_lam1668,\"parens\");\nparens1680.$var = anf_assign1679;\nR.nothing;\nvar $temp_lam1682 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__243($d1683) {\nvar $step1681 = 0;\nvar $elidedFrames1687 = 0;\nvar $ans1684 = D;\nvar $al1685 = L[243];\nif(R.isAR($d1683)) {\n$step1681 = $d1683.step;\n$al1685 = $d1683.from;\n$ans1684 = $d1683.ans;\n$elidedFrames1687 = $d1683.elidedFrames;\nd1683 = $d1683.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[243],1,$t,false);\n}\nvar d1683 = $d1683;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1684 = R.mC();\n}\nwhile(!R.isContinuation($ans1684)) {\nswitch($step1681) {\ncase 0: $step1681 = 1;\n$al1685 = L[246];\n// omitting isFunction check;\n$ans1684 = _plus5.app(lbrace1688,d1683);\nbreak;\ncase 1: var anf_arg991 = $ans1684;\n$step1681 = 2;\n$al1685 = L[245];\n// omitting isFunction check;\n$ans1684 = _plus5.app(anf_arg991,rbrace1689);\nbreak;\ncase 2: var anf_arg782 = $ans1684;\n$step1681 = 3;\n$al1685 = L[244];\n// omitting isFunction check;\n$ans1684 = group1587.app(anf_arg782);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1684;\ndefault: R.ffi.throwSpinnakerError(L[243],$step1681);\n}\n}\nif($step1681 !== 3) {\n$ans1684.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1685,$temp_lam1682,$step1681,[d1683],[],$elidedFrames1687);\n}\nreturn $ans1684;\n};\nvar anf_assign103 = R.mF($temp_lam1682,\"braces\");\nbraces1692.$var = anf_assign103;\nR.nothing;\nvar $temp_lam1694 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__247($d1695) {\nvar $step1693 = 0;\nvar $elidedFrames1699 = 0;\nvar $ans1696 = D;\nvar $al1697 = L[247];\nif(R.isAR($d1695)) {\n$step1693 = $d1695.step;\n$al1697 = $d1695.from;\n$ans1696 = $d1695.ans;\n$elidedFrames1699 = $d1695.elidedFrames;\nd1695 = $d1695.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[247],1,$t,false);\n}\nvar d1695 = $d1695;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1696 = R.mC();\n}\nwhile(!R.isContinuation($ans1696)) {\nswitch($step1693) {\ncase 0: $step1693 = 1;\n$al1697 = L[250];\n// omitting isFunction check;\n$ans1696 = _plus5.app(lbrack1700,d1695);\nbreak;\ncase 1: var anf_arg804 = $ans1696;\n$step1693 = 2;\n$al1697 = L[249];\n// omitting isFunction check;\n$ans1696 = _plus5.app(anf_arg804,rbrack1701);\nbreak;\ncase 2: var anf_arg378 = $ans1696;\n$step1693 = 3;\n$al1697 = L[248];\n// omitting isFunction check;\n$ans1696 = group1587.app(anf_arg378);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1696;\ndefault: R.ffi.throwSpinnakerError(L[247],$step1693);\n}\n}\nif($step1693 !== 3) {\n$ans1696.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1697,$temp_lam1694,$step1693,[d1695],[],$elidedFrames1699);\n}\nreturn $ans1696;\n};\nvar anf_assign109 = R.mF($temp_lam1694,\"brackets\");\nbrackets1703.$var = anf_assign109;\nR.nothing;\n$step70 = 15;\n$al103 = L[359];\n// omitting isFunction check;\n$ans102 = str1495.app((\"'\"));\nbreak;\ncase 15: var str$squote1748 = $ans102;\n$step70 = 16;\n$al103 = L[358];\n// omitting isFunction check;\n$ans102 = str1495.app((\"\\\"\"));\nbreak;\ncase 16: var str$dquote1711 = $ans102;\nvar dquote1737 = {\"$var\":D};\nvar squote1750 = {\"$var\":D};\nvar hang1764 = {\"$var\":D};\nvar prefix1777 = {\"$var\":D};\nvar infix1801 = {\"$var\":D};\nvar infix$break1819 = {\"$var\":D};\nvar surround1846 = {\"$var\":D};\nvar soft$surround1871 = {\"$var\":D};\nvar separate1895 = {\"$var\":D};\nvar surround$separate1921 = {\"$var\":D};\nvar label$align$surround1935 = {\"$var\":D};\nvar $temp_lam1705 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__251($s1706) {\nvar $step1704 = 0;\nvar $elidedFrames1710 = 0;\nvar $ans1707 = D;\nvar $al1708 = L[251];\nif(R.isAR($s1706)) {\n$step1704 = $s1706.step;\n$al1708 = $s1706.from;\n$ans1707 = $s1706.ans;\n$elidedFrames1710 = $s1706.elidedFrames;\ns1706 = $s1706.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[251],1,$t,false);\n}\nvar s1706 = $s1706;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1707 = R.mC();\n}\nwhile(!R.isContinuation($ans1707)) {\nswitch($step1704) {\ncase 0: $step1704 = 1;\n$al1708 = L[254];\n// omitting isFunction check;\n$ans1707 = _plus5.app(str$dquote1711,s1706);\nbreak;\ncase 1: var anf_arg1733 = $ans1707;\n$step1704 = 2;\n$al1708 = L[253];\n// omitting isFunction check;\n$ans1707 = _plus5.app(anf_arg1733,str$dquote1711);\nbreak;\ncase 2: var anf_arg384 = $ans1707;\n$step1704 = 3;\n$al1708 = L[252];\n// omitting isFunction check;\n$ans1707 = group1587.app(anf_arg384);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1707;\ndefault: R.ffi.throwSpinnakerError(L[251],$step1704);\n}\n}\nif($step1704 !== 3) {\n$ans1707.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1708,$temp_lam1705,$step1704,[s1706],[],$elidedFrames1710);\n}\nreturn $ans1707;\n};\nvar anf_assign115 = R.mF($temp_lam1705,\"dquote\");\ndquote1737.$var = anf_assign115;\nR.nothing;\nvar $temp_lam1741 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__255($s1742) {\nvar $step1740 = 0;\nvar $elidedFrames1747 = 0;\nvar $ans1744 = D;\nvar $al1745 = L[255];\nif(R.isAR($s1742)) {\n$step1740 = $s1742.step;\n$al1745 = $s1742.from;\n$ans1744 = $s1742.ans;\n$elidedFrames1747 = $s1742.elidedFrames;\ns1742 = $s1742.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[255],1,$t,false);\n}\nvar s1742 = $s1742;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1744 = R.mC();\n}\nwhile(!R.isContinuation($ans1744)) {\nswitch($step1740) {\ncase 0: $step1740 = 1;\n$al1745 = L[258];\n// omitting isFunction check;\n$ans1744 = _plus5.app(str$squote1748,s1742);\nbreak;\ncase 1: var anf_arg386 = $ans1744;\n$step1740 = 2;\n$al1745 = L[257];\n// omitting isFunction check;\n$ans1744 = _plus5.app(anf_arg386,str$squote1748);\nbreak;\ncase 2: var anf_arg809 = $ans1744;\n$step1740 = 3;\n$al1745 = L[256];\n// omitting isFunction check;\n$ans1744 = group1587.app(anf_arg809);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1744;\ndefault: R.ffi.throwSpinnakerError(L[255],$step1740);\n}\n}\nif($step1740 !== 3) {\n$ans1744.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1745,$temp_lam1741,$step1740,[s1742],[],$elidedFrames1747);\n}\nreturn $ans1744;\n};\nvar anf_assign138 = R.mF($temp_lam1741,\"squote\");\nsquote1750.$var = anf_assign138;\nR.nothing;\nvar $temp_lam1753 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__259($i1754,$d1755) {\nvar $step1752 = 0;\nvar $elidedFrames1759 = 0;\nvar $ans1756 = D;\nvar $al1757 = L[259];\nif(R.isAR($i1754)) {\n$step1752 = $i1754.step;\n$al1757 = $i1754.from;\n$ans1756 = $i1754.ans;\n$elidedFrames1759 = $i1754.elidedFrames;\ni1754 = $i1754.args[0];\nd1755 = $i1754.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[259],2,$t,false);\n}\nvar i1754 = $i1754;\nvar d1755 = $d1755;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1756 = R.mC();\n}\nwhile(!R.isContinuation($ans1756)) {\nswitch($step1752) {\ncase 0: $step1752 = 1;\n$al1757 = L[261];\n// omitting isFunction check;\n$ans1756 = nest1760.app(i1754,d1755);\nbreak;\ncase 1: var anf_arg811 = $ans1756;\n$step1752 = 2;\n$al1757 = L[260];\n// omitting isFunction check;\n$ans1756 = align1761.app(anf_arg811);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans1756;\ndefault: R.ffi.throwSpinnakerError(L[259],$step1752);\n}\n}\nif($step1752 !== 2) {\n$ans1756.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1757,$temp_lam1753,$step1752,[i1754,d1755],[],$elidedFrames1759);\n}\nreturn $ans1756;\n};\nvar anf_assign1763 = R.mF($temp_lam1753,\"hang\");\nhang1764.$var = anf_assign1763;\nR.nothing;\nvar $temp_lam1766 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__262($n1767,$b1768,$x1769,$y1770) {\nvar $step1765 = 0;\nvar $elidedFrames1774 = 0;\nvar $ans1771 = D;\nvar $al1772 = L[262];\nif(R.isAR($n1767)) {\n$step1765 = $n1767.step;\n$al1772 = $n1767.from;\n$ans1771 = $n1767.ans;\n$elidedFrames1774 = $n1767.elidedFrames;\nn1767 = $n1767.args[0];\nb1768 = $n1767.args[1];\nx1769 = $n1767.args[2];\ny1770 = $n1767.args[3];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[262],4,$t,false);\n}\nvar n1767 = $n1767;\nvar b1768 = $b1768;\nvar x1769 = $x1769;\nvar y1770 = $y1770;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1771 = R.mC();\n}\nwhile(!R.isContinuation($ans1771)) {\nswitch($step1765) {\ncase 0: $step1765 = 1;\n$al1772 = L[267];\n// omitting isFunction check;\n$ans1771 = sbreak1515.$var.app(b1768);\nbreak;\ncase 1: var anf_arg812 = $ans1771;\n$step1765 = 2;\n$al1772 = L[266];\n// omitting isFunction check;\n$ans1771 = _plus5.app(anf_arg812,y1770);\nbreak;\ncase 2: var anf_arg391 = $ans1771;\n$step1765 = 3;\n$al1772 = L[265];\n// omitting isFunction check;\n$ans1771 = nest1760.app(n1767,anf_arg391);\nbreak;\ncase 3: var anf_arg392 = $ans1771;\n$step1765 = 4;\n$al1772 = L[264];\n// omitting isFunction check;\n$ans1771 = _plus5.app(x1769,anf_arg392);\nbreak;\ncase 4: var anf_arg395 = $ans1771;\n$step1765 = 5;\n$al1772 = L[263];\n// omitting isFunction check;\n$ans1771 = group1587.app(anf_arg395);\nbreak;\ncase 5: ++R.GAS;\nreturn $ans1771;\ndefault: R.ffi.throwSpinnakerError(L[262],$step1765);\n}\n}\nif($step1765 !== 5) {\n$ans1771.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1772,$temp_lam1766,$step1765,[n1767,b1768,x1769,y1770],[],$elidedFrames1774);\n}\nreturn $ans1771;\n};\nvar anf_assign1776 = R.mF($temp_lam1766,\"prefix\");\nprefix1777.$var = anf_assign1776;\nR.nothing;\nvar $temp_lam1782 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__268($n1783,$b1784,$op1785,$x1786,$y1787) {\nvar $step1781 = 0;\nvar $elidedFrames1791 = 0;\nvar $ans1788 = D;\nvar $al1789 = L[268];\nif(R.isAR($n1783)) {\n$step1781 = $n1783.step;\n$al1789 = $n1783.from;\n$ans1788 = $n1783.ans;\n$elidedFrames1791 = $n1783.elidedFrames;\nn1783 = $n1783.args[0];\nb1784 = $n1783.args[1];\nop1785 = $n1783.args[2];\nx1786 = $n1783.args[3];\ny1787 = $n1783.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[268],5,$t,false);\n}\nvar n1783 = $n1783;\nvar b1784 = $b1784;\nvar op1785 = $op1785;\nvar x1786 = $x1786;\nvar y1787 = $y1787;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1788 = R.mC();\n}\nwhile(!R.isContinuation($ans1788)) {\nswitch($step1781) {\ncase 0: $step1781 = 1;\n$al1789 = L[273];\nvar $ann$check1794 = R._cA(L[273],$type$Number3,n1783);\nif(R.isContinuation($ann$check1794)) {\n$ans1788 = $ann$check1794;\n}\nbreak;\ncase 1: $step1781 = 2;\n$al1789 = L[274];\nvar $ann$check1795 = R._cA(L[274],$type$Number3,b1784);\nif(R.isContinuation($ann$check1795)) {\n$ans1788 = $ann$check1795;\n}\nbreak;\ncase 2: $step1781 = 3;\n$al1789 = L[275];\nvar $ann$check1796 = R._cA(L[275],PPrintDoc354,op1785);\nif(R.isContinuation($ann$check1796)) {\n$ans1788 = $ann$check1796;\n}\nbreak;\ncase 3: $step1781 = 4;\n$al1789 = L[276];\nvar $ann$check1797 = R._cA(L[276],PPrintDoc354,x1786);\nif(R.isContinuation($ann$check1797)) {\n$ans1788 = $ann$check1797;\n}\nbreak;\ncase 4: $step1781 = 5;\n$al1789 = L[277];\nvar $ann$check1798 = R._cA(L[277],PPrintDoc354,y1787);\nif(R.isContinuation($ann$check1798)) {\n$ans1788 = $ann$check1798;\n}\nbreak;\ncase 5: $step1781 = 6;\n$al1789 = L[272];\n// omitting isFunction check;\n$ans1788 = blank1507.app(b1784);\nbreak;\ncase 6: var anf_arg834 = $ans1788;\n$step1781 = 7;\n$al1789 = L[271];\n// omitting isFunction check;\n$ans1788 = _plus5.app(x1786,anf_arg834);\nbreak;\ncase 7: var anf_arg398 = $ans1788;\n$step1781 = 8;\n$al1789 = L[270];\n// omitting isFunction check;\n$ans1788 = _plus5.app(anf_arg398,op1785);\nbreak;\ncase 8: var anf_arg399 = $ans1788;\n$step1781 = 9;\n$al1789 = L[269];\n// omitting isFunction check;\n$ans1788 = prefix1777.$var.app(n1783,b1784,anf_arg399,y1787);\nbreak;\ncase 9: ++R.GAS;\nreturn $ans1788;\ndefault: R.ffi.throwSpinnakerError(L[268],$step1781);\n}\n}\nif($step1781 !== 9) {\n$ans1788.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1789,$temp_lam1782,$step1781,[n1783,b1784,op1785,x1786,y1787],[],$elidedFrames1791);\n}\nreturn $ans1788;\n};\nvar anf_assign1800 = R.mF($temp_lam1782,\"infix\");\ninfix1801.$var = anf_assign1800;\nR.nothing;\nvar $temp_lam1803 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__278($n1239,$b1804,$op1805,$x1806,$y1807) {\nvar $step1802 = 0;\nvar $elidedFrames1811 = 0;\nvar $ans1808 = D;\nvar $al1809 = L[278];\nif(R.isAR($n1239)) {\n$step1802 = $n1239.step;\n$al1809 = $n1239.from;\n$ans1808 = $n1239.ans;\n$elidedFrames1811 = $n1239.elidedFrames;\nn1239 = $n1239.args[0];\nb1804 = $n1239.args[1];\nop1805 = $n1239.args[2];\nx1806 = $n1239.args[3];\ny1807 = $n1239.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[278],5,$t,false);\n}\nvar n1239 = $n1239;\nvar b1804 = $b1804;\nvar op1805 = $op1805;\nvar x1806 = $x1806;\nvar y1807 = $y1807;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1808 = R.mC();\n}\nwhile(!R.isContinuation($ans1808)) {\nswitch($step1802) {\ncase 0: $step1802 = 1;\n$al1809 = L[283];\nvar $ann$check1812 = R._cA(L[283],$type$Number3,n1239);\nif(R.isContinuation($ann$check1812)) {\n$ans1808 = $ann$check1812;\n}\nbreak;\ncase 1: $step1802 = 2;\n$al1809 = L[284];\nvar $ann$check1813 = R._cA(L[284],$type$Number3,b1804);\nif(R.isContinuation($ann$check1813)) {\n$ans1808 = $ann$check1813;\n}\nbreak;\ncase 2: $step1802 = 3;\n$al1809 = L[285];\nvar $ann$check1814 = R._cA(L[285],PPrintDoc354,op1805);\nif(R.isContinuation($ann$check1814)) {\n$ans1808 = $ann$check1814;\n}\nbreak;\ncase 3: $step1802 = 4;\n$al1809 = L[286];\nvar $ann$check1815 = R._cA(L[286],PPrintDoc354,x1806);\nif(R.isContinuation($ann$check1815)) {\n$ans1808 = $ann$check1815;\n}\nbreak;\ncase 4: $step1802 = 5;\n$al1809 = L[287];\nvar $ann$check1816 = R._cA(L[287],PPrintDoc354,y1807);\nif(R.isContinuation($ann$check1816)) {\n$ans1808 = $ann$check1816;\n}\nbreak;\ncase 5: $step1802 = 6;\n$al1809 = L[282];\n// omitting isFunction check;\n$ans1808 = blank1507.app(b1804);\nbreak;\ncase 6: var anf_arg400 = $ans1808;\n$step1802 = 7;\n$al1809 = L[281];\n// omitting isFunction check;\n$ans1808 = _plus5.app(op1805,anf_arg400);\nbreak;\ncase 7: var anf_arg402 = $ans1808;\n$step1802 = 8;\n$al1809 = L[280];\n// omitting isFunction check;\n$ans1808 = _plus5.app(anf_arg402,y1807);\nbreak;\ncase 8: var anf_arg836 = $ans1808;\n$step1802 = 9;\n$al1809 = L[279];\n// omitting isFunction check;\n$ans1808 = prefix1777.$var.app(n1239,b1804,x1806,anf_arg836);\nbreak;\ncase 9: ++R.GAS;\nreturn $ans1808;\ndefault: R.ffi.throwSpinnakerError(L[278],$step1802);\n}\n}\nif($step1802 !== 9) {\n$ans1808.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1809,$temp_lam1803,$step1802,[n1239,b1804,op1805,x1806,y1807],[],$elidedFrames1811);\n}\nreturn $ans1808;\n};\nvar anf_assign1818 = R.mF($temp_lam1803,\"infix-break\");\ninfix$break1819.$var = anf_assign1818;\nR.nothing;\nvar $temp_lam1821 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__288($n1822,$b1823,$open1824,$contents1825,$close1826) {\nvar $step1820 = 0;\nvar $elidedFrames1830 = 0;\nvar $ans1827 = D;\nvar $al1828 = L[288];\nif(R.isAR($n1822)) {\n$step1820 = $n1822.step;\n$al1828 = $n1822.from;\n$ans1827 = $n1822.ans;\n$elidedFrames1830 = $n1822.elidedFrames;\nn1822 = $n1822.args[0];\nb1823 = $n1822.args[1];\nopen1824 = $n1822.args[2];\ncontents1825 = $n1822.args[3];\nclose1826 = $n1822.args[4];\nanf_arg186 = $n1822.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[288],5,$t,false);\n}\nvar n1822 = $n1822;\nvar b1823 = $b1823;\nvar open1824 = $open1824;\nvar contents1825 = $contents1825;\nvar close1826 = $close1826;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1827 = R.mC();\n}\nwhile(!R.isContinuation($ans1827)) {\nswitch($step1820) {\ncase 0: $step1820 = 1;\n$al1828 = L[302];\nvar $ann$check1838 = R._cA(L[302],$type$Number3,n1822);\nif(R.isContinuation($ann$check1838)) {\n$ans1827 = $ann$check1838;\n}\nbreak;\ncase 1: $step1820 = 2;\n$al1828 = L[303];\nvar $ann$check1839 = R._cA(L[303],$type$Number3,b1823);\nif(R.isContinuation($ann$check1839)) {\n$ans1827 = $ann$check1839;\n}\nbreak;\ncase 2: $step1820 = 3;\n$al1828 = L[304];\nvar $ann$check1840 = R._cA(L[304],PPrintDoc354,open1824);\nif(R.isContinuation($ann$check1840)) {\n$ans1827 = $ann$check1840;\n}\nbreak;\ncase 3: $step1820 = 4;\n$al1828 = L[305];\nvar $ann$check1841 = R._cA(L[305],PPrintDoc354,contents1825);\nif(R.isContinuation($ann$check1841)) {\n$ans1827 = $ann$check1841;\n}\nbreak;\ncase 4: $step1820 = 5;\n$al1828 = L[306];\nvar $ann$check1843 = R._cA(L[306],PPrintDoc354,close1826);\nif(R.isContinuation($ann$check1843)) {\n$ans1827 = $ann$check1843;\n}\nbreak;\ncase 5: // caller optimization;\n$ans1827 = is$mt$doc120.$var.app(close1826);\nvar anf_if1837 = $ans1827;\n$step1820 = R.checkPyretTrue(anf_if1837)?6:11;\nbreak;\ncase 6: $step1820 = 7;\n$al1828 = L[293];\n// omitting isFunction check;\n$ans1827 = sbreak1515.$var.app(b1823);\nbreak;\ncase 7: var anf_arg841 = $ans1827;\n$step1820 = 8;\n$al1828 = L[292];\n// omitting isFunction check;\n$ans1827 = _plus5.app(anf_arg841,contents1825);\nbreak;\ncase 8: var anf_arg870 = $ans1827;\n$step1820 = 9;\n$al1828 = L[291];\n// omitting isFunction check;\n$ans1827 = nest1760.app(n1822,anf_arg870);\nbreak;\ncase 9: var anf_arg421 = $ans1827;\n$step1820 = 10;\n$al1828 = L[290];\n// omitting isFunction check;\n$ans1827 = _plus5.app(open1824,anf_arg421);\nbreak;\ncase 10: var anf_arg1832 = $ans1827;\n$step1820 = 19;\n$al1828 = L[289];\n// omitting isFunction check;\n$ans1827 = group1587.app(anf_arg1832);\nbreak;\ncase 11: $step1820 = 12;\n$al1828 = L[301];\n// omitting isFunction check;\n$ans1827 = sbreak1515.$var.app(b1823);\nbreak;\ncase 12: var anf_arg903 = $ans1827;\n$step1820 = 13;\n$al1828 = L[300];\n// omitting isFunction check;\n$ans1827 = _plus5.app(anf_arg903,contents1825);\nbreak;\ncase 13: var anf_arg185 = $ans1827;\n$step1820 = 14;\n$al1828 = L[299];\n// omitting isFunction check;\n$ans1827 = nest1760.app(n1822,anf_arg185);\nbreak;\ncase 14: var anf_arg425 = $ans1827;\n$step1820 = 15;\n$al1828 = L[298];\n// omitting isFunction check;\n$ans1827 = _plus5.app(open1824,anf_arg425);\nbreak;\ncase 15: var anf_arg186 = $ans1827;\n$step1820 = 16;\n$al1828 = L[297];\n// omitting isFunction check;\n$ans1827 = sbreak1515.$var.app(b1823);\nbreak;\ncase 16: var anf_arg426 = $ans1827;\n$step1820 = 17;\n$al1828 = L[296];\n// omitting isFunction check;\n$ans1827 = _plus5.app(anf_arg186,anf_arg426);\nbreak;\ncase 17: var anf_arg427 = $ans1827;\n$step1820 = 18;\n$al1828 = L[295];\n// omitting isFunction check;\n$ans1827 = _plus5.app(anf_arg427,close1826);\nbreak;\ncase 18: var anf_arg429 = $ans1827;\n$step1820 = 19;\n$al1828 = L[294];\n// omitting isFunction check;\n$ans1827 = group1587.app(anf_arg429);\nbreak;\ncase 19: ++R.GAS;\nreturn $ans1827;\ndefault: R.ffi.throwSpinnakerError(L[288],$step1820);\n}\n}\nif($step1820 !== 19) {\n$ans1827.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1828,$temp_lam1821,$step1820,[n1822,b1823,open1824,contents1825,close1826],[anf_arg186],$elidedFrames1830);\n}\nreturn $ans1827;\n};\nvar anf_assign1845 = R.mF($temp_lam1821,\"surround\");\nsurround1846.$var = anf_assign1845;\nR.nothing;\nvar $temp_lam1848 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__307($n1849,$b1850,$open1851,$contents1852,$close1853) {\nvar $step1847 = 0;\nvar $elidedFrames1857 = 0;\nvar $ans1854 = D;\nvar $al1855 = L[307];\nif(R.isAR($n1849)) {\n$step1847 = $n1849.step;\n$al1855 = $n1849.from;\n$ans1854 = $n1849.ans;\n$elidedFrames1857 = $n1849.elidedFrames;\nn1849 = $n1849.args[0];\nb1850 = $n1849.args[1];\nopen1851 = $n1849.args[2];\ncontents1852 = $n1849.args[3];\nclose1853 = $n1849.args[4];\nanf_arg916 = $n1849.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[307],5,$t,false);\n}\nvar n1849 = $n1849;\nvar b1850 = $b1850;\nvar open1851 = $open1851;\nvar contents1852 = $contents1852;\nvar close1853 = $close1853;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1854 = R.mC();\n}\nwhile(!R.isContinuation($ans1854)) {\nswitch($step1847) {\ncase 0: $step1847 = 1;\n$al1855 = L[324];\nvar $ann$check1859 = R._cA(L[324],$type$Number3,n1849);\nif(R.isContinuation($ann$check1859)) {\n$ans1854 = $ann$check1859;\n}\nbreak;\ncase 1: $step1847 = 2;\n$al1855 = L[325];\nvar $ann$check1861 = R._cA(L[325],$type$Number3,b1850);\nif(R.isContinuation($ann$check1861)) {\n$ans1854 = $ann$check1861;\n}\nbreak;\ncase 2: $step1847 = 3;\n$al1855 = L[326];\nvar $ann$check1866 = R._cA(L[326],PPrintDoc354,open1851);\nif(R.isContinuation($ann$check1866)) {\n$ans1854 = $ann$check1866;\n}\nbreak;\ncase 3: $step1847 = 4;\n$al1855 = L[327];\nvar $ann$check1867 = R._cA(L[327],PPrintDoc354,contents1852);\nif(R.isContinuation($ann$check1867)) {\n$ans1854 = $ann$check1867;\n}\nbreak;\ncase 4: $step1847 = 5;\n$al1855 = L[328];\nvar $ann$check1868 = R._cA(L[328],PPrintDoc354,close1853);\nif(R.isContinuation($ann$check1868)) {\n$ans1854 = $ann$check1868;\n}\nbreak;\ncase 5: // caller optimization;\n$ans1854 = is$mt$doc120.$var.app(close1853);\nvar anf_if1858 = $ans1854;\n$step1847 = R.checkPyretTrue(anf_if1858)?6:12;\nbreak;\ncase 6: $step1847 = 7;\n$al1855 = L[313];\n// omitting isFunction check;\n$ans1854 = sbreak1515.$var.app(b1850);\nbreak;\ncase 7: var anf_arg435 = $ans1854;\n$step1847 = 8;\n$al1855 = L[312];\n// omitting isFunction check;\n$ans1854 = _plus5.app(anf_arg435,contents1852);\nbreak;\ncase 8: var anf_arg436 = $ans1854;\n$step1847 = 9;\n$al1855 = L[311];\n// omitting isFunction check;\n$ans1854 = group1587.app(anf_arg436);\nbreak;\ncase 9: var anf_arg910 = $ans1854;\n$step1847 = 10;\n$al1855 = L[310];\n// omitting isFunction check;\n$ans1854 = nest1760.app(n1849,anf_arg910);\nbreak;\ncase 10: var anf_arg437 = $ans1854;\n$step1847 = 11;\n$al1855 = L[309];\n// omitting isFunction check;\n$ans1854 = _plus5.app(open1851,anf_arg437);\nbreak;\ncase 11: var anf_arg439 = $ans1854;\n$step1847 = 22;\n$al1855 = L[308];\n// omitting isFunction check;\n$ans1854 = group1587.app(anf_arg439);\nbreak;\ncase 12: $step1847 = 13;\n$al1855 = L[323];\n// omitting isFunction check;\n$ans1854 = sbreak1515.$var.app(b1850);\nbreak;\ncase 13: var anf_arg1239 = $ans1854;\n$step1847 = 14;\n$al1855 = L[322];\n// omitting isFunction check;\n$ans1854 = _plus5.app(anf_arg1239,contents1852);\nbreak;\ncase 14: var anf_arg912 = $ans1854;\n$step1847 = 15;\n$al1855 = L[321];\n// omitting isFunction check;\n$ans1854 = group1587.app(anf_arg912);\nbreak;\ncase 15: var anf_arg915 = $ans1854;\n$step1847 = 16;\n$al1855 = L[320];\n// omitting isFunction check;\n$ans1854 = nest1760.app(n1849,anf_arg915);\nbreak;\ncase 16: var anf_arg312 = $ans1854;\n$step1847 = 17;\n$al1855 = L[319];\n// omitting isFunction check;\n$ans1854 = _plus5.app(open1851,anf_arg312);\nbreak;\ncase 17: var anf_arg916 = $ans1854;\n$step1847 = 18;\n$al1855 = L[318];\n// omitting isFunction check;\n$ans1854 = sbreak1515.$var.app(b1850);\nbreak;\ncase 18: var anf_arg917 = $ans1854;\n$step1847 = 19;\n$al1855 = L[317];\n// omitting isFunction check;\n$ans1854 = _plus5.app(anf_arg917,close1853);\nbreak;\ncase 19: var anf_arg332 = $ans1854;\n$step1847 = 20;\n$al1855 = L[316];\n// omitting isFunction check;\n$ans1854 = group1587.app(anf_arg332);\nbreak;\ncase 20: var anf_arg931 = $ans1854;\n$step1847 = 21;\n$al1855 = L[315];\n// omitting isFunction check;\n$ans1854 = _plus5.app(anf_arg916,anf_arg931);\nbreak;\ncase 21: var anf_arg1417 = $ans1854;\n$step1847 = 22;\n$al1855 = L[314];\n// omitting isFunction check;\n$ans1854 = group1587.app(anf_arg1417);\nbreak;\ncase 22: ++R.GAS;\nreturn $ans1854;\ndefault: R.ffi.throwSpinnakerError(L[307],$step1847);\n}\n}\nif($step1847 !== 22) {\n$ans1854.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1855,$temp_lam1848,$step1847,[n1849,b1850,open1851,contents1852,close1853],[anf_arg916],$elidedFrames1857);\n}\nreturn $ans1854;\n};\nvar anf_assign1870 = R.mF($temp_lam1848,\"soft-surround\");\nsoft$surround1871.$var = anf_assign1870;\nR.nothing;\nvar $temp_lam1874 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__329($sep1875,$docs1876) {\nvar $step1873 = 0;\nvar $elidedFrames1880 = 0;\nvar $ans1877 = D;\nvar $al1878 = L[329];\nif(R.isAR($sep1875)) {\n$step1873 = $sep1875.step;\n$al1878 = $sep1875.from;\n$ans1877 = $sep1875.ans;\n$elidedFrames1880 = $sep1875.elidedFrames;\nsep1875 = $sep1875.args[0];\ndocs1876 = $sep1875.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[329],2,$t,false);\n}\nvar sep1875 = $sep1875;\nvar docs1876 = $docs1876;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1877 = R.mC();\n}\nwhile(!R.isContinuation($ans1877)) {\nswitch($step1873) {\ncase 0: $step1873 = 1;\n$al1878 = L[333];\nvar $ann$check1892 = R._cA(L[333],PPrintDoc354,sep1875);\nif(R.isContinuation($ann$check1892)) {\n$ans1877 = $ann$check1892;\n}\nbreak;\ncase 1: $step1873 = 2;\n$al1878 = L[334];\nvar $ann$check1893 = R._cA(L[334],R.gDA(L[334],\"lists\",lists65,\"List\"),docs1876);\nif(R.isContinuation($ann$check1893)) {\n$ans1877 = $ann$check1893;\n}\nbreak;\ncase 2: var $temp_lam1882 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__330($acc2232,$d1883) {\nvar $step1881 = 0;\nvar $elidedFrames1887 = 0;\nvar $ans1884 = D;\nvar $al1885 = L[330];\nif(R.isAR($acc2232)) {\n$step1881 = $acc2232.step;\n$al1885 = $acc2232.from;\n$ans1884 = $acc2232.ans;\n$elidedFrames1887 = $acc2232.elidedFrames;\nacc2232 = $acc2232.args[0];\nd1883 = $acc2232.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[330],2,$t,false);\n}\nvar acc2232 = $acc2232;\nvar d1883 = $d1883;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1884 = R.mC();\n}\nwhile(!R.isContinuation($ans1884)) {\nswitch($step1881) {\ncase 0: // caller optimization;\n$ans1884 = is$mt$doc120.$var.app(d1883);\nvar anf_if1889 = $ans1884;\n$step1881 = R.checkPyretTrue(anf_if1889)?1:2;\nbreak;\ncase 1: $step1881 = 6;\n$ans1884 = acc2232;\nbreak;\ncase 2: // caller optimization;\n$ans1884 = is$mt$doc120.$var.app(acc2232);\nvar anf_if1888 = $ans1884;\n$step1881 = R.checkPyretTrue(anf_if1888)?3:4;\nbreak;\ncase 3: $step1881 = 6;\n$ans1884 = d1883;\nbreak;\ncase 4: $step1881 = 5;\n$al1885 = L[332];\n// omitting isFunction check;\n$ans1884 = _plus5.app(acc2232,sep1875);\nbreak;\ncase 5: var anf_arg992 = $ans1884;\n$step1881 = 6;\n$al1885 = L[331];\n// omitting isFunction check;\n$ans1884 = _plus5.app(anf_arg992,d1883);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1884;\ndefault: R.ffi.throwSpinnakerError(L[330],$step1881);\n}\n}\nif($step1881 !== 6) {\n$ans1884.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1885,$temp_lam1882,$step1881,[acc2232,d1883],[],$elidedFrames1887);\n}\nreturn $ans1884;\n};\nvar anf_arg989 = R.mF($temp_lam1882,\"for-body<line 276, column 2>\");\n$step1873 = 3;\n$ans1877 = R.maybeMethodCall3(lists61,\"fold\",L[330],anf_arg989,mt$doc1625,docs1876);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1877;\ndefault: R.ffi.throwSpinnakerError(L[329],$step1873);\n}\n}\nif($step1873 !== 3) {\n$ans1877.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1878,$temp_lam1874,$step1873,[sep1875,docs1876],[],$elidedFrames1880);\n}\nreturn $ans1877;\n};\nvar anf_assign546 = R.mF($temp_lam1874,\"separate\");\nseparate1895.$var = anf_assign546;\nR.nothing;\nvar $temp_lam1897 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__335($n1898,$b1899,$void1900,$open1901,$sep1902,$close1903,$docs1904) {\nvar $step1896 = 0;\nvar $elidedFrames1908 = 0;\nvar $ans1905 = D;\nvar $al1906 = L[335];\nif(R.isAR($n1898)) {\n$step1896 = $n1898.step;\n$al1906 = $n1898.from;\n$ans1905 = $n1898.ans;\n$elidedFrames1908 = $n1898.elidedFrames;\nn1898 = $n1898.args[0];\nb1899 = $n1898.args[1];\nvoid1900 = $n1898.args[2];\nopen1901 = $n1898.args[3];\nsep1902 = $n1898.args[4];\nclose1903 = $n1898.args[5];\ndocs1904 = $n1898.args[6];\n} else {\nvar $l = arguments.length;\nif($l !== 7) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[335],7,$t,false);\n}\nvar n1898 = $n1898;\nvar b1899 = $b1899;\nvar void1900 = $void1900;\nvar open1901 = $open1901;\nvar sep1902 = $sep1902;\nvar close1903 = $close1903;\nvar docs1904 = $docs1904;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1905 = R.mC();\n}\nwhile(!R.isContinuation($ans1905)) {\nswitch($step1896) {\ncase 0: $step1896 = 1;\n$al1906 = L[339];\nvar $ann$check1911 = R._cA(L[339],$type$Number3,n1898);\nif(R.isContinuation($ann$check1911)) {\n$ans1905 = $ann$check1911;\n}\nbreak;\ncase 1: $step1896 = 2;\n$al1906 = L[340];\nvar $ann$check1912 = R._cA(L[340],$type$Number3,b1899);\nif(R.isContinuation($ann$check1912)) {\n$ans1905 = $ann$check1912;\n}\nbreak;\ncase 2: $step1896 = 3;\n$al1906 = L[341];\nvar $ann$check1914 = R._cA(L[341],PPrintDoc354,void1900);\nif(R.isContinuation($ann$check1914)) {\n$ans1905 = $ann$check1914;\n}\nbreak;\ncase 3: $step1896 = 4;\n$al1906 = L[342];\nvar $ann$check1915 = R._cA(L[342],PPrintDoc354,open1901);\nif(R.isContinuation($ann$check1915)) {\n$ans1905 = $ann$check1915;\n}\nbreak;\ncase 4: $step1896 = 5;\n$al1906 = L[343];\nvar $ann$check1917 = R._cA(L[343],PPrintDoc354,sep1902);\nif(R.isContinuation($ann$check1917)) {\n$ans1905 = $ann$check1917;\n}\nbreak;\ncase 5: $step1896 = 6;\n$al1906 = L[344];\nvar $ann$check1918 = R._cA(L[344],PPrintDoc354,close1903);\nif(R.isContinuation($ann$check1918)) {\n$ans1905 = $ann$check1918;\n}\nbreak;\ncase 6: $step1896 = 7;\n$al1906 = L[345];\nvar $ann$check1919 = R._cA(L[345],R.gDA(L[345],\"lists\",lists65,\"List\"),docs1904);\nif(R.isContinuation($ann$check1919)) {\n$ans1905 = $ann$check1919;\n}\nbreak;\ncase 7: $step1896 = 8;\n$ans1905 = R.maybeMethodCall1(lists61,\"is-empty\",L[336],docs1904);\nbreak;\ncase 8: var anf_if1909 = $ans1905;\n$step1896 = R.checkPyretTrue(anf_if1909)?9:10;\nbreak;\ncase 9: $step1896 = 12;\n$ans1905 = void1900;\nbreak;\ncase 10: $step1896 = 11;\n$al1906 = L[338];\n// omitting isFunction check;\n$ans1905 = separate1895.$var.app(sep1902,docs1904);\nbreak;\ncase 11: var anf_arg1012 = $ans1905;\n$step1896 = 12;\n$al1906 = L[337];\n// omitting isFunction check;\n$ans1905 = surround1846.$var.app(n1898,b1899,open1901,anf_arg1012,close1903);\nbreak;\ncase 12: ++R.GAS;\nreturn $ans1905;\ndefault: R.ffi.throwSpinnakerError(L[335],$step1896);\n}\n}\nif($step1896 !== 12) {\n$ans1905.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1906,$temp_lam1897,$step1896,[n1898,b1899,void1900,open1901,sep1902,close1903,docs1904],[],$elidedFrames1908);\n}\nreturn $ans1905;\n};\nvar anf_assign569 = R.mF($temp_lam1897,\"surround-separate\");\nsurround$separate1921.$var = anf_assign569;\nR.nothing;\nvar $temp_lam1923 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__346($label1924,$open1925,$sep1926,$contents1927,$close1928) {\nvar $step1922 = 0;\nvar $elidedFrames1932 = 0;\nvar $ans1929 = D;\nvar $al1930 = L[346];\nif(R.isAR($label1924)) {\n$step1922 = $label1924.step;\n$al1930 = $label1924.from;\n$ans1929 = $label1924.ans;\n$elidedFrames1932 = $label1924.elidedFrames;\nlabel1924 = $label1924.args[0];\nopen1925 = $label1924.args[1];\nsep1926 = $label1924.args[2];\ncontents1927 = $label1924.args[3];\nclose1928 = $label1924.args[4];\nanf_arg1562 = $label1924.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[346],5,$t,false);\n}\nvar label1924 = $label1924;\nvar open1925 = $open1925;\nvar sep1926 = $sep1926;\nvar contents1927 = $contents1927;\nvar close1928 = $close1928;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1929 = R.mC();\n}\nwhile(!R.isContinuation($ans1929)) {\nswitch($step1922) {\ncase 0: $step1922 = 1;\n$al1930 = L[356];\n// omitting isFunction check;\n$ans1929 = separate1895.$var.app(sep1926,contents1927);\nbreak;\ncase 1: var anf_arg1436 = $ans1929;\n$step1922 = 2;\n$al1930 = L[355];\n// omitting isFunction check;\n$ans1929 = align1761.app(anf_arg1436);\nbreak;\ncase 2: var anf_arg1027 = $ans1929;\n$step1922 = 3;\n$al1930 = L[354];\n// omitting isFunction check;\n$ans1929 = _plus5.app(open1925,anf_arg1027);\nbreak;\ncase 3: var anf_arg1562 = $ans1929;\n$step1922 = 4;\n$al1930 = L[353];\n// omitting isFunction check;\n$ans1929 = sbreak1515.$var.app((0));\nbreak;\ncase 4: var anf_arg581 = $ans1929;\n$step1922 = 5;\n$al1930 = L[352];\n// omitting isFunction check;\n$ans1929 = _plus5.app(anf_arg581,close1928);\nbreak;\ncase 5: var anf_arg583 = $ans1929;\n$step1922 = 6;\n$al1930 = L[351];\n// omitting isFunction check;\n$ans1929 = group1587.app(anf_arg583);\nbreak;\ncase 6: var anf_arg600 = $ans1929;\n$step1922 = 7;\n$al1930 = L[350];\n// omitting isFunction check;\n$ans1929 = _plus5.app(anf_arg1562,anf_arg600);\nbreak;\ncase 7: var anf_arg1028 = $ans1929;\n$step1922 = 8;\n$al1930 = L[349];\n// omitting isFunction check;\n$ans1929 = align1761.app(anf_arg1028);\nbreak;\ncase 8: var anf_arg1029 = $ans1929;\n$step1922 = 9;\n$al1930 = L[348];\n// omitting isFunction check;\n$ans1929 = _plus5.app(label1924,anf_arg1029);\nbreak;\ncase 9: var anf_arg1031 = $ans1929;\n$step1922 = 10;\n$al1930 = L[347];\n// omitting isFunction check;\n$ans1929 = group1587.app(anf_arg1031);\nbreak;\ncase 10: ++R.GAS;\nreturn $ans1929;\ndefault: R.ffi.throwSpinnakerError(L[346],$step1922);\n}\n}\nif($step1922 !== 10) {\n$ans1929.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1930,$temp_lam1923,$step1922,[label1924,open1925,sep1926,contents1927,close1928],[anf_arg1562],$elidedFrames1932);\n}\nreturn $ans1929;\n};\nvar anf_assign1934 = R.mF($temp_lam1923,\"label-align-surround\");\nlabel$align$surround1935.$var = anf_assign1934;\nR.nothing;\n$step70 = 17;\n$ans102 = R.maybeMethodCall2(builtins1,\"trace-value\",L[357],L[357],nothing2);\nbreak;\ncase 17: var answer1944 = $ans102;\nvar provides1943 = R.mO({\"mt-doc\":mt$doc1625,\n\"is-mt-doc\":is$mt$doc120.$var,\n\"str\":str1495,\n\"number\":number1499.$var,\n\"hardline\":hardline1509,\n\"blank\":blank1507,\n\"sbreak\":sbreak1515.$var,\n\"concat\":concat1936,\n\"nest\":nest1760,\n\"if-flat\":if$flat1508,\n\"group\":group1587,\n\"flow\":flow1647.$var,\n\"flow-map\":flow$map1628.$var,\n\"vert\":vert1666.$var,\n\"parens\":parens1680.$var,\n\"braces\":braces1692.$var,\n\"brackets\":brackets1703.$var,\n\"dquote\":dquote1737.$var,\n\"squote\":squote1750.$var,\n\"align\":align1761,\n\"hang\":hang1764.$var,\n\"prefix\":prefix1777.$var,\n\"infix\":infix1801.$var,\n\"infix-break\":infix$break1819.$var,\n\"separate\":separate1895.$var,\n\"surround\":surround1846.$var,\n\"soft-surround\":soft$surround1871.$var,\n\"surround-separate\":surround$separate1921.$var,\n\"label-align-surround\":label$align$surround1935.$var,\n\"lparen\":lparen1675,\n\"rparen\":rparen1676,\n\"lbrace\":lbrace1688,\n\"rbrace\":rbrace1689,\n\"lbrack\":lbrack1700,\n\"rbrack\":rbrack1701,\n\"langle\":langle1937,\n\"rangle\":rangle1938,\n\"comma\":comma1516,\n\"commabreak\":commabreak1939,\n\"semi\":semi1566,\n\"semibreak\":semibreak1940});\n$step70 = 18;\n$ans102 = R.maybeMethodCall0(builtins1,\"current-checker\",L[107]);\nbreak;\ncase 18: var anf_method_obj1941 = $ans102;\n$step70 = 19;\n$ans102 = R.maybeMethodCall0(anf_method_obj1941,\"results\",L[107]);\nbreak;\ncase 19: var checks1945 = $ans102;\n$step70 = 20;\n$ans102 = R.mO({\"answer\":answer1944,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-values\":{\"braces\":braces1692.$var,\n\"rbrace\":rbrace1689,\n\"soft-surround\":soft$surround1871.$var,\n\"rangle\":rangle1938,\n\"is-hardline\":is$hardline475.$var,\n\"is-align\":is$align494.$var,\n\"infix-break\":infix$break1819.$var,\n\"separate\":separate1895.$var,\n\"str-squote\":str$squote1748,\n\"align\":align1761,\n\"is-if-flat\":is$if$flat491.$var,\n\"rbrack\":rbrack1701,\n\"lbrace\":lbrace1688,\n\"langle\":langle1937,\n\"parens\":parens1680.$var,\n\"squote\":squote1750.$var,\n\"if-flat\":if$flat1508,\n\"number\":number1499.$var,\n\"is-empty\":is$empty1118,\n\"commabreak\":commabreak1939,\n\"brackets\":brackets1703.$var,\n\"sbreak\":sbreak1515.$var,\n\"empty\":empty1117,\n\"lbrack\":lbrack1700,\n\"flow\":flow1647.$var,\n\"is-str\":is$str471.$var,\n\"semi\":semi1566,\n\"infix\":infix1801.$var,\n\"vert\":vert1666.$var,\n\"str\":str1495,\n\"semibreak\":semibreak1940,\n\"is-blank\":is$blank479.$var,\n\"mt-doc\":mt$doc1625,\n\"hang\":hang1764.$var,\n\"prefix\":prefix1777.$var,\n\"surround-separate\":surround$separate1921.$var,\n\"item\":item512.$var,\n\"blank\":blank1507,\n\"concat\":concat1936,\n\"str-dquote\":str$dquote1711,\n\"is-mt-doc\":is$mt$doc120.$var,\n\"comma\":comma1516,\n\"lists\":lists61,\n\"align-spaces\":align$spaces497.$var,\n\"is-item\":is$item511.$var,\n\"is-Item\":is$Item510.$var,\n\"is-concat\":is$concat484.$var,\n\"format\":format367.$var,\n\"dquote\":dquote1737.$var,\n\"nest\":nest1760,\n\"is-PPrintDoc\":is$PPrintDoc466.$var,\n\"is-align-spaces\":is$align$spaces496.$var,\n\"rparen\":rparen1676,\n\"link\":link1116,\n\"is-nest\":is$nest487.$var,\n\"is-group\":is$group498.$var,\n\"collect-concats\":collect$concats527.$var,\n\"flow-map\":flow$map1628.$var,\n\"VS\":VS62,\n\"lparen\":lparen1675,\n\"list\":list1321,\n\"surround\":surround1846.$var,\n\"group\":group1587,\n\"label-align-surround\":label$align$surround1935.$var,\n\"hardline\":hardline1509},\n\"defined-types\":{\"Item\":Item1942,\n\"lists\":lists65,\n\"PPrintDoc\":PPrintDoc354,\n\"VS\":VS66,\n\"List\":List1317},\n\"provide-plus-types\":R.mO({\"values\":provides1943,\n\"types\":{\"List\":List1317,\n\"PPrintDoc\":PPrintDoc354,\n\"Item\":Item1942}}),\n\"checks\":checks1945});\nbreak;\ncase 20: ++R.GAS;\nreturn $ans102;\ndefault: R.ffi.throwSpinnakerError(L[375],$step70);\n}\n}\nif($step70 !== 20) {\n$ans102.stack[R.EXN_STACKHEIGHT++] = R.mAR($al103,$toplevel71,$step70,[],[if$flat1508,is$if$flat491,is$align$spaces496,hang1764,str1495,dquote1737,is$PPrintDoc466,Item1942,is$empty1118,prefix1777,vert1666,parens1680,provides1943,is$group498,semi1566,concat1936,semibreak1940,is$concat484,squote1750,comma1516,is$align494,collect$concats527,lbrack1700,flow1647,number1499,is$Item510,str$dquote1711,blank1507,infix1801,sbreak1515,align$spaces497,is$item511,empty1117,label$align$surround1935,lbrace1688,braces1692,is$mt$doc120,brackets1703,is$nest487,rbrack1701,align1761,separate1895,surround$separate1921,is$str471,list1321,commabreak1939,lparen1675,is$hardline475,flow$map1628,langle1937,rbrace1689,PPrintDoc354,item512,infix$break1819,nest1760,group1587,format367,answer1944,List1317,link1116,surround1846,rparen1676,rangle1938,soft$surround1871,mt$doc1625,str$squote1748,is$blank479,hardline1509],$elidedFrames105);\n}\nreturn $ans102;\n};\nreturn R.safeCall($toplevel71,function module_load(moduleVal) {\nR.modules[\"$builtin://pprint67\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"values":{"hardline":"tany",
"label-align-surround":"tany",
"group":"tany",
"surround":"tany",
"lparen":"tany",
"flow-map":"tany",
"rparen":"tany",
"nest":"tany",
"dquote":"tany",
"comma":"tany",
"is-mt-doc":{"bind":"fun",
"flatness":0,
"name":"is-mt-doc",
"typ":"tany"},
"concat":"tany",
"blank":"tany",
"surround-separate":"tany",
"prefix":"tany",
"hang":"tany",
"mt-doc":"tany",
"semibreak":"tany",
"str":"tany",
"vert":"tany",
"infix":"tany",
"semi":"tany",
"flow":"tany",
"lbrack":"tany",
"sbreak":"tany",
"brackets":"tany",
"commabreak":"tany",
"number":"tany",
"if-flat":"tany",
"squote":"tany",
"parens":"tany",
"langle":"tany",
"lbrace":"tany",
"rbrack":"tany",
"align":"tany",
"separate":"tany",
"infix-break":"tany",
"rangle":"tany",
"soft-surround":"tany",
"rbrace":"tany",
"braces":"tany"},
"datatypes":{"atom#Item#2":["data","Item",[],[["item",
[["indent",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["is-flat",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}],["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}]]]],{}],
"atom#PPrintDoc#1":["data","PPrintDoc",[],[["mt-doc",
[["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]]],["str",
[["s",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]]],["hardline",
[["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]]],["blank",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]]],["concat",
[["fst",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["snd",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]]],["nest",
[["indent",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]]],["if-flat",
[["flat",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["vert",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]]],["align",
[["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]]],["align-spaces",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]]],["group",
[["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]]]],{"pretty":["arrow",
["tany",
"tany"],
"tany"],
"_output":["arrow",
["tany"],
"tany"],
"_plus":["arrow",
["tany",
"tany"],
"tany"]}]},
"aliases":{"List":"tany",
"PPrintDoc":"tany",
"Item":"tany"}},
"requires":[{"import-type":"builtin",
"name":"base"},
{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"lists"},
{"import-type":"builtin",
"name":"valueskeleton"}]})