({"theMap":"{\"version\":3,\"sources\":[\"file:///home/travis/build/brownplt/pyret-npm/pyret-lang/src/arr/compiler/desugar-check.arr\"],\"names\":[\"file:///home/travis/build/brownplt/pyret-npm/pyret-lang/src/arr/compiler/desugar-check.arr\",\",11,0,158,13,3,266\",\",12,2,176,12,88,262\",\",17,10,300,17,15,305\",\",17,17,307,17,31,321\",\",17,17,307,17,42,332\",\",17,17,307,17,57,347\",\",17,2,292,17,58,348\",\",21,10,382,21,15,387\",\",21,22,394,21,26,398\",\",21,32,404,21,36,408\",\",21,41,413,21,50,422\",\",21,2,374,21,78,450\",\",24,16,472,24,40,496\",\",26,39,555,26,55,571\",\",26,33,549,26,37,553\",\",26,2,518,26,72,588\",\",29,22,616,29,43,637\",\",31,11,712,31,57,758\",\",33,28,816,33,41,829\",\",33,17,805,33,53,841\",\",34,15,858,34,28,871\",\",34,38,881,34,49,892\",\",34,30,873,34,50,893\",\",34,52,895,34,65,908\",\",34,9,852,34,13,856\",\",33,6,794,34,67,910\",\",37,28,1003,37,41,1016\",\",37,17,992,37,53,1028\",\",38,27,1057,38,40,1070\",\",38,50,1080,38,61,1091\",\",38,42,1072,38,62,1092\",\",38,64,1094,38,77,1107\",\",38,9,1039,38,13,1043\",\",37,6,981,38,79,1109\",\",43,39,1253,43,59,1273\",\",44,39,1313,44,90,1364\",\",47,8,1415,47,36,1443\",\",50,39,1556,50,63,1580\",\",51,39,1620,51,94,1675\",\",54,47,1772,54,72,1797\",\",54,35,1760,54,73,1798\",\",54,25,1750,54,74,1799\",\",54,8,1733,54,98,1823\",\",56,47,1908,56,72,1933\",\",56,35,1896,56,73,1934\",\",56,25,1886,56,74,1935\",\",56,8,1869,56,102,1963\",\",58,8,2009,58,43,2044\",\",60,8,2090,60,47,2129\",\",62,30,2197,62,43,2210\",\",62,19,2186,62,64,2231\",\",63,17,2250,63,30,2263\",\",63,32,2265,63,43,2276\",\",63,45,2278,63,58,2291\",\",63,11,2244,63,15,2248\",\",62,8,2175,63,60,2293\",\",65,30,2361,65,43,2374\",\",65,19,2350,65,64,2395\",\",66,17,2414,66,30,2427\",\",66,32,2429,66,45,2442\",\",66,11,2408,66,15,2412\",\",65,8,2339,66,47,2444\",\",68,30,2512,68,43,2525\",\",68,19,2501,68,70,2552\",\",69,17,2571,69,30,2584\",\",69,32,2586,69,43,2597\",\",69,45,2599,69,58,2612\",\",69,11,2565,69,15,2569\",\",68,8,2490,69,60,2614\",\",71,30,2682,71,43,2695\",\",71,19,2671,71,70,2722\",\",72,17,2741,72,30,2754\",\",72,32,2756,72,43,2767\",\",72,45,2769,72,58,2782\",\",72,11,2735,72,15,2739\",\",71,8,2660,72,60,2784\",\",74,30,2852,74,43,2865\",\",74,19,2841,74,69,2891\",\",75,17,2910,75,30,2923\",\",75,32,2925,75,43,2936\",\",75,45,2938,75,58,2951\",\",75,11,2904,75,15,2908\",\",74,8,2830,75,60,2953\",\",76,47,3001,76,57,3011\",\",76,22,2976,76,57,3011\",\",76,22,2976,76,86,3040\",\",76,89,3043,76,98,3052\",\",76,22,2976,76,98,3052\",\",76,16,2970,76,99,3053\",\",81,4,3170,81,20,3186\",\",97,52,3720,97,80,3748\",\",97,32,3700,97,87,3755\",\",97,89,3757,97,104,3772\",\",97,27,3695,97,105,3773\",\",98,24,3798,98,39,3813\",\",102,52,3970,102,80,3998\",\",102,32,3950,102,87,4005\",\",102,89,4007,102,104,4022\",\",102,27,3945,102,105,4023\",\",103,24,4048,103,39,4063\",\",108,38,4246,108,60,4268\",\",110,20,4368,110,48,4396\",\",109,16,4285,110,48,4396\",\",113,43,4485,113,74,4516\",\",113,17,4459,113,90,4532\",\",113,92,4534,113,107,4549\",\",113,12,4454,113,108,4550\",\",114,20,4571,114,35,4586\",\",118,2,4615,118,18,4631\",\",125,34,4808,125,38,4812\",\",125,20,4794,125,48,4822\",\",127,39,4890,127,56,4907\",\",127,12,4863,127,57,4908\",\",128,12,4922,128,48,4958\",\",129,48,5008,129,75,5035\",\",129,12,4972,129,76,5036\",\",130,81,5119,130,99,5137\",\",130,75,5113,130,79,5117\",\",130,43,5081,130,116,5154\",\",130,12,5050,130,117,5155\",\",126,21,4844,126,25,4848\",\",126,8,4831,131,12,5168\",\",134,13,5196,134,39,5222\",\",136,28,5274,136,41,5287\",\",136,17,5263,136,56,5302\",\",137,21,5333,137,29,5341\",\",137,10,5322,137,30,5342\",\",139,27,5431,139,47,5451\",\",139,59,5463,139,78,5482\",\",139,49,5453,139,79,5483\",\",139,10,5414,139,90,5494\",\",136,59,5305,136,63,5309\",\",136,6,5252,140,10,5505\",\",135,16,5239,135,20,5243\",\",135,2,5225,141,6,5512\",\",145,18,5565,145,22,5569\",\",145,70,5617,145,79,5626\",\",145,46,5593,145,80,5627\",\",145,27,5574,145,85,5632\",\",145,87,5634,145,96,5643\",\",145,2,5549,145,125,5672\",\",148,20,5698,148,41,5719\",\",151,17,5835,151,33,5851\",\",152,9,5861,152,28,5880\",\",152,45,5897,152,56,5908\",\",152,33,5885,152,57,5909\",\",152,63,5915,152,74,5926\",\",152,63,5915,152,76,5928\",\",152,63,5915,152,99,5951\",\",155,8,5986,155,27,6005\",\",150,16,5772,157,7,6023\",\",158,4,6028,158,27,6051\",\",161,4,6138,161,70,6204\",\",164,4,6296,164,75,6367\",\",167,4,6454,167,70,6520\",\",173,14,6842,173,46,6874\",\",173,4,6832,173,47,6875\",\",177,16,6901,177,37,6922\",\",179,24,6983,179,41,7000\",\",180,25,7026,180,38,7039\",\",180,15,7016,180,39,7040\",\",181,16,7057,181,56,7097\",\",182,7,7105,182,34,7132\",\",182,36,7134,182,58,7156\",\",183,12,7169,183,30,7187\",\",183,32,7189,183,52,7209\",\",185,30,7250,185,64,7284\",\",185,18,7238,185,65,7285\",\",186,18,7304,186,33,7319\",\",189,24,7374,189,41,7391\",\",189,24,7374,189,45,7395\",\",189,10,7360,189,46,7396\",\",191,54,7473,191,63,7482\",\",191,25,7444,191,64,7483\",\",191,14,7433,191,83,7502\",\",193,14,7543,193,34,7563\",\",190,13,7412,190,17,7416\",\",189,10,7360,194,13,7577\",\",187,6,7326,195,9,7587\",\",209,2,7942,209,27,7967\",\",213,2,8004,213,31,8033\"],\"mappingsoBAUDC,qCAVCD;AAAAA;AAAAA;AAAAA;AAAAA,oBAWCE,yCAXDF;AAAAA;AAAAA;AAAAA;AAAAA,oBAWCE,sCAXDF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,kBAgBSG,kBAhBTH;AAAAA;AAAAA,UAgBgBI,0CAhBhBJ;AAAAA;AAAAA;AAAAA;AAAAA,UAgBgBK,wDAhBhBL;AAAAA;AAAAA;AAAAA;AAAAA,UAgBgBM,6DAhBhBN;AAAAA;AAAAA;AAAAA;AAAAA,UAgBCO,6DAhBDP;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAoBSQ,mBApBTR;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAoBqBS,uCApBrBT;AAAAA;AAoBqBS,0BApBrBT;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAoB+BU,uCApB/BV;AAAAA;AAoB+BU,0BApB/BV;AAAAA;AAAAA;AAAAA;AAAAA,iBAoBwCW,sBApBxCX;AAAAA;AAAAA,UAoBCY,sHApBDZ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UAuBea,uDAvBfb;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UAyBsCc,kDAzBtCd;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAyBgCe,uCAzBhCf;AAAAA;AAyBgCe,oCAzBhCf;AAAAA;AAAAA;AAAAA;AAAAA,UAyBCgB,0FAzBDhB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,qBA4BqBiB,kCA5BrBjB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UA8BUkB,sFA9BVlB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UAgC2BmB,6CAhC3BnB;AAAAA;AAAAA;AAAAA;AAAAA,UAgCgBoB,kEAhChBpB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAiCcqB,sCAjCdrB;AAAAA;AAAAA;AAAAA;AAAAA,iBAiCqCsB,yBAjCrCtB;AAAAA;AAAAA;AAAAA;AAiC6BuB,yCAjC7BvB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAiCmDwB,sCAjCnDxB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAiCQyB,uCAjCRzB;AAAAA;AAiCQyB,0DAjCRzB;AAAAA;AAAAA;AAAAA;AAAAA,UAgCK0B,gEAhCL1B;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UAoC2B2B,6CApC3B3B;AAAAA;AAAAA;AAAAA;AAAAA,UAoCgB4B,mEApChB5B;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAqC0B6B,sCArC1B7B;AAAAA;AAAAA;AAAAA;AAAAA,iBAqCiD8B,yBArCjD9B;AAAAA;AAAAA;AAAAA;AAqCyC+B,yCArCzC/B;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAqC+DgC,sCArC/DhC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAqCQiC,uCArCRjC;AAAAA;AAqCQiC,yEArCRjC;AAAAA;AAAAA;AAAAA;AAAAA,UAoCKkC,gEApCLlC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA0CsCmC,6CA1CtCnC;AAAAA;AA0CsCmC,4CA1CtCnC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA2CsCoC,qDA3CtCpC;AAAAA;AA2CsCoC,6EA3CtCpC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA8COqC,6CA9CPrC;AAAAA;AA8COqC,oDA9CPrC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAiDsCsC,6CAjDtCtC;AAAAA;AAiDsCsC,gDAjDtCtC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAkDsCuC,qDAlDtCvC;AAAAA;AAkDsCuC,iFAlDtCvC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UAqD8CwC,yDArD9CxC;AAAAA;AAAAA;AAAAA;AAAAA,UAqDkCyC,sDArDlCzC;AAAAA;AAAAA;AAAAA;AAAAA,UAqDwB0C,oDArDxB1C;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAqDO2C,qDArDP3C;AAAAA;AAqDO2C,0EArDP3C;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UAuD8C4C,yDAvD9C5C;AAAAA;AAAAA;AAAAA;AAAAA,UAuDkC6C,sDAvDlC7C;AAAAA;AAAAA;AAAAA;AAAAA,UAuDwB8C,oDAvDxB9C;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAuDO+C,qDAvDP/C;AAAAA;AAuDO+C,8EAvDP/C;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAyDOgD,6CAzDPhD;AAAAA;AAyDOgD,2DAzDPhD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA2DOiD,6CA3DPjD;AAAAA;AA2DOiD,+DA3DPjD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UA6D6BkD,6CA7D7BlD;AAAAA;AAAAA;AAAAA;AAAAA,UA6DkBmD,0EA7DlBnD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA8DgBoD,sCA9DhBpD;AAAAA;AAAAA;AAAAA;AAAAA,iBA8D+BqD,yBA9D/BrD;AAAAA;AAAAA;AAAAA;AA8D4CsD,sCA9D5CtD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA8DUuD,uCA9DVvD;AAAAA;AA8DUuD,0DA9DVvD;AAAAA;AAAAA;AAAAA;AAAAA,UA6DOwD,gEA7DPxD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WAgE6ByD,6CAhE7BzD;AAAAA;AAAAA;AAAAA;AAAAA,WAgEkB0D,0EAhElB1D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAiEgB2D,uCAjEhB3D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAiE+B4D,uCAjE/B5D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAiEU6D,yCAjEV7D;AAAAA;AAiEU6D,iDAjEV7D;AAAAA;AAAAA;AAAAA;AAAAA,WAgEO8D,gEAhEP9D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WAmE6B+D,6CAnE7B/D;AAAAA;AAAAA;AAAAA;AAAAA,WAmEkBgE,gFAnElBhE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAoEgBiE,uCApEhBjE;AAAAA;AAAAA;AAAAA;AAAAA,iBAoE+BkE,0BApE/BlE;AAAAA;AAAAA;AAAAA;AAoE4CmE,uCApE5CnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAoEUoE,wCApEVpE;AAAAA;AAoEUoE,2DApEVpE;AAAAA;AAAAA;AAAAA;AAAAA,WAmEOqE,iEAnEPrE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WAsE6BsE,8CAtE7BtE;AAAAA;AAAAA;AAAAA;AAAAA,WAsEkBuE,iFAtElBvE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAuEgBwE,uCAvEhBxE;AAAAA;AAAAA;AAAAA;AAAAA,iBAuE+ByE,0BAvE/BzE;AAAAA;AAAAA;AAAAA;AAuE4C0E,uCAvE5C1E;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAuEU2E,wCAvEV3E;AAAAA;AAuEU2E,2DAvEV3E;AAAAA;AAAAA;AAAAA;AAAAA,WAsEO4E,iEAtEP5E;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WAyE6B6E,8CAzE7B7E;AAAAA;AAAAA;AAAAA;AAAAA,WAyEkB8E,gFAzElB9E;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA0EgB+E,uCA1EhB/E;AAAAA;AAAAA;AAAAA;AAAAA,iBA0E+BgF,0BA1E/BhF;AAAAA;AAAAA;AAAAA;AA0E4CiF,uCA1E5CjF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA0EUkF,yCA1EVlF;AAAAA;AA0EUkF,4DA1EVlF;AAAAA;AAAAA;AAAAA;AAAAA,WAyEOmF,iEAzEPnF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UA2E8CoF,wCA3E9CpF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA2EqBqF,yDA3ErBrF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA2EqBsF,6DA3ErBtF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA2EwFuF,oCA3ExFvF;AAAAA;AA2EwFuF,2BA3ExFvF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA2EqBwF,2CA3ErBxF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA2EeyF,mCA3EfzF;AAAAA;AA2EeyF,gCA3EfzF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WAgFG0F,mDAhFH1F;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;A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\",\"file\":\"file:///home/travis/build/brownplt/pyret-npm/pyret-lang/src/arr/compiler/desugar-check.arr\"}",
"theModule":"function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__267(R,NAMESPACE,M,$arrays33,$A33,$$base23,$error16,$$global24,$lists21,$L30,$option35,$sets25,$SL51,$U68,$G59) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"file:///home/travis/build/brownplt/pyret-npm/pyret-lang/src/arr/compiler/desugar-check.arr\";\nvar D = R.undefined;\nvar L = [[M,12,2,176,12,88,262],\n[M,12,20,194,12,29,203],\n[M,12,55,229,12,61,235],\n[M,12,39,213,12,45,219],\n[M,12,80,254,12,87,261],\n[M,11,0,158,13,3,266],\n[M,16,0,269,18,3,352],\n[M,17,10,300,17,15,305],\n[M,17,17,307,17,31,321],\n[M,17,17,307,17,42,332],\n[M,17,17,307,17,57,347],\n[M,17,2,292,17,58,348],\n[M,20,0,354,22,3,454],\n[M,21,10,382,21,15,387],\n[M,21,21,393,21,29,401],\n[M,21,22,394,21,26,398],\n[M,21,31,403,21,39,411],\n[M,21,32,404,21,36,408],\n[M,21,41,413,21,50,422],\n[M,21,2,374,21,78,450],\n[M,24,16,472,24,40,496],\n[M,25,0,497,27,3,592],\n[M,26,32,548,26,56,572],\n[M,26,33,549,26,37,553],\n[M,26,39,555,26,55,571],\n[M,26,2,518,26,72,588],\n[M,29,22,616,29,43,637],\n[M,30,2,642,78,5,3067],\n[M,31,11,712,31,57,758],\n[M,32,4,763,35,7,918],\n[M,33,28,816,33,41,829],\n[M,33,17,805,33,53,841],\n[M,34,8,851,34,66,909],\n[M,34,9,852,34,13,856],\n[M,34,38,881,34,49,892],\n[M,33,6,794,34,67,910],\n[M,34,52,895,34,65,908],\n[M,34,30,873,34,50,893],\n[M,34,15,858,34,28,871],\n[M,36,4,923,39,7,1117],\n[M,37,28,1003,37,41,1016],\n[M,37,17,992,37,53,1028],\n[M,38,8,1038,38,78,1108],\n[M,38,9,1039,38,13,1043],\n[M,38,50,1080,38,61,1091],\n[M,37,6,981,38,79,1109],\n[M,38,64,1094,38,77,1107],\n[M,38,42,1072,38,62,1092],\n[M,38,27,1057,38,40,1070],\n[M,43,39,1253,43,59,1273],\n[M,43,10,1224,43,59,1273],\n[M,42,8,1188,45,11,1376],\n[M,44,39,1313,44,90,1364],\n[M,44,10,1284,44,90,1364],\n[M,42,14,1194,42,20,1200],\n[M,41,6,1149,45,11,1376],\n[M,40,4,1122,77,7,3061],\n[M,47,8,1415,47,36,1443],\n[M,46,6,1383,47,36,1443],\n[M,50,39,1556,50,63,1580],\n[M,50,10,1527,50,63,1580],\n[M,49,8,1491,52,11,1687],\n[M,51,39,1620,51,94,1675],\n[M,51,10,1591,51,94,1675],\n[M,49,14,1497,49,20,1503],\n[M,48,6,1450,52,11,1687],\n[M,54,47,1772,54,72,1797],\n[M,54,35,1760,54,73,1798],\n[M,54,25,1750,54,74,1799],\n[M,54,8,1733,54,98,1823],\n[M,53,6,1694,54,98,1823],\n[M,56,47,1908,56,72,1933],\n[M,56,35,1896,56,73,1934],\n[M,56,25,1886,56,74,1935],\n[M,56,8,1869,56,102,1963],\n[M,55,6,1830,56,102,1963],\n[M,58,8,2009,58,43,2044],\n[M,57,6,1970,58,43,2044],\n[M,60,8,2090,60,47,2129],\n[M,59,6,2051,60,47,2129],\n[M,62,30,2197,62,43,2210],\n[M,62,19,2186,62,64,2231],\n[M,63,10,2243,63,59,2292],\n[M,63,11,2244,63,15,2248],\n[M,63,32,2265,63,43,2276],\n[M,62,8,2175,63,60,2293],\n[M,63,45,2278,63,58,2291],\n[M,63,17,2250,63,30,2263],\n[M,61,6,2136,63,60,2293],\n[M,65,30,2361,65,43,2374],\n[M,65,19,2350,65,64,2395],\n[M,66,10,2407,66,46,2443],\n[M,66,11,2408,66,15,2412],\n[M,65,8,2339,66,47,2444],\n[M,66,32,2429,66,45,2442],\n[M,66,17,2414,66,30,2427],\n[M,64,6,2300,66,47,2444],\n[M,68,30,2512,68,43,2525],\n[M,68,19,2501,68,70,2552],\n[M,69,10,2564,69,59,2613],\n[M,69,11,2565,69,15,2569],\n[M,69,32,2586,69,43,2597],\n[M,68,8,2490,69,60,2614],\n[M,69,45,2599,69,58,2612],\n[M,69,17,2571,69,30,2584],\n[M,67,6,2451,69,60,2614],\n[M,71,30,2682,71,43,2695],\n[M,71,19,2671,71,70,2722],\n[M,72,10,2734,72,59,2783],\n[M,72,11,2735,72,15,2739],\n[M,72,32,2756,72,43,2767],\n[M,71,8,2660,72,60,2784],\n[M,72,45,2769,72,58,2782],\n[M,72,17,2741,72,30,2754],\n[M,70,6,2621,72,60,2784],\n[M,74,30,2852,74,43,2865],\n[M,74,19,2841,74,69,2891],\n[M,75,10,2903,75,59,2952],\n[M,75,11,2904,75,15,2908],\n[M,75,32,2925,75,43,2936],\n[M,74,8,2830,75,60,2953],\n[M,75,45,2938,75,58,2951],\n[M,75,17,2910,75,30,2923],\n[M,73,6,2791,75,60,2953],\n[M,76,47,3001,76,57,3011],\n[M,76,16,2970,76,99,3053],\n[M,76,22,2976,76,98,3052],\n[M,76,89,3043,76,98,3052],\n[M,76,22,2976,76,86,3040],\n[M,76,22,2976,76,57,3011],\n[M,40,10,1128,40,19,1137],\n[M,79,2,3071,82,5,3192],\n[M,81,4,3170,81,20,3186],\n[M,29,22,616,83,1,3194],\n[M,85,0,3196,119,3,4635],\n[M,87,2,3250,117,5,4612],\n[M,92,6,3502,92,22,3518],\n[M,91,4,3477,116,7,4606],\n[M,97,52,3720,97,80,3748],\n[M,97,89,3757,97,104,3772],\n[M,97,14,3682,97,105,3773],\n[M,96,12,3646,99,15,3829],\n[M,98,14,3788,98,39,3813],\n[M,96,18,3652,96,24,3658],\n[M,98,24,3798,98,39,3813],\n[M,95,10,3585,99,15,3829],\n[M,94,8,3555,115,11,4598],\n[M,102,52,3970,102,80,3998],\n[M,102,89,4007,102,104,4022],\n[M,102,14,3932,102,105,4023],\n[M,101,12,3896,104,15,4079],\n[M,103,14,4038,103,39,4063],\n[M,101,18,3902,101,24,3908],\n[M,103,24,4048,103,39,4063],\n[M,100,10,3840,104,15,4079],\n[M,113,43,4485,113,74,4516],\n[M,113,92,4534,113,107,4549],\n[M,109,16,4285,110,48,4396],\n[M,110,20,4368,110,48,4396],\n[M,108,38,4246,108,60,4268],\n[M,108,38,4246,108,56,4264],\n[M,107,14,4198,110,48,4396],\n[M,106,25,4158,112,15,4441],\n[M,111,14,4411,111,28,4425],\n[M,106,31,4164,106,37,4170],\n[M,105,10,4090,113,108,4550],\n[M,94,14,3561,94,20,3567],\n[M,114,20,4571,114,35,4586],\n[M,93,6,3525,115,11,4598],\n[M,91,10,3483,91,14,3487],\n[M,118,2,4615,118,18,4631],\n[M,121,0,4637,142,3,5516],\n[M,122,2,4674,133,5,5182],\n[M,125,20,4794,125,28,4802],\n[M,125,33,4807,125,41,4815],\n[M,125,34,4808,125,38,4812],\n[M,126,20,4843,131,11,5167],\n[M,126,21,4844,126,25,4848],\n[M,127,39,4890,127,56,4907],\n[M,127,12,4863,127,57,4908],\n[M,128,12,4922,128,48,4958],\n[M,129,48,5008,129,75,5035],\n[M,129,12,4972,129,76,5036],\n[M,130,74,5112,130,100,5138],\n[M,130,75,5113,130,79,5117],\n[M,130,81,5119,130,99,5137],\n[M,130,43,5081,130,116,5154],\n[M,130,12,5050,130,117,5155],\n[M,126,8,4831,131,12,5168],\n[M,125,20,4794,125,48,4822],\n[M,124,6,4727,131,12,5168],\n[M,123,4,4701,132,7,5176],\n[M,123,10,4707,123,19,4716],\n[M,134,13,5196,134,39,5222],\n[M,135,15,5238,141,5,5511],\n[M,135,16,5239,135,20,5243],\n[M,136,28,5274,136,41,5287],\n[M,136,17,5263,136,56,5302],\n[M,136,58,5304,140,9,5504],\n[M,136,59,5305,136,63,5309],\n[M,137,21,5333,137,29,5341],\n[M,137,10,5322,137,30,5342],\n[M,139,27,5431,139,47,5451],\n[M,139,59,5463,139,78,5482],\n[M,139,49,5453,139,79,5483],\n[M,139,10,5414,139,90,5494],\n[M,136,6,5252,140,10,5505],\n[M,135,2,5225,141,6,5512],\n[M,144,0,5518,146,3,5676],\n[M,145,17,5564,145,25,5572],\n[M,145,18,5565,145,22,5569],\n[M,145,36,5583,145,84,5631],\n[M,145,70,5617,145,79,5626],\n[M,145,46,5593,145,80,5627],\n[M,145,27,5574,145,85,5632],\n[M,145,87,5634,145,96,5643],\n[M,145,2,5549,145,125,5672],\n[M,148,20,5698,148,41,5719],\n[M,149,2,5724,159,5,6057],\n[M,150,16,5772,157,7,6023],\n[M,151,17,5835,151,33,5851],\n[M,152,9,5861,152,28,5880],\n[M,152,45,5897,152,56,5908],\n[M,152,33,5885,152,57,5909],\n[M,152,63,5915,152,74,5926],\n[M,152,63,5915,152,76,5928],\n[M,152,62,5914,152,100,5952],\n[M,152,63,5915,152,99,5951],\n[M,158,4,6028,158,27,6051],\n[M,160,2,6061,162,5,6210],\n[M,161,4,6138,161,70,6204],\n[M,163,2,6214,165,5,6373],\n[M,164,4,6296,164,75,6367],\n[M,166,2,6377,168,5,6526],\n[M,167,4,6454,167,70,6520],\n[M,169,2,6530,174,5,6881],\n[M,173,14,6842,173,46,6874],\n[M,173,4,6832,173,47,6875],\n[M,148,20,5698,175,1,6883],\n[M,177,16,6901,177,37,6922],\n[M,178,2,6927,197,5,7601],\n[M,180,25,7026,180,38,7039],\n[M,180,15,7016,180,39,7040],\n[M,182,36,7134,182,58,7156],\n[M,183,32,7189,183,52,7209],\n[M,185,30,7250,185,64,7284],\n[M,185,18,7238,185,65,7285],\n[M,186,18,7304,186,33,7319],\n[M,189,24,7374,189,41,7391],\n[M,189,10,7360,189,46,7396],\n[M,190,12,7411,194,13,7577],\n[M,190,13,7412,190,17,7416],\n[M,191,54,7473,191,63,7482],\n[M,191,25,7444,191,64,7483],\n[M,191,14,7433,191,83,7502],\n[M,193,14,7543,193,34,7563],\n[M,187,6,7326,195,9,7587],\n[M,189,10,7360,194,13,7577],\n[M,189,24,7374,189,45,7395],\n[M,181,16,7057,181,56,7097],\n[M,179,24,6983,179,41,7000],\n[M,177,16,6901,198,1,7603],\n[M,200,0,7605,210,3,7971],\n[M,209,2,7942,209,27,7967],\n[M,212,0,7973,214,3,8037],\n[M,213,2,8004,213,31,8033],\n[\"dummy location\"],\n[M,3,0,13,214,3,8037]];\nvar equal$always1 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"equal-always\"];\nvar raise1 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"raise\"];\nvar tostring1 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"tostring\"];\nvar nothing2 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"nothing\"];\nvar torepr2 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"torepr\"];\nvar builtins1 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"builtins\"];\nvar _minus9 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"_minus\"];\nvar _plus5 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"_plus\"];\nvar $type$Boolean6 = R.gF(R.modules[\"builtin://global\"],\"defined-types\")[\"Boolean\"];\nvar $type$String8 = R.gF(R.modules[\"builtin://global\"],\"defined-types\")[\"String\"];\nvar arrays32 = R.gF($arrays33,\"values\");\nvar A33 = R.gF($A33,\"values\");\nvar $base34 = R.gF($$base23,\"values\");\nvar error35 = R.gF($error16,\"values\");\nvar $global37 = R.gF($$global24,\"values\");\nvar lists38 = R.gF($lists21,\"values\");\nvar L20 = R.gF($L30,\"values\");\nvar option39 = R.gF($option35,\"values\");\nvar sets41 = R.gF($sets25,\"values\");\nvar SL11 = R.gF($SL51,\"values\");\nvar U21 = R.gF($U68,\"values\");\nvar G22 = R.gF($G59,\"values\");\nvar arrays23 = R.gF($arrays33,\"types\");\nvar A25 = R.gF($A33,\"types\");\nvar $base26 = R.gF($$base23,\"types\");\nvar error30 = R.gF($error16,\"types\");\nvar $global35 = R.gF($$global24,\"types\");\nvar lists45 = R.gF($lists21,\"types\");\nvar L46 = R.gF($L30,\"types\");\nvar option49 = R.gF($option35,\"types\");\nvar sets51 = R.gF($sets25,\"types\");\nvar SL27 = R.gF($SL51,\"types\");\nvar U52 = R.gF($U68,\"types\");\nvar G53 = R.gF($G59,\"types\");\nNAMESPACE = R.aMTN(NAMESPACE,[\"array-to-list-now\",\"array-length\",\"array-get-now\",\"array-set-now\",\"array-of\",\"is-array\",\"array-from-list\",\"build-array\",\"array\"],[\"Array\"],$arrays33);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$A33);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$$base23);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$error16);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$$global24);\nNAMESPACE = R.aMTN(NAMESPACE,[\"fold4\",\"fold3\",\"fold2\",\"fold\",\"each4_n\",\"each3_n\",\"each2_n\",\"each_n\",\"each4\",\"each3\",\"each2\",\"each\",\"map4_n\",\"map3_n\",\"map2_n\",\"map_n\",\"map4\",\"map3\",\"map2\",\"map\",\"find\",\"any\",\"split-at\",\"partition\",\"filter\",\"repeat\",\"range-by\",\"range\",\"link\",\"empty\",\"is-link\",\"is-empty\",\"is-List\",\"list\"],[\"List\"],$lists21);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$L30);\nNAMESPACE = R.aMTN(NAMESPACE,[\"some\",\"none\",\"is-some\",\"is-none\",\"is-Option\"],[\"Option\"],$option35);\nNAMESPACE = R.aMTN(NAMESPACE,[\"list-to-tree-set\",\"list-to-list-set\",\"list-to-set\",\"empty-tree-set\",\"empty-list-set\",\"empty-set\",\"list-set\",\"tree-set\",\"set\"],[\"Set\"],$sets25);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$SL51);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$U68);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$G59);\nvar $cases_dispatch1924 = {\"check-info\":2};\nvar $cases_dispatch1858 = {\"empty\":2,\n\"link\":3};\nvar $cases_dispatch1854 = {\"s-fun\":2,\n\"s-data\":3,\n\"s-check\":4};\nvar $cases_dispatch1842 = {\"none\":2,\n\"some\":3};\nvar $cases_dispatch1807 = {\"none\":7,\n\"some\":8};\nvar $cases_dispatch1775 = {\"some\":2,\n\"none\":5};\nvar $cases_dispatch1762 = {\"some\":9,\n\"none\":10};\nvar $cases_dispatch1750 = {\"some\":2,\n\"none\":5};\nvar $cases_dispatch1716 = {\"some\":11,\n\"none\":12};\nvar $cases_dispatch1672 = {\"s-fun\":6,\n\"s-data\":7,\n\"s-check\":8};\nvar $cases_dispatch1664 = {\"none\":2,\n\"some\":3};\nvar $cases_dispatch1592 = {\"none\":9,\n\"some\":10};\nvar $cases_dispatch1529 = {\"some\":2,\n\"none\":5};\nvar $cases_dispatch1437 = {\"some\":11,\n\"none\":12};\nvar $cases_dispatch1409 = {\"some\":2,\n\"none\":5};\nvar $cases_dispatch1369 = {\"some\":13,\n\"none\":14};\nvar $cases_dispatch1130 = {\"s-op-is\":3,\n\"s-op-is-roughly\":8,\n\"s-op-is-not\":9,\n\"s-op-is-op\":14,\n\"s-op-is-not-op\":18,\n\"s-op-satisfies\":22,\n\"s-op-satisfies-not\":23,\n\"s-op-raises\":24,\n\"s-op-raises-not\":25,\n\"s-op-raises-other\":26,\n\"s-op-raises-satisfies\":27,\n\"s-op-raises-violates\":28};\nvar $cases_dispatch838 = {\"none\":11,\n\"some\":12};\nvar $cases_dispatch816 = {\"none\":5,\n\"some\":6};\nvar is$empty6 = NAMESPACE.get(\"is-empty\");\nvar empty10 = NAMESPACE.get(\"empty\");\nvar list11 = NAMESPACE.get(\"list\");\nvar List13 = NAMESPACE.get(\"$type$List\");\nvar none14 = NAMESPACE.get(\"none\");\nvar Option18 = NAMESPACE.get(\"$type$Option\");\nvar link19 = NAMESPACE.get(\"link\");\nvar $toplevel119 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__267($$resumer14) {\nvar $step118 = 0;\nvar $elidedFrames621 = 0;\nvar $ans618 = D;\nvar $al619 = L[267];\nif(R.isAR($$resumer14)) {\n$step118 = $$resumer14.step;\n$al619 = $$resumer14.from;\n$ans618 = $$resumer14.ans;\n$elidedFrames621 = $$resumer14.elidedFrames;\n$resumer14 = $$resumer14.args[0];\nis$CheckInfo634 = $$resumer14.vars[0];\nis$check$info635 = $$resumer14.vars[1];\nCheckInfo1925 = $$resumer14.vars[2];\nast$srcloc718 = $$resumer14.vars[3];\ndesugar$no$checks2171 = $$resumer14.vars[4];\nanswer2174 = $$resumer14.vars[5];\nflat$prim$app700 = $$resumer14.vars[6];\ncreate$check$block1945 = $$resumer14.vars[7];\ncheck$info636 = $$resumer14.vars[8];\nmake$lam1899 = $$resumer14.vars[9];\nast$lam688 = $$resumer14.vars[10];\nprovides2173 = $$resumer14.vars[11];\nno$checks$visitor2164 = $$resumer14.vars[12];\nget$checks1873 = $$resumer14.vars[13];\ndesugar$check2155 = $$resumer14.vars[14];\ncheck$stmts$visitor1221 = $$resumer14.vars[15];\nast$pretty655 = $$resumer14.vars[16];\ncheck$visitor2152 = $$resumer14.vars[17];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans618 = R.mC();\n}\nwhile(!R.isContinuation($ans618)) {\nswitch($step118) {\ncase 0: var CheckInfo622 = R.nB(\"CheckInfo\",L[5]);\nvar CheckInfo1925 = R.mBA(CheckInfo622,\"CheckInfo\");\nvar CheckInfo633 = {\"$var\":D};\nvar is$CheckInfo634 = {\"$var\":D};\nvar is$check$info635 = {\"$var\":D};\nvar check$info636 = {\"$var\":D};\nvar ast$pretty655 = {\"$var\":D};\nvar ast$lam688 = {\"$var\":D};\nvar $check$info_getfields627 = function singleton_variant(f) {\nreturn f(this.dict[\"l\"],this.dict[\"name\"],this.dict[\"body\"],this.dict[\"keyword-check\"]);\n};\nvar $check$info_mutablemask626 = [false,false,false,false];\nvar $check$info$base623 = {\"$fieldNames\":[\"l\",\"name\",\"body\",\"keyword-check\"],\n\"_match\":R.mM(\"check-info\",4)};\nvar $check$info$brander624 = R.nB(\"check-info\",L[0]);\nvar $check$info$brands625 = {};\n$check$info$brands625[CheckInfo622._brand] = true;\n$check$info$brands625[$check$info$brander624._brand] = true;\nvar check$info628 = R.mVC(L[0],function $synthesizedConstructor_$check$info$base() {\nreturn [R.gDA(L[1],\"SL\",SL27,\"Srcloc\"),$type$String8,R.gDA(L[2],\"A\",A25,\"Expr\"),$type$Boolean6];\n},[\"l629\",\"name630\",\"body631\",\"keyword$check632\"],[L[1],L[3],L[2],L[4]],[false,false,false,false],[\"l629\",\"name630\",\"body631\",\"keyword$check632\"],$check$info_mutablemask626,$check$info$base623,$check$info$brands625,\"check-info\",$check$info_getfields627,$check$info$base623);\nvar anf_assign195 = R.mO({\"CheckInfo\":G(CheckInfo622,\"test\",L[5]),\n\"is-check-info\":G($check$info$brander624,\"test\",L[0]),\n\"check-info\":check$info628});\nCheckInfo633.$var = anf_assign195;\nR.nothing;\n$al619 = L[5];\nvar anf_assign197 = G(CheckInfo633.$var,\"CheckInfo\",L[5]);\nis$CheckInfo634.$var = anf_assign197;\nR.nothing;\n$al619 = L[0];\nvar anf_assign199 = G(CheckInfo633.$var,\"is-check-info\",L[0]);\nis$check$info635.$var = anf_assign199;\nR.nothing;\n$al619 = L[0];\nvar anf_assign201 = G(CheckInfo633.$var,\"check-info\",L[0]);\ncheck$info636.$var = anf_assign201;\nR.nothing;\nvar $temp_lam638 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__6($ast639) {\nvar $step637 = 0;\nvar $elidedFrames644 = 0;\nvar $ans641 = D;\nvar $al642 = L[6];\nif(R.isAR($ast639)) {\n$step637 = $ast639.step;\n$al642 = $ast639.from;\n$ans641 = $ast639.ans;\n$elidedFrames644 = $ast639.elidedFrames;\nast639 = $ast639.args[0];\nanf_arg1332 = $ast639.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[6],1,$t,false);\n}\nvar ast639 = $ast639;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans641 = R.mC();\n}\nwhile(!R.isContinuation($ans641)) {\nswitch($step637) {\ncase 0: $al642 = L[7];\nvar anf_arg1332 = G(ast639,\"l\",L[7]);\n$step637 = 1;\n$ans641 = R.maybeMethodCall0(ast639,\"tosource\",L[8]);\nbreak;\ncase 1: var anf_method_obj645 = $ans641;\n$step637 = 2;\n$ans641 = R.maybeMethodCall1(anf_method_obj645,\"pretty\",L[9],(80));\nbreak;\ncase 2: var anf_method_obj646 = $ans641;\n$step637 = 3;\n$ans641 = R.maybeMethodCall1(anf_method_obj646,\"join-str\",L[10],(\"\\n\"));\nbreak;\ncase 3: var anf_arg1187 = $ans641;\n$step637 = 4;\n$ans641 = R.maybeMethodCall2(A33,\"s-str\",L[11],anf_arg1332,anf_arg1187);\nbreak;\ncase 4: ++R.GAS;\nreturn $ans641;\ndefault: R.ffi.throwSpinnakerError(L[6],$step637);\n}\n}\nif($step637 !== 4) {\n$ans641.stack[R.EXN_STACKHEIGHT++] = R.mAR($al642,$temp_lam638,$step637,[ast639],[anf_arg1332],$elidedFrames644);\n}\nreturn $ans641;\n};\nvar anf_assign654 = R.mF($temp_lam638,\"ast-pretty\");\nast$pretty655.$var = anf_assign654;\nR.nothing;\nvar $temp_lam667 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__12($ast668) {\nvar $step666 = 0;\nvar $elidedFrames676 = 0;\nvar $ans673 = D;\nvar $al674 = L[12];\nif(R.isAR($ast668)) {\n$step666 = $ast668.step;\n$al674 = $ast668.from;\n$ans673 = $ast668.ans;\n$elidedFrames676 = $ast668.elidedFrames;\nast668 = $ast668.args[0];\nanf_arg383 = $ast668.vars[0];\nanf_arg218 = $ast668.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[12],1,$t,false);\n}\nvar ast668 = $ast668;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans673 = R.mC();\n}\nwhile(!R.isContinuation($ans673)) {\nswitch($step666) {\ncase 0: $al674 = L[13];\nvar anf_arg383 = G(ast668,\"l\",L[13]);\n$al674 = L[15];\nvar anf_fun677 = R.getMaker0(list11,(\"make0\"),L[14],L[15]);\n$step666 = 1;\n$al674 = L[15];\nif(typeof(anf_fun677.app) !== \"function\") {\nR.ffi.throwNonFunApp($al674,anf_fun677);\n}\n$ans673 = anf_fun677.app();\nbreak;\ncase 1: var anf_arg218 = $ans673;\n$al674 = L[17];\nvar anf_fun679 = R.getMaker0(list11,(\"make0\"),L[16],L[17]);\n$step666 = 2;\n$al674 = L[17];\nif(typeof(anf_fun679.app) !== \"function\") {\nR.ffi.throwNonFunApp($al674,anf_fun679);\n}\n$ans673 = anf_fun679.app();\nbreak;\ncase 2: var anf_arg394 = $ans673;\n$al674 = L[18];\nvar anf_arg219 = G(A33,\"a-blank\",L[18]);\n$step666 = 3;\n$ans673 = R.maybeMethodCall(A33,\"s-lam\",L[19],anf_arg383,(\"\"),anf_arg218,anf_arg394,anf_arg219,(\"\"),ast668,none14,none14,(true));\nbreak;\ncase 3: ++R.GAS;\nreturn $ans673;\ndefault: R.ffi.throwSpinnakerError(L[12],$step666);\n}\n}\nif($step666 !== 3) {\n$ans673.stack[R.EXN_STACKHEIGHT++] = R.mAR($al674,$temp_lam667,$step666,[ast668],[anf_arg383,anf_arg218],$elidedFrames676);\n}\nreturn $ans673;\n};\nvar anf_assign687 = R.mF($temp_lam667,\"ast-lam\");\nast$lam688.$var = anf_assign687;\nR.nothing;\n$step118 = 1;\n$ans618 = R.maybeMethodCall1(A33,\"prim-app-info-c\",L[20],(false));\nbreak;\ncase 1: var flat$prim$app700 = $ans618;\nvar ast$srcloc718 = {\"$var\":D};\nvar $temp_lam690 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__21($l691) {\nvar $step689 = 0;\nvar $elidedFrames698 = 0;\nvar $ans695 = D;\nvar $al696 = L[21];\nif(R.isAR($l691)) {\n$step689 = $l691.step;\n$al696 = $l691.from;\n$ans695 = $l691.ans;\n$elidedFrames698 = $l691.elidedFrames;\nl691 = $l691.args[0];\nanf_fun699 = $l691.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[21],1,$t,false);\n}\nvar l691 = $l691;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans695 = R.mC();\n}\nwhile(!R.isContinuation($ans695)) {\nswitch($step689) {\ncase 0: $al696 = L[23];\nvar anf_fun699 = R.getMaker1(list11,(\"make1\"),L[22],L[23]);\n$step689 = 1;\n$ans695 = R.maybeMethodCall2(A33,\"s-srcloc\",L[24],l691,l691);\nbreak;\ncase 1: var anf_arg406 = $ans695;\n$step689 = 2;\n$al696 = L[23];\nif(typeof(anf_fun699.app) !== \"function\") {\nR.ffi.throwNonFunApp($al696,anf_fun699);\n}\n$ans695 = anf_fun699.app(anf_arg406);\nbreak;\ncase 2: var anf_arg231 = $ans695;\n$step689 = 3;\n$ans695 = R.maybeMethodCall4(A33,\"s-prim-app\",L[25],l691,(\"makeSrcloc\"),anf_arg231,flat$prim$app700);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans695;\ndefault: R.ffi.throwSpinnakerError(L[21],$step689);\n}\n}\nif($step689 !== 3) {\n$ans695.stack[R.EXN_STACKHEIGHT++] = R.mAR($al696,$temp_lam690,$step689,[l691],[anf_fun699],$elidedFrames698);\n}\nreturn $ans695;\n};\nvar anf_assign717 = R.mF($temp_lam690,\"ast-srcloc\");\nast$srcloc718.$var = anf_assign717;\nR.nothing;\n$al619 = L[26];\nvar anf_extend1173 = G(A33,\"default-map-visitor\",L[26]);\nvar $temp_full727 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__27($self337,$l729,$op730,$refinement731,$left732,$right733) {\nvar $step726 = 0;\nvar $elidedFrames737 = 0;\nvar $ans734 = D;\nvar $al735 = L[27];\nif(R.isAR($self337)) {\n$step726 = $self337.step;\n$al735 = $self337.from;\n$ans734 = $self337.ans;\n$elidedFrames737 = $self337.elidedFrames;\nself337 = $self337.args[0];\nl729 = $self337.args[1];\nop730 = $self337.args[2];\nrefinement731 = $self337.args[3];\nleft732 = $self337.args[4];\nright733 = $self337.args[5];\ncases811 = $self337.vars[0];\ncases812 = $self337.vars[1];\ncases834 = $self337.vars[2];\ncheck$refinement810 = $self337.vars[3];\nanf_arg631 = $self337.vars[4];\ncheck$op771 = $self337.vars[5];\n} else {\nvar $l = arguments.length;\nif($l !== 6) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[27],6,$t,true);\n}\nvar self337 = $self337;\nvar l729 = $l729;\nvar op730 = $op730;\nvar refinement731 = $refinement731;\nvar left732 = $left732;\nvar right733 = $right733;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans734 = R.mC();\n}\nwhile(!R.isContinuation($ans734)) {\nswitch($step726) {\ncase 0: $step726 = 1;\n$ans734 = R.maybeMethodCall5(A33,\"s-check-test\",L[28],l729,op730,refinement731,left732,right733);\nbreak;\ncase 1: var check$op771 = {\"$var\":D};\nvar check$refinement810 = {\"$var\":D};\nvar $temp_lam752 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__29($fieldname753) {\nvar $step751 = 0;\nvar $elidedFrames766 = 0;\nvar $ans763 = D;\nvar $al764 = L[29];\nif(R.isAR($fieldname753)) {\n$step751 = $fieldname753.step;\n$al764 = $fieldname753.from;\n$ans763 = $fieldname753.ans;\n$elidedFrames766 = $fieldname753.elidedFrames;\nfieldname753 = $fieldname753.args[0];\nanf_arg244 = $fieldname753.vars[0];\nanf_fun431 = $fieldname753.vars[1];\nanf_arg432 = $fieldname753.vars[2];\nanf_arg264 = $fieldname753.vars[3];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[29],1,$t,false);\n}\nvar fieldname753 = $fieldname753;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans763 = R.mC();\n}\nwhile(!R.isContinuation($ans763)) {\nswitch($step751) {\ncase 0: $step751 = 1;\n$ans763 = R.maybeMethodCall1(U21,\"checkers\",L[30],l729);\nbreak;\ncase 1: var anf_arg419 = $ans763;\n$step751 = 2;\n$ans763 = R.maybeMethodCall3(A33,\"s-dot\",L[31],l729,anf_arg419,fieldname753);\nbreak;\ncase 2: var anf_arg244 = $ans763;\n$al764 = L[33];\nvar anf_fun431 = R.getMaker3(list11,(\"make3\"),L[32],L[33]);\n$step751 = 3;\n$al764 = L[38];\n// omitting isFunction check;\n$ans763 = ast$lam688.$var.app(left732);\nbreak;\ncase 3: var anf_arg432 = $ans763;\n$al764 = L[34];\nvar anf_arg433 = G(right733,\"value\",L[34]);\n$step751 = 4;\n$al764 = L[37];\n// omitting isFunction check;\n$ans763 = ast$lam688.$var.app(anf_arg433);\nbreak;\ncase 4: var anf_arg264 = $ans763;\n$step751 = 5;\n$al764 = L[36];\n// omitting isFunction check;\n$ans763 = ast$srcloc718.$var.app(l729);\nbreak;\ncase 5: var anf_arg267 = $ans763;\n$step751 = 6;\n$al764 = L[33];\nif(typeof(anf_fun431.app) !== \"function\") {\nR.ffi.throwNonFunApp($al764,anf_fun431);\n}\n$ans763 = anf_fun431.app(anf_arg432,anf_arg264,anf_arg267);\nbreak;\ncase 6: var anf_arg447 = $ans763;\n$step751 = 7;\n$ans763 = R.maybeMethodCall3(A33,\"s-app\",L[35],l729,anf_arg244,anf_arg447);\nbreak;\ncase 7: ++R.GAS;\nreturn $ans763;\ndefault: R.ffi.throwSpinnakerError(L[29],$step751);\n}\n}\nif($step751 !== 7) {\n$ans763.stack[R.EXN_STACKHEIGHT++] = R.mAR($al764,$temp_lam752,$step751,[fieldname753],[anf_arg244,anf_fun431,anf_arg432,anf_arg264],$elidedFrames766);\n}\nreturn $ans763;\n};\nvar anf_assign770 = R.mF($temp_lam752,\"check-op\");\ncheck$op771.$var = anf_assign770;\nR.nothing;\nvar $temp_lam777 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__39($refinement778,$fieldname779) {\nvar $step776 = 0;\nvar $elidedFrames793 = 0;\nvar $ans790 = D;\nvar $al791 = L[39];\nif(R.isAR($refinement778)) {\n$step776 = $refinement778.step;\n$al791 = $refinement778.from;\n$ans790 = $refinement778.ans;\n$elidedFrames793 = $refinement778.elidedFrames;\nrefinement778 = $refinement778.args[0];\nfieldname779 = $refinement778.args[1];\nanf_arg465 = $refinement778.vars[0];\nanf_fun121 = $refinement778.vars[1];\nanf_arg1685 = $refinement778.vars[2];\nanf_arg475 = $refinement778.vars[3];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[39],2,$t,false);\n}\nvar refinement778 = $refinement778;\nvar fieldname779 = $fieldname779;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans790 = R.mC();\n}\nwhile(!R.isContinuation($ans790)) {\nswitch($step776) {\ncase 0: $step776 = 1;\n$ans790 = R.maybeMethodCall1(U21,\"checkers\",L[40],l729);\nbreak;\ncase 1: var anf_arg1573 = $ans790;\n$step776 = 2;\n$ans790 = R.maybeMethodCall3(A33,\"s-dot\",L[41],l729,anf_arg1573,fieldname779);\nbreak;\ncase 2: var anf_arg465 = $ans790;\n$al791 = L[43];\nvar anf_fun121 = R.getMaker4(list11,(\"make4\"),L[42],L[43]);\n$step776 = 3;\n$al791 = L[48];\n// omitting isFunction check;\n$ans790 = ast$lam688.$var.app(left732);\nbreak;\ncase 3: var anf_arg1685 = $ans790;\n$al791 = L[44];\nvar anf_arg474 = G(right733,\"value\",L[44]);\n$step776 = 4;\n$al791 = L[47];\n// omitting isFunction check;\n$ans790 = ast$lam688.$var.app(anf_arg474);\nbreak;\ncase 4: var anf_arg475 = $ans790;\n$step776 = 5;\n$al791 = L[46];\n// omitting isFunction check;\n$ans790 = ast$srcloc718.$var.app(l729);\nbreak;\ncase 5: var anf_arg286 = $ans790;\n$step776 = 6;\n$al791 = L[43];\nif(typeof(anf_fun121.app) !== \"function\") {\nR.ffi.throwNonFunApp($al791,anf_fun121);\n}\n$ans790 = anf_fun121.app(refinement778,anf_arg1685,anf_arg475,anf_arg286);\nbreak;\ncase 6: var anf_arg167 = $ans790;\n$step776 = 7;\n$ans790 = R.maybeMethodCall3(A33,\"s-app\",L[45],l729,anf_arg465,anf_arg167);\nbreak;\ncase 7: ++R.GAS;\nreturn $ans790;\ndefault: R.ffi.throwSpinnakerError(L[39],$step776);\n}\n}\nif($step776 !== 7) {\n$ans790.stack[R.EXN_STACKHEIGHT++] = R.mAR($al791,$temp_lam777,$step776,[refinement778,fieldname779],[anf_arg465,anf_fun121,anf_arg1685,anf_arg475],$elidedFrames793);\n}\nreturn $ans790;\n};\nvar anf_assign809 = R.mF($temp_lam777,\"check-refinement\");\ncheck$refinement810.$var = anf_assign809;\nR.nothing;\nvar cases811 = op730;\n$step726 = 2;\n$al735 = L[130];\nvar $ann$check1132 = R._cA(L[130],R.gDA(L[130],\"A\",A25,\"CheckOp\"),cases811);\nif(R.isContinuation($ann$check1132)) {\n$ans734 = $ann$check1132;\n}\nbreak;\ncase 2: $al735 = L[56];\n$step726 = $cases_dispatch1130[cases811.$name] || 29;\nbreak;\ncase 3: if(cases811.$arity !== 1) {\nif(cases811.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[55],1,cases811.$arity,L[56],cases811.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[55],true,L[56],cases811.$loc);\n}\n}\nvar $fn827 = cases811.$constructor.$fieldNames;\nR.dF(cases811.dict[$fn827[0]],cases811.$mut_fields_mask[0],false);\nvar cases812 = refinement731;\n$step726 = 4;\n$al735 = L[54];\nvar $ann$check817 = R._cA(L[54],Option18,cases812);\nif(R.isContinuation($ann$check817)) {\n$ans734 = $ann$check817;\n}\nbreak;\ncase 4: $al735 = L[51];\n$step726 = $cases_dispatch816[cases812.$name] || 7;\nbreak;\ncase 5: if(cases812.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[50],false,L[51],cases812.$loc);\n}\n$step726 = 35;\n$al735 = L[49];\nif(typeof(check$op771.$var.app) !== \"function\") {\nR.ffi.throwNonFunApp($al735,check$op771.$var);\n}\n$ans734 = check$op771.$var.app((\"check-is\"));\nbreak;\ncase 6: if(cases812.$arity !== 1) {\nif(cases812.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[53],1,cases812.$arity,L[51],cases812.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[53],true,L[51],cases812.$loc);\n}\n}\nvar $fn815 = cases812.$constructor.$fieldNames;\nvar refinement813 = R.dF(cases812.dict[$fn815[0]],cases812.$mut_fields_mask[0],false);\n$step726 = 35;\n$al735 = L[52];\nif(typeof(check$refinement810.$var.app) !== \"function\") {\nR.ffi.throwNonFunApp($al735,check$refinement810.$var);\n}\n$ans734 = check$refinement810.$var.app(refinement813,(\"check-is-refinement\"));\nbreak;\ncase 7: $step726 = 35;\n$al735 = L[51];\n$ans734 = R.throwNoCasesMatched(L[51],cases812);\nbreak;\ncase 8: if(cases811.$arity !== 1) {\nif(cases811.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[58],1,cases811.$arity,L[56],cases811.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[58],true,L[56],cases811.$loc);\n}\n}\nvar $fn833 = cases811.$constructor.$fieldNames;\nR.dF(cases811.dict[$fn833[0]],cases811.$mut_fields_mask[0],false);\n$step726 = 35;\n$al735 = L[57];\nif(typeof(check$op771.$var.app) !== \"function\") {\nR.ffi.throwNonFunApp($al735,check$op771.$var);\n}\n$ans734 = check$op771.$var.app((\"check-is-roughly\"));\nbreak;\ncase 9: if(cases811.$arity !== 1) {\nif(cases811.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[65],1,cases811.$arity,L[56],cases811.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[65],true,L[56],cases811.$loc);\n}\n}\nvar $fn842 = cases811.$constructor.$fieldNames;\nR.dF(cases811.dict[$fn842[0]],cases811.$mut_fields_mask[0],false);\nvar cases834 = refinement731;\n$step726 = 10;\n$al735 = L[64];\nvar $ann$check839 = R._cA(L[64],Option18,cases834);\nif(R.isContinuation($ann$check839)) {\n$ans734 = $ann$check839;\n}\nbreak;\ncase 10: $al735 = L[61];\n$step726 = $cases_dispatch838[cases834.$name] || 13;\nbreak;\ncase 11: if(cases834.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[60],false,L[61],cases834.$loc);\n}\n$step726 = 35;\n$al735 = L[59];\nif(typeof(check$op771.$var.app) !== \"function\") {\nR.ffi.throwNonFunApp($al735,check$op771.$var);\n}\n$ans734 = check$op771.$var.app((\"check-is-not\"));\nbreak;\ncase 12: if(cases834.$arity !== 1) {\nif(cases834.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[63],1,cases834.$arity,L[61],cases834.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[63],true,L[61],cases834.$loc);\n}\n}\nvar $fn837 = cases834.$constructor.$fieldNames;\nvar refinement835 = R.dF(cases834.dict[$fn837[0]],cases834.$mut_fields_mask[0],false);\n$step726 = 35;\n$al735 = L[62];\nif(typeof(check$refinement810.$var.app) !== \"function\") {\nR.ffi.throwNonFunApp($al735,check$refinement810.$var);\n}\n$ans734 = check$refinement810.$var.app(refinement835,(\"check-is-not-refinement\"));\nbreak;\ncase 13: $step726 = 35;\n$al735 = L[61];\n$ans734 = R.throwNoCasesMatched(L[61],cases834);\nbreak;\ncase 14: if(cases811.$arity !== 2) {\nif(cases811.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[70],2,cases811.$arity,L[56],cases811.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[70],true,L[56],cases811.$loc);\n}\n}\nvar $fn847 = cases811.$constructor.$fieldNames;\nR.dF(cases811.dict[$fn847[0]],cases811.$mut_fields_mask[0],false);\nvar opname843 = R.dF(cases811.dict[$fn847[1]],cases811.$mut_fields_mask[1],false);\n$step726 = 15;\n$ans734 = R.maybeMethodCall1(A33,\"get-op-fun-name\",L[66],opname843);\nbreak;\ncase 15: var anf_arg486 = $ans734;\n$step726 = 16;\n$ans734 = R.maybeMethodCall2(A33,\"s-name\",L[67],l729,anf_arg486);\nbreak;\ncase 16: var anf_arg288 = $ans734;\n$step726 = 17;\n$ans734 = R.maybeMethodCall2(A33,\"s-id\",L[68],l729,anf_arg288);\nbreak;\ncase 17: var anf_arg289 = $ans734;\n$step726 = 35;\n$al735 = L[69];\nif(typeof(check$refinement810.$var.app) !== \"function\") {\nR.ffi.throwNonFunApp($al735,check$refinement810.$var);\n}\n$ans734 = check$refinement810.$var.app(anf_arg289,(\"check-is-refinement\"));\nbreak;\ncase 18: if(cases811.$arity !== 2) {\nif(cases811.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[75],2,cases811.$arity,L[56],cases811.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[75],true,L[56],cases811.$loc);\n}\n}\nvar $fn850 = cases811.$constructor.$fieldNames;\nR.dF(cases811.dict[$fn850[0]],cases811.$mut_fields_mask[0],false);\nvar opname848 = R.dF(cases811.dict[$fn850[1]],cases811.$mut_fields_mask[1],false);\n$step726 = 19;\n$ans734 = R.maybeMethodCall1(A33,\"get-op-fun-name\",L[71],opname848);\nbreak;\ncase 19: var anf_arg497 = $ans734;\n$step726 = 20;\n$ans734 = R.maybeMethodCall2(A33,\"s-name\",L[72],l729,anf_arg497);\nbreak;\ncase 20: var anf_arg498 = $ans734;\n$step726 = 21;\n$ans734 = R.maybeMethodCall2(A33,\"s-id\",L[73],l729,anf_arg498);\nbreak;\ncase 21: var anf_arg293 = $ans734;\n$step726 = 35;\n$al735 = L[74];\nif(typeof(check$refinement810.$var.app) !== \"function\") {\nR.ffi.throwNonFunApp($al735,check$refinement810.$var);\n}\n$ans734 = check$refinement810.$var.app(anf_arg293,(\"check-is-not-refinement\"));\nbreak;\ncase 22: if(cases811.$arity !== 1) {\nif(cases811.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[77],1,cases811.$arity,L[56],cases811.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[77],true,L[56],cases811.$loc);\n}\n}\nvar $fn856 = cases811.$constructor.$fieldNames;\nR.dF(cases811.dict[$fn856[0]],cases811.$mut_fields_mask[0],false);\n$step726 = 35;\n$al735 = L[76];\nif(typeof(check$op771.$var.app) !== \"function\") {\nR.ffi.throwNonFunApp($al735,check$op771.$var);\n}\n$ans734 = check$op771.$var.app((\"check-satisfies-delayed\"));\nbreak;\ncase 23: if(cases811.$arity !== 1) {\nif(cases811.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[79],1,cases811.$arity,L[56],cases811.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[79],true,L[56],cases811.$loc);\n}\n}\nvar $fn884 = cases811.$constructor.$fieldNames;\nR.dF(cases811.dict[$fn884[0]],cases811.$mut_fields_mask[0],false);\n$step726 = 35;\n$al735 = L[78];\nif(typeof(check$op771.$var.app) !== \"function\") {\nR.ffi.throwNonFunApp($al735,check$op771.$var);\n}\n$ans734 = check$op771.$var.app((\"check-satisfies-not-delayed\"));\nbreak;\ncase 24: if(cases811.$arity !== 1) {\nif(cases811.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[88],1,cases811.$arity,L[56],cases811.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[88],true,L[56],cases811.$loc);\n}\n}\n$step726 = 35;\n$al735 = L[88];\nvar $temp_branch890 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__56($$underscore404) {\nvar $step905 = 0;\nvar $elidedFrames923 = 0;\nvar $ans920 = D;\nvar $al921 = L[80];\nif(R.isAR($$underscore404)) {\n$step905 = $$underscore404.step;\n$al921 = $$underscore404.from;\n$ans920 = $$underscore404.ans;\n$elidedFrames923 = $$underscore404.elidedFrames;\n$underscore404 = $$underscore404.args[0];\nanf_arg510 = $$underscore404.vars[0];\nanf_fun889 = $$underscore404.vars[1];\nanf_arg214 = $$underscore404.vars[2];\nanf_arg233 = $$underscore404.vars[3];\n} else {\nvar $underscore404 = $$underscore404;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans920 = R.mC();\n}\nwhile(!R.isContinuation($ans920)) {\nswitch($step905) {\ncase 0: $step905 = 1;\n$ans920 = R.maybeMethodCall1(U21,\"checkers\",L[80],l729);\nbreak;\ncase 1: var anf_arg310 = $ans920;\n$step905 = 2;\n$ans920 = R.maybeMethodCall3(A33,\"s-dot\",L[81],l729,anf_arg310,(\"check-raises-str\"));\nbreak;\ncase 2: var anf_arg510 = $ans920;\n$al921 = L[83];\nvar anf_fun889 = R.getMaker3(list11,(\"make3\"),L[82],L[83]);\n$step905 = 3;\n$al921 = L[87];\n// omitting isFunction check;\n$ans920 = ast$lam688.$var.app(left732);\nbreak;\ncase 3: var anf_arg214 = $ans920;\n$al921 = L[84];\nvar anf_arg233 = G(right733,\"value\",L[84]);\n$step905 = 4;\n$al921 = L[86];\n// omitting isFunction check;\n$ans920 = ast$srcloc718.$var.app(l729);\nbreak;\ncase 4: var anf_arg524 = $ans920;\n$step905 = 5;\n$al921 = L[83];\nif(typeof(anf_fun889.app) !== \"function\") {\nR.ffi.throwNonFunApp($al921,anf_fun889);\n}\n$ans920 = anf_fun889.app(anf_arg214,anf_arg233,anf_arg524);\nbreak;\ncase 5: var anf_arg525 = $ans920;\n$step905 = 6;\n$ans920 = R.maybeMethodCall3(A33,\"s-app\",L[85],l729,anf_arg510,anf_arg525);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans920;\ndefault: R.ffi.throwSpinnakerError(L[80],$step905);\n}\n}\nif($step905 !== 6) {\n$ans920.stack[R.EXN_STACKHEIGHT++] = R.mAR($al921,$temp_branch890,$step905,[$underscore404],[anf_arg510,anf_fun889,anf_arg214,anf_arg233],$elidedFrames923);\n}\nreturn $ans920;\n};\n$ans734 = cases811.$app_fields($temp_branch890,[false]);\nbreak;\ncase 25: if(cases811.$arity !== 1) {\nif(cases811.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[96],1,cases811.$arity,L[56],cases811.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[96],true,L[56],cases811.$loc);\n}\n}\n$step726 = 35;\n$al735 = L[96];\nvar $temp_branch1026 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__56($$underscore1042) {\nvar $step1029 = 0;\nvar $elidedFrames1041 = 0;\nvar $ans1038 = D;\nvar $al1039 = L[89];\nif(R.isAR($$underscore1042)) {\n$step1029 = $$underscore1042.step;\n$al1039 = $$underscore1042.from;\n$ans1038 = $$underscore1042.ans;\n$elidedFrames1041 = $$underscore1042.elidedFrames;\n$underscore1042 = $$underscore1042.args[0];\nanf_arg274 = $$underscore1042.vars[0];\nanf_fun1025 = $$underscore1042.vars[1];\nanf_arg540 = $$underscore1042.vars[2];\n} else {\nvar $underscore1042 = $$underscore1042;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1038 = R.mC();\n}\nwhile(!R.isContinuation($ans1038)) {\nswitch($step1029) {\ncase 0: $step1029 = 1;\n$ans1038 = R.maybeMethodCall1(U21,\"checkers\",L[89],l729);\nbreak;\ncase 1: var anf_arg234 = $ans1038;\n$step1029 = 2;\n$ans1038 = R.maybeMethodCall3(A33,\"s-dot\",L[90],l729,anf_arg234,(\"check-raises-not\"));\nbreak;\ncase 2: var anf_arg274 = $ans1038;\n$al1039 = L[92];\nvar anf_fun1025 = R.getMaker2(list11,(\"make2\"),L[91],L[92]);\n$step1029 = 3;\n$al1039 = L[95];\n// omitting isFunction check;\n$ans1038 = ast$lam688.$var.app(left732);\nbreak;\ncase 3: var anf_arg540 = $ans1038;\n$step1029 = 4;\n$al1039 = L[94];\n// omitting isFunction check;\n$ans1038 = ast$srcloc718.$var.app(l729);\nbreak;\ncase 4: var anf_arg404 = $ans1038;\n$step1029 = 5;\n$al1039 = L[92];\nif(typeof(anf_fun1025.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1039,anf_fun1025);\n}\n$ans1038 = anf_fun1025.app(anf_arg540,anf_arg404);\nbreak;\ncase 5: var anf_arg556 = $ans1038;\n$step1029 = 6;\n$ans1038 = R.maybeMethodCall3(A33,\"s-app\",L[93],l729,anf_arg274,anf_arg556);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1038;\ndefault: R.ffi.throwSpinnakerError(L[89],$step1029);\n}\n}\nif($step1029 !== 6) {\n$ans1038.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1039,$temp_branch1026,$step1029,[$underscore1042],[anf_arg274,anf_fun1025,anf_arg540],$elidedFrames1041);\n}\nreturn $ans1038;\n};\n$ans734 = cases811.$app_fields($temp_branch1026,[false]);\nbreak;\ncase 26: if(cases811.$arity !== 1) {\nif(cases811.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[105],1,cases811.$arity,L[56],cases811.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[105],true,L[56],cases811.$loc);\n}\n}\n$step726 = 35;\n$al735 = L[105];\nvar $temp_branch1047 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__56($$underscore1067) {\nvar $step1053 = 0;\nvar $elidedFrames1066 = 0;\nvar $ans1063 = D;\nvar $al1064 = L[97];\nif(R.isAR($$underscore1067)) {\n$step1053 = $$underscore1067.step;\n$al1064 = $$underscore1067.from;\n$ans1063 = $$underscore1067.ans;\n$elidedFrames1066 = $$underscore1067.elidedFrames;\n$underscore1067 = $$underscore1067.args[0];\nanf_arg369 = $$underscore1067.vars[0];\nanf_fun398 = $$underscore1067.vars[1];\nanf_arg566 = $$underscore1067.vars[2];\nanf_arg335 = $$underscore1067.vars[3];\n} else {\nvar $underscore1067 = $$underscore1067;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1063 = R.mC();\n}\nwhile(!R.isContinuation($ans1063)) {\nswitch($step1053) {\ncase 0: $step1053 = 1;\n$ans1063 = R.maybeMethodCall1(U21,\"checkers\",L[97],l729);\nbreak;\ncase 1: var anf_arg320 = $ans1063;\n$step1053 = 2;\n$ans1063 = R.maybeMethodCall3(A33,\"s-dot\",L[98],l729,anf_arg320,(\"check-raises-other-str\"));\nbreak;\ncase 2: var anf_arg369 = $ans1063;\n$al1064 = L[100];\nvar anf_fun398 = R.getMaker3(list11,(\"make3\"),L[99],L[100]);\n$step1053 = 3;\n$al1064 = L[104];\n// omitting isFunction check;\n$ans1063 = ast$lam688.$var.app(left732);\nbreak;\ncase 3: var anf_arg566 = $ans1063;\n$al1064 = L[101];\nvar anf_arg335 = G(right733,\"value\",L[101]);\n$step1053 = 4;\n$al1064 = L[103];\n// omitting isFunction check;\n$ans1063 = ast$srcloc718.$var.app(l729);\nbreak;\ncase 4: var anf_arg340 = $ans1063;\n$step1053 = 5;\n$al1064 = L[100];\nif(typeof(anf_fun398.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1064,anf_fun398);\n}\n$ans1063 = anf_fun398.app(anf_arg566,anf_arg335,anf_arg340);\nbreak;\ncase 5: var anf_arg576 = $ans1063;\n$step1053 = 6;\n$ans1063 = R.maybeMethodCall3(A33,\"s-app\",L[102],l729,anf_arg369,anf_arg576);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1063;\ndefault: R.ffi.throwSpinnakerError(L[97],$step1053);\n}\n}\nif($step1053 !== 6) {\n$ans1063.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1064,$temp_branch1047,$step1053,[$underscore1067],[anf_arg369,anf_fun398,anf_arg566,anf_arg335],$elidedFrames1066);\n}\nreturn $ans1063;\n};\n$ans734 = cases811.$app_fields($temp_branch1047,[false]);\nbreak;\ncase 27: if(cases811.$arity !== 1) {\nif(cases811.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[114],1,cases811.$arity,L[56],cases811.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[114],true,L[56],cases811.$loc);\n}\n}\n$step726 = 35;\n$al735 = L[114];\nvar $temp_branch1072 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__56($$underscore1089) {\nvar $step1074 = 0;\nvar $elidedFrames1088 = 0;\nvar $ans1085 = D;\nvar $al1086 = L[106];\nif(R.isAR($$underscore1089)) {\n$step1074 = $$underscore1089.step;\n$al1086 = $$underscore1089.from;\n$ans1085 = $$underscore1089.ans;\n$elidedFrames1088 = $$underscore1089.elidedFrames;\n$underscore1089 = $$underscore1089.args[0];\nanf_arg164 = $$underscore1089.vars[0];\nanf_fun587 = $$underscore1089.vars[1];\nanf_arg588 = $$underscore1089.vars[2];\nanf_arg589 = $$underscore1089.vars[3];\n} else {\nvar $underscore1089 = $$underscore1089;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1085 = R.mC();\n}\nwhile(!R.isContinuation($ans1085)) {\nswitch($step1074) {\ncase 0: $step1074 = 1;\n$ans1085 = R.maybeMethodCall1(U21,\"checkers\",L[106],l729);\nbreak;\ncase 1: var anf_arg577 = $ans1085;\n$step1074 = 2;\n$ans1085 = R.maybeMethodCall3(A33,\"s-dot\",L[107],l729,anf_arg577,(\"check-raises-satisfies\"));\nbreak;\ncase 2: var anf_arg164 = $ans1085;\n$al1086 = L[109];\nvar anf_fun587 = R.getMaker3(list11,(\"make3\"),L[108],L[109]);\n$step1074 = 3;\n$al1086 = L[113];\n// omitting isFunction check;\n$ans1085 = ast$lam688.$var.app(left732);\nbreak;\ncase 3: var anf_arg588 = $ans1085;\n$al1086 = L[110];\nvar anf_arg589 = G(right733,\"value\",L[110]);\n$step1074 = 4;\n$al1086 = L[112];\n// omitting isFunction check;\n$ans1085 = ast$srcloc718.$var.app(l729);\nbreak;\ncase 4: var anf_arg372 = $ans1085;\n$step1074 = 5;\n$al1086 = L[109];\nif(typeof(anf_fun587.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1086,anf_fun587);\n}\n$ans1085 = anf_fun587.app(anf_arg588,anf_arg589,anf_arg372);\nbreak;\ncase 5: var anf_arg374 = $ans1085;\n$step1074 = 6;\n$ans1085 = R.maybeMethodCall3(A33,\"s-app\",L[111],l729,anf_arg164,anf_arg374);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1085;\ndefault: R.ffi.throwSpinnakerError(L[106],$step1074);\n}\n}\nif($step1074 !== 6) {\n$ans1085.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1086,$temp_branch1072,$step1074,[$underscore1089],[anf_arg164,anf_fun587,anf_arg588,anf_arg589],$elidedFrames1088);\n}\nreturn $ans1085;\n};\n$ans734 = cases811.$app_fields($temp_branch1072,[false]);\nbreak;\ncase 28: if(cases811.$arity !== 1) {\nif(cases811.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[123],1,cases811.$arity,L[56],cases811.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[123],true,L[56],cases811.$loc);\n}\n}\n$step726 = 35;\n$al735 = L[123];\nvar $temp_branch1095 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__56($$underscore1105) {\nvar $step1098 = 0;\nvar $elidedFrames1104 = 0;\nvar $ans1101 = D;\nvar $al1102 = L[115];\nif(R.isAR($$underscore1105)) {\n$step1098 = $$underscore1105.step;\n$al1102 = $$underscore1105.from;\n$ans1101 = $$underscore1105.ans;\n$elidedFrames1104 = $$underscore1105.elidedFrames;\n$underscore1105 = $$underscore1105.args[0];\nanf_arg602 = $$underscore1105.vars[0];\nanf_fun1764 = $$underscore1105.vars[1];\nanf_arg379 = $$underscore1105.vars[2];\nanf_arg615 = $$underscore1105.vars[3];\n} else {\nvar $underscore1105 = $$underscore1105;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1101 = R.mC();\n}\nwhile(!R.isContinuation($ans1101)) {\nswitch($step1098) {\ncase 0: $step1098 = 1;\n$ans1101 = R.maybeMethodCall1(U21,\"checkers\",L[115],l729);\nbreak;\ncase 1: var anf_arg601 = $ans1101;\n$step1098 = 2;\n$ans1101 = R.maybeMethodCall3(A33,\"s-dot\",L[116],l729,anf_arg601,(\"check-raises-violates\"));\nbreak;\ncase 2: var anf_arg602 = $ans1101;\n$al1102 = L[118];\nvar anf_fun1764 = R.getMaker3(list11,(\"make3\"),L[117],L[118]);\n$step1098 = 3;\n$al1102 = L[122];\n// omitting isFunction check;\n$ans1101 = ast$lam688.$var.app(left732);\nbreak;\ncase 3: var anf_arg379 = $ans1101;\n$al1102 = L[119];\nvar anf_arg615 = G(right733,\"value\",L[119]);\n$step1098 = 4;\n$al1102 = L[121];\n// omitting isFunction check;\n$ans1101 = ast$srcloc718.$var.app(l729);\nbreak;\ncase 4: var anf_arg616 = $ans1101;\n$step1098 = 5;\n$al1102 = L[118];\nif(typeof(anf_fun1764.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1102,anf_fun1764);\n}\n$ans1101 = anf_fun1764.app(anf_arg379,anf_arg615,anf_arg616);\nbreak;\ncase 5: var anf_arg387 = $ans1101;\n$step1098 = 6;\n$ans1101 = R.maybeMethodCall3(A33,\"s-app\",L[120],l729,anf_arg602,anf_arg387);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1101;\ndefault: R.ffi.throwSpinnakerError(L[115],$step1098);\n}\n}\nif($step1098 !== 6) {\n$ans1101.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1102,$temp_branch1095,$step1098,[$underscore1105],[anf_arg602,anf_fun1764,anf_arg379,anf_arg615],$elidedFrames1104);\n}\nreturn $ans1101;\n};\n$ans734 = cases811.$app_fields($temp_branch1095,[false]);\nbreak;\ncase 29: $step726 = 30;\n$ans734 = R.maybeMethodCall0(op730,\"label\",L[124]);\nbreak;\ncase 30: var anf_arg380 = $ans734;\n$step726 = 31;\n$al735 = L[129];\n// omitting isFunction check;\n$ans734 = _plus5.app((\"Check test operator \"),anf_arg380);\nbreak;\ncase 31: var anf_arg630 = $ans734;\n$step726 = 32;\n$al735 = L[128];\n// omitting isFunction check;\n$ans734 = _plus5.app(anf_arg630,(\" not yet implemented at \"));\nbreak;\ncase 32: var anf_arg631 = $ans734;\n$step726 = 33;\n$al735 = L[127];\nif(typeof(torepr2.app) !== \"function\") {\nR.ffi.throwNonFunApp($al735,torepr2);\n}\n$ans734 = torepr2.app(l729);\nbreak;\ncase 33: var anf_arg389 = $ans734;\n$step726 = 34;\n$al735 = L[126];\n// omitting isFunction check;\n$ans734 = _plus5.app(anf_arg631,anf_arg389);\nbreak;\ncase 34: var anf_arg647 = $ans734;\n$step726 = 35;\n$al735 = L[125];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al735,raise1);\n}\n$ans734 = raise1.app(anf_arg647);\nbreak;\ncase 35: ++R.GAS;\nreturn $ans734;\ndefault: R.ffi.throwSpinnakerError(L[27],$step726);\n}\n}\nif($step726 !== 35) {\n$ans734.stack[R.EXN_STACKHEIGHT++] = R.mAR($al735,$temp_full727,$step726,[self337,l729,op730,refinement731,left732,right733],[cases811,cases812,cases834,check$refinement810,anf_arg631,check$op771],$elidedFrames737);\n}\nreturn $ans734;\n};\nvar anf_extend1174 = R.makeMethod5($temp_full727,\"s-check-test\");\nvar $temp_full1147 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__131($self921,$l588,$name1148,$body1149,$keyword$check1150) {\nvar $step1146 = 0;\nvar $elidedFrames1154 = 0;\nvar $ans1151 = D;\nvar $al1152 = L[131];\nif(R.isAR($self921)) {\n$step1146 = $self921.step;\n$al1152 = $self921.from;\n$ans1151 = $self921.ans;\n$elidedFrames1154 = $self921.elidedFrames;\nself921 = $self921.args[0];\nl588 = $self921.args[1];\nname1148 = $self921.args[2];\nbody1149 = $self921.args[3];\nkeyword$check1150 = $self921.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[131],5,$t,true);\n}\nvar self921 = $self921;\nvar l588 = $l588;\nvar name1148 = $name1148;\nvar body1149 = $body1149;\nvar keyword$check1150 = $keyword$check1150;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1151 = R.mC();\n}\nwhile(!R.isContinuation($ans1151)) {\nswitch($step1146) {\ncase 0: $step1146 = 1;\n$ans1151 = R.maybeMethodCall1(body1149,\"visit\",L[132],self921);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1151;\ndefault: R.ffi.throwSpinnakerError(L[131],$step1146);\n}\n}\nif($step1146 !== 1) {\n$ans1151.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1152,$temp_full1147,$step1146,[self921,l588,name1148,body1149,keyword$check1150],[],$elidedFrames1154);\n}\nreturn $ans1151;\n};\nvar anf_extend1175 = R.makeMethod4($temp_full1147,\"s-check\");\nvar check$stmts$visitor1221 = R.extendObj(L[133],anf_extend1173,{\"s-check-test\":anf_extend1174,\n\"s-check\":anf_extend1175});\nvar get$checks1873 = {\"$var\":D};\nvar create$check$block1945 = {\"$var\":D};\nvar make$lam1899 = {\"$var\":D};\nvar $temp_lam1177 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__134($stmts1178) {\nvar $step1176 = 0;\nvar $elidedFrames1188 = 0;\nvar $ans1185 = D;\nvar $al1186 = L[134];\nif(R.isAR($stmts1178)) {\n$step1176 = $stmts1178.step;\n$al1186 = $stmts1178.from;\n$ans1185 = $stmts1178.ans;\n$elidedFrames1188 = $stmts1178.elidedFrames;\nstmts1178 = $stmts1178.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[134],1,$t,false);\n}\nvar stmts1178 = $stmts1178;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1185 = R.mC();\n}\nwhile(!R.isContinuation($ans1185)) {\nswitch($step1176) {\ncase 0: var standalone$counter1537 = {\"$var\":(0)};\nvar add$check1223 = {\"$var\":D};\nvar $temp_lam1203 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__135($stmts1204) {\nvar $step1202 = 0;\nvar $elidedFrames1213 = 0;\nvar $ans1210 = D;\nvar $al1211 = L[135];\nif(R.isAR($stmts1204)) {\n$step1202 = $stmts1204.step;\n$al1211 = $stmts1204.from;\n$ans1210 = $stmts1204.ans;\n$elidedFrames1213 = $stmts1204.elidedFrames;\nstmts1204 = $stmts1204.args[0];\ncases1215 = $stmts1204.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[135],1,$t,false);\n}\nvar stmts1204 = $stmts1204;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1210 = R.mC();\n}\nwhile(!R.isContinuation($ans1210)) {\nswitch($step1202) {\ncase 0: var cases1215 = stmts1204;\n$step1202 = 1;\n$al1211 = L[169];\nvar $ann$check1869 = R._cA(L[169],List13,cases1215);\nif(R.isContinuation($ann$check1869)) {\n$ans1210 = $ann$check1869;\n}\nbreak;\ncase 1: $al1211 = L[137];\n$step1202 = $cases_dispatch1858[cases1215.$name] || 4;\nbreak;\ncase 2: if(cases1215.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[136],false,L[137],cases1215.$loc);\n}\n$step1202 = 5;\n$ans1210 = empty10;\nbreak;\ncase 3: if(cases1215.$arity !== 2) {\nif(cases1215.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[168],2,cases1215.$arity,L[137],cases1215.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[168],true,L[137],cases1215.$loc);\n}\n}\n$step1202 = 5;\n$al1211 = L[168];\nvar $temp_branch1679 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__137($stmt1216,$rest1224) {\nvar $step1688 = 0;\nvar $elidedFrames1695 = 0;\nvar $ans1692 = D;\nvar $al1693 = L[146];\nif(R.isAR($stmt1216)) {\n$step1688 = $stmt1216.step;\n$al1693 = $stmt1216.from;\n$ans1692 = $stmt1216.ans;\n$elidedFrames1695 = $stmt1216.elidedFrames;\nstmt1216 = $stmt1216.args[0];\nrest1224 = $stmt1216.args[1];\ncases1217 = $stmt1216.vars[0];\n} else {\nvar stmt1216 = $stmt1216;\nvar rest1224 = $rest1224;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1692 = R.mC();\n}\nwhile(!R.isContinuation($ans1692)) {\nswitch($step1688) {\ncase 0: var cases1217 = stmt1216;\n$step1688 = 1;\n$al1693 = L[166];\nvar $ann$check1855 = R._cA(L[166],R.gDA(L[166],\"A\",A25,\"Expr\"),cases1217);\nif(R.isContinuation($ann$check1855)) {\n$ans1692 = $ann$check1855;\n}\nbreak;\ncase 1: $al1693 = L[146];\n$step1688 = $cases_dispatch1854[cases1217.$name] || 5;\nbreak;\ncase 2: if(cases1217.$arity !== 10) {\nif(cases1217.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[145],10,cases1217.$arity,L[146],cases1217.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[145],true,L[146],cases1217.$loc);\n}\n}\n$step1688 = 6;\n$al1693 = L[145];\nvar $temp_branch1718 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__146($l533,$name1222,$$underscore1394,$$underscore1395,$$underscore1216,$$underscore1396,$$underscore904,$$underscore1270,$_check1218,$$underscore1274) {\nvar $step1719 = 0;\nvar $elidedFrames1725 = 0;\nvar $ans1722 = D;\nvar $al1723 = L[141];\nif(R.isAR($l533)) {\n$step1719 = $l533.step;\n$al1723 = $l533.from;\n$ans1722 = $l533.ans;\n$elidedFrames1725 = $l533.elidedFrames;\nl533 = $l533.args[0];\nname1222 = $l533.args[1];\n$underscore1394 = $l533.args[2];\n$underscore1395 = $l533.args[3];\n$underscore1216 = $l533.args[4];\n$underscore1396 = $l533.args[5];\n$underscore904 = $l533.args[6];\n$underscore1270 = $l533.args[7];\n_check1218 = $l533.args[8];\n$underscore1274 = $l533.args[9];\ncases1219 = $l533.vars[0];\nanf_arg657 = $l533.vars[1];\n} else {\nvar l533 = $l533;\nvar name1222 = $name1222;\nvar $underscore1394 = $$underscore1394;\nvar $underscore1395 = $$underscore1395;\nvar $underscore1216 = $$underscore1216;\nvar $underscore1396 = $$underscore1396;\nvar $underscore904 = $$underscore904;\nvar $underscore1270 = $$underscore1270;\nvar _check1218 = $_check1218;\nvar $underscore1274 = $$underscore1274;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1722 = R.mC();\n}\nwhile(!R.isContinuation($ans1722)) {\nswitch($step1719) {\ncase 0: var cases1219 = _check1218;\n$step1719 = 1;\n$al1723 = L[143];\nvar $ann$check1751 = R._cA(L[143],Option18,cases1219);\nif(R.isContinuation($ann$check1751)) {\n$ans1722 = $ann$check1751;\n}\nbreak;\ncase 1: $al1723 = L[141];\n$step1719 = $cases_dispatch1750[cases1219.$name] || 6;\nbreak;\ncase 2: if(cases1219.$arity !== 1) {\nif(cases1219.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[140],1,cases1219.$arity,L[141],cases1219.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[140],true,L[141],cases1219.$loc);\n}\n}\nvar $fn1749 = cases1219.$constructor.$fieldNames;\nvar v1220 = R.dF(cases1219.dict[$fn1749[0]],cases1219.$mut_fields_mask[0],false);\n$step1719 = 3;\n$ans1722 = R.maybeMethodCall1(v1220,\"visit\",L[138],check$stmts$visitor1221);\nbreak;\ncase 3: var anf_arg408 = $ans1722;\n// caller optimization;\n$ans1722 = check$info636.$var.app(l533,name1222,anf_arg408,(true));\nvar anf_arg657 = $ans1722;\n$step1719 = 4;\n$al1723 = L[139];\n// omitting isFunction check;\n$ans1722 = add$check1223.$var.app(rest1224);\nbreak;\ncase 4: var anf_arg658 = $ans1722;\n// caller optimization;\n$ans1722 = link19.app(anf_arg657,anf_arg658);\n$step1719 = 7;\nbreak;\ncase 5: if(cases1219.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[142],false,L[141],cases1219.$loc);\n}\n$step1719 = 7;\n$al1723 = L[144];\n// omitting isFunction check;\n$ans1722 = add$check1223.$var.app(rest1224);\nbreak;\ncase 6: $step1719 = 7;\n$al1723 = L[141];\n$ans1722 = R.throwNoCasesMatched(L[141],cases1219);\nbreak;\ncase 7: ++R.GAS;\nreturn $ans1722;\ndefault: R.ffi.throwSpinnakerError(L[141],$step1719);\n}\n}\nif($step1719 !== 7) {\n$ans1722.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1723,$temp_branch1718,$step1719,[l533,name1222,$underscore1394,$underscore1395,$underscore1216,$underscore1396,$underscore904,$underscore1270,_check1218,$underscore1274],[cases1219,anf_arg657],$elidedFrames1725);\n}\nreturn $ans1722;\n};\n$ans1692 = cases1217.$app_fields($temp_branch1718,[false,false,false,false,false,false,false,false,false,false]);\nbreak;\ncase 3: if(cases1217.$arity !== 8) {\nif(cases1217.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[154],8,cases1217.$arity,L[146],cases1217.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[154],true,L[146],cases1217.$loc);\n}\n}\n$step1688 = 6;\n$al1693 = L[154];\nvar $temp_branch1764 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__146($l1333,$name1414,$$underscore1280,$$underscore1281,$$underscore1284,$$underscore1285,$$underscore1449,$_check1412) {\nvar $step1767 = 0;\nvar $elidedFrames1772 = 0;\nvar $ans1769 = D;\nvar $al1770 = L[150];\nif(R.isAR($l1333)) {\n$step1767 = $l1333.step;\n$al1770 = $l1333.from;\n$ans1769 = $l1333.ans;\n$elidedFrames1772 = $l1333.elidedFrames;\nl1333 = $l1333.args[0];\nname1414 = $l1333.args[1];\n$underscore1280 = $l1333.args[2];\n$underscore1281 = $l1333.args[3];\n$underscore1284 = $l1333.args[4];\n$underscore1285 = $l1333.args[5];\n$underscore1449 = $l1333.args[6];\n_check1412 = $l1333.args[7];\ncases1413 = $l1333.vars[0];\nanf_arg446 = $l1333.vars[1];\n} else {\nvar l1333 = $l1333;\nvar name1414 = $name1414;\nvar $underscore1280 = $$underscore1280;\nvar $underscore1281 = $$underscore1281;\nvar $underscore1284 = $$underscore1284;\nvar $underscore1285 = $$underscore1285;\nvar $underscore1449 = $$underscore1449;\nvar _check1412 = $_check1412;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1769 = R.mC();\n}\nwhile(!R.isContinuation($ans1769)) {\nswitch($step1767) {\ncase 0: var cases1413 = _check1412;\n$step1767 = 1;\n$al1770 = L[152];\nvar $ann$check1777 = R._cA(L[152],Option18,cases1413);\nif(R.isContinuation($ann$check1777)) {\n$ans1769 = $ann$check1777;\n}\nbreak;\ncase 1: $al1770 = L[150];\n$step1767 = $cases_dispatch1775[cases1413.$name] || 6;\nbreak;\ncase 2: if(cases1413.$arity !== 1) {\nif(cases1413.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[149],1,cases1413.$arity,L[150],cases1413.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[149],true,L[150],cases1413.$loc);\n}\n}\nvar $fn1774 = cases1413.$constructor.$fieldNames;\nvar v684 = R.dF(cases1413.dict[$fn1774[0]],cases1413.$mut_fields_mask[0],false);\n$step1767 = 3;\n$ans1769 = R.maybeMethodCall1(v684,\"visit\",L[147],check$stmts$visitor1221);\nbreak;\ncase 3: var anf_arg659 = $ans1769;\n// caller optimization;\n$ans1769 = check$info636.$var.app(l1333,name1414,anf_arg659,(true));\nvar anf_arg446 = $ans1769;\n$step1767 = 4;\n$al1770 = L[148];\n// omitting isFunction check;\n$ans1769 = add$check1223.$var.app(rest1224);\nbreak;\ncase 4: var anf_arg423 = $ans1769;\n// caller optimization;\n$ans1769 = link19.app(anf_arg446,anf_arg423);\n$step1767 = 7;\nbreak;\ncase 5: if(cases1413.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[151],false,L[150],cases1413.$loc);\n}\n$step1767 = 7;\n$al1770 = L[153];\n// omitting isFunction check;\n$ans1769 = add$check1223.$var.app(rest1224);\nbreak;\ncase 6: $step1767 = 7;\n$al1770 = L[150];\n$ans1769 = R.throwNoCasesMatched(L[150],cases1413);\nbreak;\ncase 7: ++R.GAS;\nreturn $ans1769;\ndefault: R.ffi.throwSpinnakerError(L[150],$step1767);\n}\n}\nif($step1767 !== 7) {\n$ans1769.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1770,$temp_branch1764,$step1767,[l1333,name1414,$underscore1280,$underscore1281,$underscore1284,$underscore1285,$underscore1449,_check1412],[cases1413,anf_arg446],$elidedFrames1772);\n}\nreturn $ans1769;\n};\n$ans1692 = cases1217.$app_fields($temp_branch1764,[false,false,false,false,false,false,false,false]);\nbreak;\ncase 4: if(cases1217.$arity !== 4) {\nif(cases1217.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[165],4,cases1217.$arity,L[146],cases1217.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[165],true,L[146],cases1217.$loc);\n}\n}\n$step1688 = 6;\n$al1693 = L[165];\nvar $temp_branch1820 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__146($l33,$name859,$body893,$keyword$check1536) {\nvar $step1821 = 0;\nvar $elidedFrames1825 = 0;\nvar $ans1822 = D;\nvar $al1823 = L[162];\nif(R.isAR($l33)) {\n$step1821 = $l33.step;\n$al1823 = $l33.from;\n$ans1822 = $l33.ans;\n$elidedFrames1825 = $l33.elidedFrames;\nl33 = $l33.args[0];\nname859 = $l33.args[1];\nbody893 = $l33.args[2];\nkeyword$check1536 = $l33.args[3];\nanf_arg683 = $l33.vars[0];\ncheck$name1535 = $l33.vars[1];\ncases1534 = $l33.vars[2];\n} else {\nvar l33 = $l33;\nvar name859 = $name859;\nvar body893 = $body893;\nvar keyword$check1536 = $keyword$check1536;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1822 = R.mC();\n}\nwhile(!R.isContinuation($ans1822)) {\nswitch($step1821) {\ncase 0: var cases1534 = name859;\n$step1821 = 1;\n$al1823 = L[164];\nvar $ann$check1852 = R._cA(L[164],Option18,cases1534);\nif(R.isContinuation($ann$check1852)) {\n$ans1822 = $ann$check1852;\n}\nbreak;\ncase 1: $al1823 = L[162];\n$step1821 = $cases_dispatch1842[cases1534.$name] || 4;\nbreak;\ncase 2: if(cases1534.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[161],false,L[162],cases1534.$loc);\n}\n$step1821 = 5;\n$al1823 = L[161];\nvar $temp_branch1826 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__162($$resumer14) {\nvar $step1827 = 0;\nvar $elidedFrames1831 = 0;\nvar $ans1828 = D;\nvar $al1829 = L[160];\nif(R.isAR($$resumer14)) {\n$step1827 = $$resumer14.step;\n$al1829 = $$resumer14.from;\n$ans1828 = $$resumer14.ans;\n$elidedFrames1831 = $$resumer14.elidedFrames;\n$resumer14 = $$resumer14.args[0];\nanf_arg671 = $$resumer14.vars[0];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1828 = R.mC();\n}\nwhile(!R.isContinuation($ans1828)) {\nswitch($step1827) {\ncase 0: var anf_arg669 = standalone$counter1537.$var;\n$step1827 = 1;\n$al1829 = L[159];\n// omitting isFunction check;\n$ans1828 = _plus5.app(anf_arg669,(1));\nbreak;\ncase 1: var anf_assign343 = $ans1828;\nstandalone$counter1537.$var = anf_assign343;\nR.nothing;\n$step1827 = R.checkPyretTrue(keyword$check1536)?2:3;\nbreak;\ncase 2: $step1827 = 4;\n$ans1828 = (\"check-block-\");\nbreak;\ncase 3: $step1827 = 4;\n$ans1828 = (\"examples-block-\");\nbreak;\ncase 4: var anf_arg671 = $ans1828;\nvar anf_arg1837 = standalone$counter1537.$var;\n$step1827 = 5;\n$al1829 = L[158];\nif(typeof(tostring1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1829,tostring1);\n}\n$ans1828 = tostring1.app(anf_arg1837);\nbreak;\ncase 5: var anf_arg428 = $ans1828;\n$step1827 = 6;\n$al1829 = L[157];\n// omitting isFunction check;\n$ans1828 = _plus5.app(anf_arg671,anf_arg428);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1828;\ndefault: R.ffi.throwSpinnakerError(L[160],$step1827);\n}\n}\nif($step1827 !== 6) {\n$ans1828.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1829,$temp_branch1826,$step1827,[],[anf_arg671],$elidedFrames1831);\n}\nreturn $ans1828;\n};\n$ans1822 = cases1534.$app_fields($temp_branch1826,[]);\nbreak;\ncase 3: if(cases1534.$arity !== 1) {\nif(cases1534.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[163],1,cases1534.$arity,L[162],cases1534.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[163],true,L[162],cases1534.$loc);\n}\n}\nvar $fn1841 = cases1534.$constructor.$fieldNames;\nvar v1580 = R.dF(cases1534.dict[$fn1841[0]],cases1534.$mut_fields_mask[0],false);\n$step1821 = 5;\n$ans1822 = v1580;\nbreak;\ncase 4: $step1821 = 5;\n$al1823 = L[162];\n$ans1822 = R.throwNoCasesMatched(L[162],cases1534);\nbreak;\ncase 5: var check$name1535 = $ans1822;\n$step1821 = 6;\n$ans1822 = R.maybeMethodCall1(body893,\"visit\",L[155],check$stmts$visitor1221);\nbreak;\ncase 6: var anf_arg682 = $ans1822;\n// caller optimization;\n$ans1822 = check$info636.$var.app(l33,check$name1535,anf_arg682,keyword$check1536);\nvar anf_arg683 = $ans1822;\n$step1821 = 7;\n$al1823 = L[156];\n// omitting isFunction check;\n$ans1822 = add$check1223.$var.app(rest1224);\nbreak;\ncase 7: var anf_arg684 = $ans1822;\n// caller optimization;\n$ans1822 = link19.app(anf_arg683,anf_arg684);\n$step1821 = 8;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1822;\ndefault: R.ffi.throwSpinnakerError(L[162],$step1821);\n}\n}\nif($step1821 !== 8) {\n$ans1822.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1823,$temp_branch1820,$step1821,[l33,name859,body893,keyword$check1536],[anf_arg683,check$name1535,cases1534],$elidedFrames1825);\n}\nreturn $ans1822;\n};\n$ans1692 = cases1217.$app_fields($temp_branch1820,[false,false,false,false]);\nbreak;\ncase 5: $step1688 = 6;\n$al1693 = L[167];\n// omitting isFunction check;\n$ans1692 = add$check1223.$var.app(rest1224);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1692;\ndefault: R.ffi.throwSpinnakerError(L[146],$step1688);\n}\n}\nif($step1688 !== 6) {\n$ans1692.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1693,$temp_branch1679,$step1688,[stmt1216,rest1224],[cases1217],$elidedFrames1695);\n}\nreturn $ans1692;\n};\n$ans1210 = cases1215.$app_fields($temp_branch1679,[false,false]);\nbreak;\ncase 4: $step1202 = 5;\n$al1211 = L[137];\n$ans1210 = R.throwNoCasesMatched(L[137],cases1215);\nbreak;\ncase 5: ++R.GAS;\nreturn $ans1210;\ndefault: R.ffi.throwSpinnakerError(L[135],$step1202);\n}\n}\nif($step1202 !== 5) {\n$ans1210.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1211,$temp_lam1203,$step1202,[stmts1204],[cases1215],$elidedFrames1213);\n}\nreturn $ans1210;\n};\nvar anf_assign369 = R.mF($temp_lam1203,\"add-check\");\nadd$check1223.$var = anf_assign369;\nR.nothing;\n$step1176 = 1;\n$al1186 = L[170];\n// omitting isFunction check;\n$ans1185 = add$check1223.$var.app(stmts1178);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1185;\ndefault: R.ffi.throwSpinnakerError(L[134],$step1176);\n}\n}\nif($step1176 !== 1) {\n$ans1185.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1186,$temp_lam1177,$step1176,[stmts1178],[],$elidedFrames1188);\n}\nreturn $ans1185;\n};\nvar anf_assign371 = R.mF($temp_lam1177,\"get-checks\");\nget$checks1873.$var = anf_assign371;\nR.nothing;\nvar $temp_lam1879 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__171($l1880,$checks1881) {\nvar $step1878 = 0;\nvar $elidedFrames1889 = 0;\nvar $ans1886 = D;\nvar $al1887 = L[171];\nif(R.isAR($l1880)) {\n$step1878 = $l1880.step;\n$al1887 = $l1880.from;\n$ans1886 = $l1880.ans;\n$elidedFrames1889 = $l1880.elidedFrames;\nl1880 = $l1880.args[0];\nchecks1881 = $l1880.args[1];\nanf_fun1973 = $l1880.vars[0];\nanf_arg480 = $l1880.vars[1];\nanf_arg762 = $l1880.vars[2];\nanf_fun470 = $l1880.vars[3];\nanf_arg748 = $l1880.vars[4];\ncheckers1931 = $l1880.vars[5];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[171],2,$t,false);\n}\nvar l1880 = $l1880;\nvar checks1881 = $checks1881;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1886 = R.mC();\n}\nwhile(!R.isContinuation($ans1886)) {\nswitch($step1878) {\ncase 0: var create$checker1930 = {\"$var\":D};\nvar $temp_lam1891 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__172($c1892) {\nvar $step1890 = 0;\nvar $elidedFrames1897 = 0;\nvar $ans1894 = D;\nvar $al1895 = L[172];\nif(R.isAR($c1892)) {\n$step1890 = $c1892.step;\n$al1895 = $c1892.from;\n$ans1894 = $c1892.ans;\n$elidedFrames1897 = $c1892.elidedFrames;\nc1892 = $c1892.args[0];\ncases1898 = $c1892.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[172],1,$t,false);\n}\nvar c1892 = $c1892;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1894 = R.mC();\n}\nwhile(!R.isContinuation($ans1894)) {\nswitch($step1890) {\ncase 0: var cases1898 = c1892;\n$step1890 = 1;\n$al1895 = L[192];\nvar $ann$check1927 = R._cA(L[192],CheckInfo1925,cases1898);\nif(R.isContinuation($ann$check1927)) {\n$ans1894 = $ann$check1927;\n}\nbreak;\ncase 1: $al1895 = L[191];\n$step1890 = $cases_dispatch1924[cases1898.$name] || 3;\nbreak;\ncase 2: if(cases1898.$arity !== 4) {\nif(cases1898.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[190],4,cases1898.$arity,L[191],cases1898.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[190],true,L[191],cases1898.$loc);\n}\n}\n$step1890 = 4;\n$al1895 = L[190];\nvar $temp_branch1905 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__191($l21900,$name677,$body1901,$keyword$check1903) {\nvar $step1912 = 0;\nvar $elidedFrames1918 = 0;\nvar $ans1915 = D;\nvar $al1916 = L[173];\nif(R.isAR($l21900)) {\n$step1912 = $l21900.step;\n$al1916 = $l21900.from;\n$ans1915 = $l21900.ans;\n$elidedFrames1918 = $l21900.elidedFrames;\nl21900 = $l21900.args[0];\nname677 = $l21900.args[1];\nbody1901 = $l21900.args[2];\nkeyword$check1903 = $l21900.args[3];\nanf_fun1904 = $l21900.vars[0];\nanf_arg711 = $l21900.vars[1];\nanf_arg712 = $l21900.vars[2];\nanf_arg899 = $l21900.vars[3];\nanf_fun433 = $l21900.vars[4];\ncheck$fun1902 = $l21900.vars[5];\nanf_fun726 = $l21900.vars[6];\n} else {\nvar l21900 = $l21900;\nvar name677 = $name677;\nvar body1901 = $body1901;\nvar keyword$check1903 = $keyword$check1903;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1915 = R.mC();\n}\nwhile(!R.isContinuation($ans1915)) {\nswitch($step1912) {\ncase 0: var anf_fun433 = make$lam1899.$var === D?U(L[173],\"make-lam\"):make$lam1899.$var;\n$al1916 = L[175];\nvar anf_fun1842 = R.getMaker0(list11,(\"make0\"),L[174],L[175]);\n$step1912 = 1;\n$al1916 = L[175];\nif(typeof(anf_fun1842.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1916,anf_fun1842);\n}\n$ans1915 = anf_fun1842.app();\nbreak;\ncase 1: var anf_arg698 = $ans1915;\n$step1912 = 2;\n$al1916 = L[189];\nif(typeof(anf_fun433.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1916,anf_fun433);\n}\n$ans1915 = anf_fun433.app(l21900,anf_arg698,body1901);\nbreak;\ncase 2: var check$fun1902 = $ans1915;\n$al1916 = L[177];\nvar anf_fun1904 = R.getMaker4(list11,(\"make4\"),L[176],L[177]);\n$step1912 = 3;\n$ans1915 = R.maybeMethodCall2(A33,\"s-str\",L[178],l21900,name677);\nbreak;\ncase 3: var anf_arg1922 = $ans1915;\n$step1912 = 4;\n$ans1915 = R.maybeMethodCall3(A33,\"s-data-field\",L[179],l21900,(\"name\"),anf_arg1922);\nbreak;\ncase 4: var anf_arg711 = $ans1915;\n$step1912 = 5;\n$ans1915 = R.maybeMethodCall3(A33,\"s-data-field\",L[180],l21900,(\"run\"),check$fun1902);\nbreak;\ncase 5: var anf_arg712 = $ans1915;\n$step1912 = 6;\n$ans1915 = R.maybeMethodCall2(A33,\"s-bool\",L[181],l21900,keyword$check1903);\nbreak;\ncase 6: var anf_arg713 = $ans1915;\n$step1912 = 7;\n$ans1915 = R.maybeMethodCall3(A33,\"s-data-field\",L[182],l21900,(\"keyword-check\"),anf_arg713);\nbreak;\ncase 7: var anf_arg899 = $ans1915;\n$al1916 = L[184];\nvar anf_fun726 = R.getMaker1(list11,(\"make1\"),L[183],L[184]);\n$step1912 = 8;\n$ans1915 = R.maybeMethodCall2(A33,\"s-srcloc\",L[185],l21900,l21900);\nbreak;\ncase 8: var anf_arg727 = $ans1915;\n$step1912 = 9;\n$al1916 = L[184];\nif(typeof(anf_fun726.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1916,anf_fun726);\n}\n$ans1915 = anf_fun726.app(anf_arg727);\nbreak;\ncase 9: var anf_arg728 = $ans1915;\n$step1912 = 10;\n$ans1915 = R.maybeMethodCall4(A33,\"s-prim-app\",L[186],l21900,(\"makeSrcloc\"),anf_arg728,flat$prim$app700);\nbreak;\ncase 10: var anf_arg729 = $ans1915;\n$step1912 = 11;\n$ans1915 = R.maybeMethodCall3(A33,\"s-data-field\",L[187],l21900,(\"location\"),anf_arg729);\nbreak;\ncase 11: var anf_arg464 = $ans1915;\n$step1912 = 12;\n$al1916 = L[177];\nif(typeof(anf_fun1904.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1916,anf_fun1904);\n}\n$ans1915 = anf_fun1904.app(anf_arg711,anf_arg712,anf_arg899,anf_arg464);\nbreak;\ncase 12: var anf_arg933 = $ans1915;\n$step1912 = 13;\n$ans1915 = R.maybeMethodCall2(A33,\"s-obj\",L[188],l21900,anf_arg933);\nbreak;\ncase 13: ++R.GAS;\nreturn $ans1915;\ndefault: R.ffi.throwSpinnakerError(L[173],$step1912);\n}\n}\nif($step1912 !== 13) {\n$ans1915.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1916,$temp_branch1905,$step1912,[l21900,name677,body1901,keyword$check1903],[anf_fun1904,anf_arg711,anf_arg712,anf_arg899,anf_fun433,check$fun1902,anf_fun726],$elidedFrames1918);\n}\nreturn $ans1915;\n};\n$ans1894 = cases1898.$app_fields($temp_branch1905,[false,false,false,false]);\nbreak;\ncase 3: $step1890 = 4;\n$al1895 = L[191];\n$ans1894 = R.throwNoCasesMatched(L[191],cases1898);\nbreak;\ncase 4: ++R.GAS;\nreturn $ans1894;\ndefault: R.ffi.throwSpinnakerError(L[172],$step1890);\n}\n}\nif($step1890 !== 4) {\n$ans1894.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1895,$temp_lam1891,$step1890,[c1892],[cases1898],$elidedFrames1897);\n}\nreturn $ans1894;\n};\nvar anf_assign508 = R.mF($temp_lam1891,\"create-checker\");\ncreate$checker1930.$var = anf_assign508;\nR.nothing;\n$step1878 = 1;\n$ans1886 = R.maybeMethodCall1(checks1881,\"map\",L[193],create$checker1930.$var);\nbreak;\ncase 1: var checkers1931 = $ans1886;\n$al1887 = L[195];\nvar anf_fun470 = R.getMaker1(list11,(\"make1\"),L[194],L[195]);\n$step1878 = 2;\n$ans1886 = R.maybeMethodCall1(U21,\"checkers\",L[196],l1880);\nbreak;\ncase 2: var anf_arg745 = $ans1886;\n$step1878 = 3;\n$ans1886 = R.maybeMethodCall3(A33,\"s-dot\",L[197],l1880,anf_arg745,(\"run-checks\"));\nbreak;\ncase 3: var anf_arg748 = $ans1886;\n$al1887 = L[199];\nvar anf_fun1973 = R.getMaker2(list11,(\"make2\"),L[198],L[199]);\n$al1887 = L[200];\nvar anf_arg1179 = G(l1880,\"source\",L[200]);\n$step1878 = 4;\n$ans1886 = R.maybeMethodCall2(A33,\"s-str\",L[201],l1880,anf_arg1179);\nbreak;\ncase 4: var anf_arg762 = $ans1886;\n$al1887 = L[202];\nvar anf_arg480 = G(A33,\"s-construct-normal\",L[202]);\n$step1878 = 5;\n$ans1886 = R.maybeMethodCall2(A33,\"s-name\",L[203],l1880,(\"list\"));\nbreak;\ncase 5: var anf_arg760 = $ans1886;\n$step1878 = 6;\n$ans1886 = R.maybeMethodCall2(A33,\"s-id\",L[204],l1880,anf_arg760);\nbreak;\ncase 6: var anf_arg763 = $ans1886;\n$step1878 = 7;\n$ans1886 = R.maybeMethodCall4(A33,\"s-construct\",L[205],l1880,anf_arg480,anf_arg763,checkers1931);\nbreak;\ncase 7: var anf_arg481 = $ans1886;\n$step1878 = 8;\n$al1887 = L[199];\nif(typeof(anf_fun1973.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1887,anf_fun1973);\n}\n$ans1886 = anf_fun1973.app(anf_arg762,anf_arg481);\nbreak;\ncase 8: var anf_arg1263 = $ans1886;\n$step1878 = 9;\n$ans1886 = R.maybeMethodCall3(A33,\"s-app\",L[206],l1880,anf_arg748,anf_arg1263);\nbreak;\ncase 9: var anf_arg777 = $ans1886;\n$step1878 = 10;\n$al1887 = L[195];\nif(typeof(anf_fun470.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1887,anf_fun470);\n}\n$ans1886 = anf_fun470.app(anf_arg777);\nbreak;\ncase 10: var anf_arg482 = $ans1886;\n$step1878 = 11;\n$ans1886 = R.maybeMethodCall2(A33,\"s-block\",L[207],l1880,anf_arg482);\nbreak;\ncase 11: ++R.GAS;\nreturn $ans1886;\ndefault: R.ffi.throwSpinnakerError(L[171],$step1878);\n}\n}\nif($step1878 !== 11) {\n$ans1886.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1887,$temp_lam1879,$step1878,[l1880,checks1881],[anf_fun1973,anf_arg480,anf_arg762,anf_fun470,anf_arg748,checkers1931],$elidedFrames1889);\n}\nreturn $ans1886;\n};\nvar anf_assign1944 = R.mF($temp_lam1879,\"create-check-block\");\ncreate$check$block1945.$var = anf_assign1944;\nR.nothing;\nvar $temp_lam1948 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__208($l1949,$args1950,$body1951) {\nvar $step1947 = 0;\nvar $elidedFrames1955 = 0;\nvar $ans1952 = D;\nvar $al1953 = L[208];\nif(R.isAR($l1949)) {\n$step1947 = $l1949.step;\n$al1953 = $l1949.from;\n$ans1952 = $l1949.ans;\n$elidedFrames1955 = $l1949.elidedFrames;\nl1949 = $l1949.args[0];\nargs1950 = $l1949.args[1];\nbody1951 = $l1949.args[2];\nanf_arg483 = $l1949.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[208],3,$t,false);\n}\nvar l1949 = $l1949;\nvar args1950 = $args1950;\nvar body1951 = $body1951;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1952 = R.mC();\n}\nwhile(!R.isContinuation($ans1952)) {\nswitch($step1947) {\ncase 0: $al1953 = L[210];\nvar anf_fun1956 = R.getMaker0(list11,(\"make0\"),L[209],L[210]);\n$step1947 = 1;\n$al1953 = L[210];\nif(typeof(anf_fun1956.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1953,anf_fun1956);\n}\n$ans1952 = anf_fun1956.app();\nbreak;\ncase 1: var anf_arg483 = $ans1952;\nvar $temp_lam1961 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__211($sym1962) {\nvar $step1960 = 0;\nvar $elidedFrames1966 = 0;\nvar $ans1963 = D;\nvar $al1964 = L[211];\nif(R.isAR($sym1962)) {\n$step1960 = $sym1962.step;\n$al1964 = $sym1962.from;\n$ans1963 = $sym1962.ans;\n$elidedFrames1966 = $sym1962.elidedFrames;\nsym1962 = $sym1962.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[211],1,$t,false);\n}\nvar sym1962 = $sym1962;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1963 = R.mC();\n}\nwhile(!R.isContinuation($ans1963)) {\nswitch($step1960) {\ncase 0: $al1964 = L[212];\nvar anf_arg487 = G(A33,\"a-blank\",L[212]);\n$step1960 = 1;\n$ans1963 = R.maybeMethodCall4(A33,\"s-bind\",L[213],l1949,(false),sym1962,anf_arg487);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1963;\ndefault: R.ffi.throwSpinnakerError(L[211],$step1960);\n}\n}\nif($step1960 !== 1) {\n$ans1963.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1964,$temp_lam1961,$step1960,[sym1962],[],$elidedFrames1966);\n}\nreturn $ans1963;\n};\nvar anf_arg792 = R.mF($temp_lam1961,\"\");\n$step1947 = 2;\n$ans1952 = R.maybeMethodCall1(args1950,\"map\",L[214],anf_arg792);\nbreak;\ncase 2: var anf_arg495 = $ans1952;\n$al1953 = L[215];\nvar anf_arg790 = G(A33,\"a-blank\",L[215]);\n$step1947 = 3;\n$ans1952 = R.maybeMethodCall(A33,\"s-lam\",L[216],l1949,(\"\"),anf_arg483,anf_arg495,anf_arg790,(\"\"),body1951,none14,none14,(true));\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1952;\ndefault: R.ffi.throwSpinnakerError(L[208],$step1947);\n}\n}\nif($step1947 !== 3) {\n$ans1952.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1953,$temp_lam1948,$step1947,[l1949,args1950,body1951],[anf_arg483],$elidedFrames1955);\n}\nreturn $ans1952;\n};\nvar anf_assign1984 = R.mF($temp_lam1948,\"make-lam\");\nmake$lam1899.$var = anf_assign1984;\nR.nothing;\n$al619 = L[217];\nvar anf_extend2093 = G(A33,\"default-map-visitor\",L[217]);\nvar $temp_full1997 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__218($self1166,$l965,$stmts708) {\nvar $step1996 = 0;\nvar $elidedFrames2004 = 0;\nvar $ans2001 = D;\nvar $al2002 = L[218];\nif(R.isAR($self1166)) {\n$step1996 = $self1166.step;\n$al2002 = $self1166.from;\n$ans2001 = $self1166.ans;\n$elidedFrames2004 = $self1166.elidedFrames;\nself1166 = $self1166.args[0];\nl965 = $self1166.args[1];\nstmts708 = $self1166.args[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[218],3,$t,true);\n}\nvar self1166 = $self1166;\nvar l965 = $l965;\nvar stmts708 = $stmts708;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2001 = R.mC();\n}\nwhile(!R.isContinuation($ans2001)) {\nswitch($step1996) {\ncase 0: var $temp_lam2006 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__219($acc2007,$stmt2008) {\nvar $step2005 = 0;\nvar $elidedFrames2012 = 0;\nvar $ans2009 = D;\nvar $al2010 = L[219];\nif(R.isAR($acc2007)) {\n$step2005 = $acc2007.step;\n$al2010 = $acc2007.from;\n$ans2009 = $acc2007.ans;\n$elidedFrames2012 = $acc2007.elidedFrames;\nacc2007 = $acc2007.args[0];\nstmt2008 = $acc2007.args[1];\nnew$stmt2013 = $acc2007.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[219],2,$t,false);\n}\nvar acc2007 = $acc2007;\nvar stmt2008 = $stmt2008;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2009 = R.mC();\n}\nwhile(!R.isContinuation($ans2009)) {\nswitch($step2005) {\ncase 0: $step2005 = 1;\n$ans2009 = R.maybeMethodCall1(stmt2008,\"visit\",L[220],self1166);\nbreak;\ncase 1: var new$stmt2013 = $ans2009;\n$step2005 = 2;\n$ans2009 = R.maybeMethodCall1(A33,\"is-s-id\",L[221],new$stmt2013);\nbreak;\ncase 2: var anf_if2021 = $ans2009;\n$step2005 = R.checkPyretTrue(anf_if2021)?3:8;\nbreak;\ncase 3: $al2010 = L[222];\nvar anf_arg807 = G(new$stmt2013,\"id\",L[222]);\n$step2005 = 4;\n$ans2009 = R.maybeMethodCall1(A33,\"is-s-name\",L[223],anf_arg807);\nbreak;\ncase 4: var anf_if809 = $ans2009;\n$step2005 = R.checkPyretTrue(anf_if809)?5:7;\nbreak;\ncase 5: $al2010 = L[224];\nvar anf_bracket2020 = G(new$stmt2013,\"id\",L[224]);\n$al2010 = L[225];\nvar anf_arg808 = G(anf_bracket2020,\"s\",L[225]);\n$step2005 = 6;\n$al2010 = L[227];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2010,equal$always1);\n}\n$ans2009 = equal$always1.app(anf_arg808,(\"$elidedCheckBlock\"));\nbreak;\ncase 6: var anf_arg506 = $ans2009;\n$step2005 = 9;\n$al2010 = L[226];\n$ans2009 = R.checkWrapBoolean(anf_arg506);\nbreak;\ncase 7: $step2005 = 9;\n$ans2009 = (false);\nbreak;\ncase 8: $step2005 = 9;\n$ans2009 = (false);\nbreak;\ncase 9: var anf_if2018 = $ans2009;\n$step2005 = R.checkPyretTrue(anf_if2018)?10:11;\nbreak;\ncase 10: $step2005 = 12;\n$ans2009 = acc2007;\nbreak;\ncase 11: // caller optimization;\n$ans2009 = link19.app(new$stmt2013,acc2007);\n$step2005 = 12;\nbreak;\ncase 12: ++R.GAS;\nreturn $ans2009;\ndefault: R.ffi.throwSpinnakerError(L[219],$step2005);\n}\n}\nif($step2005 !== 12) {\n$ans2009.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2010,$temp_lam2006,$step2005,[acc2007,stmt2008],[new$stmt2013],$elidedFrames2012);\n}\nreturn $ans2009;\n};\nvar anf_arg822 = R.mF($temp_lam2006,\"for-body<line 150, column 16>\");\n$step1996 = 1;\n$ans2001 = R.maybeMethodCall3(L20,\"foldr\",L[219],anf_arg822,empty10,stmts708);\nbreak;\ncase 1: var new$stmts2027 = $ans2001;\n$step1996 = 2;\n$ans2001 = R.maybeMethodCall2(A33,\"s-block\",L[228],l965,new$stmts2027);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans2001;\ndefault: R.ffi.throwSpinnakerError(L[218],$step1996);\n}\n}\nif($step1996 !== 2) {\n$ans2001.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2002,$temp_full1997,$step1996,[self1166,l965,stmts708],[],$elidedFrames2004);\n}\nreturn $ans2001;\n};\nvar anf_extend2094 = R.makeMethod2($temp_full1997,\"s-block\");\nvar $temp_full2032 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__229($self1240,$l2033,$name489,$params2034,$args2035,$ann2036,$doc2037,$body2038,$$underscore863,$$underscore2039,$blocky2040) {\nvar $step2031 = 0;\nvar $elidedFrames2044 = 0;\nvar $ans2041 = D;\nvar $al2042 = L[229];\nif(R.isAR($self1240)) {\n$step2031 = $self1240.step;\n$al2042 = $self1240.from;\n$ans2041 = $self1240.ans;\n$elidedFrames2044 = $self1240.elidedFrames;\nself1240 = $self1240.args[0];\nl2033 = $self1240.args[1];\nname489 = $self1240.args[2];\nparams2034 = $self1240.args[3];\nargs2035 = $self1240.args[4];\nann2036 = $self1240.args[5];\ndoc2037 = $self1240.args[6];\nbody2038 = $self1240.args[7];\n$underscore863 = $self1240.args[8];\n$underscore2039 = $self1240.args[9];\nblocky2040 = $self1240.args[10];\n} else {\nvar $l = arguments.length;\nif($l !== 11) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[229],11,$t,true);\n}\nvar self1240 = $self1240;\nvar l2033 = $l2033;\nvar name489 = $name489;\nvar params2034 = $params2034;\nvar args2035 = $args2035;\nvar ann2036 = $ann2036;\nvar doc2037 = $doc2037;\nvar body2038 = $body2038;\nvar $underscore863 = $$underscore863;\nvar $underscore2039 = $$underscore2039;\nvar blocky2040 = $blocky2040;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2041 = R.mC();\n}\nwhile(!R.isContinuation($ans2041)) {\nswitch($step2031) {\ncase 0: $step2031 = 1;\n$ans2041 = R.maybeMethodCall(A33,\"s-fun\",L[230],l2033,name489,params2034,args2035,ann2036,doc2037,body2038,none14,none14,blocky2040);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2041;\ndefault: R.ffi.throwSpinnakerError(L[229],$step2031);\n}\n}\nif($step2031 !== 1) {\n$ans2041.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2042,$temp_full2032,$step2031,[self1240,l2033,name489,params2034,args2035,ann2036,doc2037,body2038,$underscore863,$underscore2039,blocky2040],[],$elidedFrames2044);\n}\nreturn $ans2041;\n};\nvar anf_extend2095 = R.mMN($temp_full2032,\"s-fun\");\nvar $temp_full2055 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__231($self868,$l613,$name1035,$params1038,$mixins1039,$variants1040,$shared$members2056,$$underscore933,$$underscore1186) {\nvar $step2054 = 0;\nvar $elidedFrames2061 = 0;\nvar $ans2058 = D;\nvar $al2059 = L[231];\nif(R.isAR($self868)) {\n$step2054 = $self868.step;\n$al2059 = $self868.from;\n$ans2058 = $self868.ans;\n$elidedFrames2061 = $self868.elidedFrames;\nself868 = $self868.args[0];\nl613 = $self868.args[1];\nname1035 = $self868.args[2];\nparams1038 = $self868.args[3];\nmixins1039 = $self868.args[4];\nvariants1040 = $self868.args[5];\nshared$members2056 = $self868.args[6];\n$underscore933 = $self868.args[7];\n$underscore1186 = $self868.args[8];\n} else {\nvar $l = arguments.length;\nif($l !== 9) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[231],9,$t,true);\n}\nvar self868 = $self868;\nvar l613 = $l613;\nvar name1035 = $name1035;\nvar params1038 = $params1038;\nvar mixins1039 = $mixins1039;\nvar variants1040 = $variants1040;\nvar shared$members2056 = $shared$members2056;\nvar $underscore933 = $$underscore933;\nvar $underscore1186 = $$underscore1186;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2058 = R.mC();\n}\nwhile(!R.isContinuation($ans2058)) {\nswitch($step2054) {\ncase 0: $step2054 = 1;\n$ans2058 = R.maybeMethodCall(A33,\"s-data\",L[232],l613,name1035,params1038,mixins1039,variants1040,shared$members2056,none14,none14);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2058;\ndefault: R.ffi.throwSpinnakerError(L[231],$step2054);\n}\n}\nif($step2054 !== 1) {\n$ans2058.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2059,$temp_full2055,$step2054,[self868,l613,name1035,params1038,mixins1039,variants1040,shared$members2056,$underscore933,$underscore1186],[],$elidedFrames2061);\n}\nreturn $ans2058;\n};\nvar anf_extend2096 = R.mMN($temp_full2055,\"s-data\");\nvar $temp_full2064 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__233($self1470,$l1231,$name2065,$params2066,$args2067,$ann2068,$doc2069,$body2070,$$underscore1821,$$underscore1262,$blocky2071) {\nvar $step2063 = 0;\nvar $elidedFrames2077 = 0;\nvar $ans2074 = D;\nvar $al2075 = L[233];\nif(R.isAR($self1470)) {\n$step2063 = $self1470.step;\n$al2075 = $self1470.from;\n$ans2074 = $self1470.ans;\n$elidedFrames2077 = $self1470.elidedFrames;\nself1470 = $self1470.args[0];\nl1231 = $self1470.args[1];\nname2065 = $self1470.args[2];\nparams2066 = $self1470.args[3];\nargs2067 = $self1470.args[4];\nann2068 = $self1470.args[5];\ndoc2069 = $self1470.args[6];\nbody2070 = $self1470.args[7];\n$underscore1821 = $self1470.args[8];\n$underscore1262 = $self1470.args[9];\nblocky2071 = $self1470.args[10];\n} else {\nvar $l = arguments.length;\nif($l !== 11) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[233],11,$t,true);\n}\nvar self1470 = $self1470;\nvar l1231 = $l1231;\nvar name2065 = $name2065;\nvar params2066 = $params2066;\nvar args2067 = $args2067;\nvar ann2068 = $ann2068;\nvar doc2069 = $doc2069;\nvar body2070 = $body2070;\nvar $underscore1821 = $$underscore1821;\nvar $underscore1262 = $$underscore1262;\nvar blocky2071 = $blocky2071;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2074 = R.mC();\n}\nwhile(!R.isContinuation($ans2074)) {\nswitch($step2063) {\ncase 0: $step2063 = 1;\n$ans2074 = R.maybeMethodCall(A33,\"s-lam\",L[234],l1231,name2065,params2066,args2067,ann2068,doc2069,body2070,none14,none14,blocky2071);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2074;\ndefault: R.ffi.throwSpinnakerError(L[233],$step2063);\n}\n}\nif($step2063 !== 1) {\n$ans2074.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2075,$temp_full2064,$step2063,[self1470,l1231,name2065,params2066,args2067,ann2068,doc2069,body2070,$underscore1821,$underscore1262,blocky2071],[],$elidedFrames2077);\n}\nreturn $ans2074;\n};\nvar anf_extend2097 = R.mMN($temp_full2064,\"s-lam\");\nvar $temp_full2082 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__235($self1572,$l2083,$name2084,$body2085,$keyword$check2086) {\nvar $step2081 = 0;\nvar $elidedFrames2090 = 0;\nvar $ans2087 = D;\nvar $al2088 = L[235];\nif(R.isAR($self1572)) {\n$step2081 = $self1572.step;\n$al2088 = $self1572.from;\n$ans2087 = $self1572.ans;\n$elidedFrames2090 = $self1572.elidedFrames;\nself1572 = $self1572.args[0];\nl2083 = $self1572.args[1];\nname2084 = $self1572.args[2];\nbody2085 = $self1572.args[3];\nkeyword$check2086 = $self1572.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[235],5,$t,true);\n}\nvar self1572 = $self1572;\nvar l2083 = $l2083;\nvar name2084 = $name2084;\nvar body2085 = $body2085;\nvar keyword$check2086 = $keyword$check2086;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2087 = R.mC();\n}\nwhile(!R.isContinuation($ans2087)) {\nswitch($step2081) {\ncase 0: $step2081 = 1;\n$ans2087 = R.maybeMethodCall2(A33,\"s-name\",L[236],l2083,(\"$elidedCheckBlock\"));\nbreak;\ncase 1: var anf_arg69 = $ans2087;\n$step2081 = 2;\n$ans2087 = R.maybeMethodCall2(A33,\"s-id\",L[237],l2083,anf_arg69);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans2087;\ndefault: R.ffi.throwSpinnakerError(L[235],$step2081);\n}\n}\nif($step2081 !== 2) {\n$ans2087.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2088,$temp_full2082,$step2081,[self1572,l2083,name2084,body2085,keyword$check2086],[],$elidedFrames2090);\n}\nreturn $ans2087;\n};\nvar anf_extend2098 = R.makeMethod4($temp_full2082,\"s-check\");\nvar no$checks$visitor2164 = R.extendObj(L[238],anf_extend2093,{\"s-block\":anf_extend2094,\n\"s-fun\":anf_extend2095,\n\"s-data\":anf_extend2096,\n\"s-lam\":anf_extend2097,\n\"s-check\":anf_extend2098});\n$al619 = L[239];\nvar anf_extend2138 = G(A33,\"default-map-visitor\",L[239]);\nvar $temp_full2100 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__240($self484,$l1052,$stmts2101) {\nvar $step2099 = 0;\nvar $elidedFrames2105 = 0;\nvar $ans2102 = D;\nvar $al2103 = L[240];\nif(R.isAR($self484)) {\n$step2099 = $self484.step;\n$al2103 = $self484.from;\n$ans2102 = $self484.ans;\n$elidedFrames2105 = $self484.elidedFrames;\nself484 = $self484.args[0];\nl1052 = $self484.args[1];\nstmts2101 = $self484.args[2];\nchecks$to$perform2129 = $self484.vars[0];\nid$result2131 = $self484.vars[1];\nanf_arg850 = $self484.vars[2];\ndo$checks2133 = $self484.vars[3];\nlast$expr2132 = $self484.vars[4];\nanf_arg867 = $self484.vars[5];\nanf_fun112 = $self484.vars[6];\nds$stmts2130 = $self484.vars[7];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[240],3,$t,true);\n}\nvar self484 = $self484;\nvar l1052 = $l1052;\nvar stmts2101 = $stmts2101;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2102 = R.mC();\n}\nwhile(!R.isContinuation($ans2102)) {\nswitch($step2099) {\ncase 0: $step2099 = 1;\n$al2103 = L[260];\n// omitting isFunction check;\n$ans2102 = get$checks1873.$var.app(stmts2101);\nbreak;\ncase 1: var checks$to$perform2129 = $ans2102;\nvar $temp_lam2108 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__241($recv_2109) {\nvar $step2107 = 0;\nvar $elidedFrames2115 = 0;\nvar $ans2112 = D;\nvar $al2113 = L[241];\nif(R.isAR($recv_2109)) {\n$step2107 = $recv_2109.step;\n$al2113 = $recv_2109.from;\n$ans2112 = $recv_2109.ans;\n$elidedFrames2115 = $recv_2109.elidedFrames;\nrecv_2109 = $recv_2109.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[241],1,$t,false);\n}\nvar recv_2109 = $recv_2109;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2112 = R.mC();\n}\nwhile(!R.isContinuation($ans2112)) {\nswitch($step2107) {\ncase 0: $step2107 = 1;\n$ans2112 = R.maybeMethodCall1(recv_2109,\"visit\",L[241],self484);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2112;\ndefault: R.ffi.throwSpinnakerError(L[241],$step2107);\n}\n}\nif($step2107 !== 1) {\n$ans2112.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2113,$temp_lam2108,$step2107,[recv_2109],[],$elidedFrames2115);\n}\nreturn $ans2112;\n};\nvar anf_arg835 = R.mF($temp_lam2108,\"\");\n$step2099 = 2;\n$ans2102 = R.maybeMethodCall1(stmts2101,\"map\",L[242],anf_arg835);\nbreak;\ncase 2: var ds$stmts2130 = $ans2102;\n$step2099 = 3;\n$al2103 = L[259];\n// omitting isFunction check;\n$ans2102 = create$check$block1945.$var.app(l1052,checks$to$perform2129);\nbreak;\ncase 3: var do$checks2133 = $ans2102;\n// caller optimization;\n$ans2102 = is$empty6.app(checks$to$perform2129);\nvar anf_if2135 = $ans2102;\n$step2099 = R.checkPyretTrue(anf_if2135)?4:5;\nbreak;\ncase 4: $step2099 = 19;\n$ans2102 = R.maybeMethodCall2(A33,\"s-block\",L[243],l1052,ds$stmts2130);\nbreak;\ncase 5: // caller optimization;\n$ans2102 = is$empty6.app(ds$stmts2130);\nvar anf_if2134 = $ans2102;\n$step2099 = R.checkPyretTrue(anf_if2134)?6:7;\nbreak;\ncase 6: $step2099 = 19;\n$al2103 = L[244];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2103,raise1);\n}\n$ans2102 = raise1.app((\"Empty block\"));\nbreak;\ncase 7: $step2099 = 8;\n$ans2102 = R.maybeMethodCall1(G22,\"make-name\",L[245],(\"result-after-checks\"));\nbreak;\ncase 8: var anf_arg575 = $ans2102;\n$step2099 = 9;\n$ans2102 = R.maybeMethodCall2(A33,\"s-name\",L[246],l1052,anf_arg575);\nbreak;\ncase 9: var id$result2131 = $ans2102;\n$step2099 = 10;\n$ans2102 = R.maybeMethodCall0(ds$stmts2130,\"last\",L[247]);\nbreak;\ncase 10: var last$expr2132 = $ans2102;\n$step2099 = 11;\n$ans2102 = R.maybeMethodCall0(ds$stmts2130,\"length\",L[248]);\nbreak;\ncase 11: var anf_arg852 = $ans2102;\n$step2099 = 12;\n$al2103 = L[258];\n// omitting isFunction check;\n$ans2102 = _minus9.app(anf_arg852,(1));\nbreak;\ncase 12: var anf_arg578 = $ans2102;\n$step2099 = 13;\n$ans2102 = R.maybeMethodCall1(ds$stmts2130,\"take\",L[249],anf_arg578);\nbreak;\ncase 13: var anf_arg850 = $ans2102;\n$al2103 = L[251];\nvar anf_fun112 = R.getMaker3(list11,(\"make3\"),L[250],L[251]);\n$al2103 = L[252];\nvar anf_arg146 = G(A33,\"a-blank\",L[252]);\n$step2099 = 14;\n$ans2102 = R.maybeMethodCall4(A33,\"s-bind\",L[253],l1052,(true),id$result2131,anf_arg146);\nbreak;\ncase 14: var anf_arg150 = $ans2102;\n$step2099 = 15;\n$ans2102 = R.maybeMethodCall4(A33,\"s-let\",L[254],l1052,anf_arg150,last$expr2132,(false));\nbreak;\ncase 15: var anf_arg867 = $ans2102;\n$step2099 = 16;\n$ans2102 = R.maybeMethodCall2(A33,\"s-id\",L[255],l1052,id$result2131);\nbreak;\ncase 16: var anf_arg879 = $ans2102;\n$step2099 = 17;\n$al2103 = L[251];\nif(typeof(anf_fun112.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2103,anf_fun112);\n}\n$ans2102 = anf_fun112.app(anf_arg867,do$checks2133,anf_arg879);\nbreak;\ncase 17: var anf_arg865 = $ans2102;\n$step2099 = 18;\n$al2103 = L[257];\n// omitting isFunction check;\n$ans2102 = _plus5.app(anf_arg850,anf_arg865);\nbreak;\ncase 18: var anf_arg868 = $ans2102;\n$step2099 = 19;\n$ans2102 = R.maybeMethodCall2(A33,\"s-block\",L[256],l1052,anf_arg868);\nbreak;\ncase 19: ++R.GAS;\nreturn $ans2102;\ndefault: R.ffi.throwSpinnakerError(L[240],$step2099);\n}\n}\nif($step2099 !== 19) {\n$ans2102.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2103,$temp_full2100,$step2099,[self484,l1052,stmts2101],[checks$to$perform2129,id$result2131,anf_arg850,do$checks2133,last$expr2132,anf_arg867,anf_fun112,ds$stmts2130],$elidedFrames2105);\n}\nreturn $ans2102;\n};\nvar anf_extend2139 = R.makeMethod2($temp_full2100,\"s-block\");\nvar check$visitor2152 = R.extendObj(L[261],anf_extend2138,{\"s-block\":anf_extend2139});\nvar desugar$check2155 = {\"$var\":D};\nvar desugar$no$checks2171 = {\"$var\":D};\nvar $temp_lam2145 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__262($prog2146) {\nvar $step2144 = 0;\nvar $elidedFrames2151 = 0;\nvar $ans2148 = D;\nvar $al2149 = L[262];\nif(R.isAR($prog2146)) {\n$step2144 = $prog2146.step;\n$al2149 = $prog2146.from;\n$ans2148 = $prog2146.ans;\n$elidedFrames2151 = $prog2146.elidedFrames;\nprog2146 = $prog2146.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[262],1,$t,false);\n}\nvar prog2146 = $prog2146;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2148 = R.mC();\n}\nwhile(!R.isContinuation($ans2148)) {\nswitch($step2144) {\ncase 0: $step2144 = 1;\n$ans2148 = R.maybeMethodCall1(prog2146,\"visit\",L[263],check$visitor2152);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2148;\ndefault: R.ffi.throwSpinnakerError(L[262],$step2144);\n}\n}\nif($step2144 !== 1) {\n$ans2148.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2149,$temp_lam2145,$step2144,[prog2146],[],$elidedFrames2151);\n}\nreturn $ans2148;\n};\nvar anf_assign2154 = R.mF($temp_lam2145,\"desugar-check\");\ndesugar$check2155.$var = anf_assign2154;\nR.nothing;\nvar $temp_lam2158 = function _1c395a92c93cf1e5653a4eca7ef607f65dc1686770b07a7bb8492ac6a27c6062__264($prog2159) {\nvar $step2157 = 0;\nvar $elidedFrames2163 = 0;\nvar $ans2160 = D;\nvar $al2161 = L[264];\nif(R.isAR($prog2159)) {\n$step2157 = $prog2159.step;\n$al2161 = $prog2159.from;\n$ans2160 = $prog2159.ans;\n$elidedFrames2163 = $prog2159.elidedFrames;\nprog2159 = $prog2159.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[264],1,$t,false);\n}\nvar prog2159 = $prog2159;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2160 = R.mC();\n}\nwhile(!R.isContinuation($ans2160)) {\nswitch($step2157) {\ncase 0: $step2157 = 1;\n$ans2160 = R.maybeMethodCall1(prog2159,\"visit\",L[265],no$checks$visitor2164);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2160;\ndefault: R.ffi.throwSpinnakerError(L[264],$step2157);\n}\n}\nif($step2157 !== 1) {\n$ans2160.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2161,$temp_lam2158,$step2157,[prog2159],[],$elidedFrames2163);\n}\nreturn $ans2160;\n};\nvar anf_assign2170 = R.mF($temp_lam2158,\"desugar-no-checks\");\ndesugar$no$checks2171.$var = anf_assign2170;\nR.nothing;\n$step118 = 2;\n$ans618 = R.maybeMethodCall2(builtins1,\"trace-value\",L[266],L[266],nothing2);\nbreak;\ncase 2: var answer2174 = $ans618;\nvar provides2173 = R.mO({\"is-CheckInfo\":is$CheckInfo634.$var,\n\"check-info\":check$info636.$var,\n\"is-check-info\":is$check$info635.$var,\n\"ast-pretty\":ast$pretty655.$var,\n\"ast-lam\":ast$lam688.$var,\n\"flat-prim-app\":flat$prim$app700,\n\"ast-srcloc\":ast$srcloc718.$var,\n\"check-stmts-visitor\":check$stmts$visitor1221,\n\"get-checks\":get$checks1873.$var,\n\"create-check-block\":create$check$block1945.$var,\n\"make-lam\":make$lam1899.$var,\n\"no-checks-visitor\":no$checks$visitor2164,\n\"check-visitor\":check$visitor2152,\n\"desugar-check\":desugar$check2155.$var,\n\"desugar-no-checks\":desugar$no$checks2171.$var});\n$step118 = 3;\n$ans618 = R.maybeMethodCall0(builtins1,\"current-checker\",L[5]);\nbreak;\ncase 3: var anf_method_obj2172 = $ans618;\n$step118 = 4;\n$ans618 = R.maybeMethodCall0(anf_method_obj2172,\"results\",L[5]);\nbreak;\ncase 4: var checks2175 = $ans618;\n$step118 = 5;\n$ans618 = R.mO({\"answer\":answer2174,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-values\":{\"A\":A33,\n\"ast-pretty\":ast$pretty655.$var,\n\"get-checks\":get$checks1873.$var,\n\"G\":G22,\n\"ast-srcloc\":ast$srcloc718.$var,\n\"$global\":$global37,\n\"check-stmts-visitor\":check$stmts$visitor1221,\n\"error\":error35,\n\"check-visitor\":check$visitor2152,\n\"L\":L20,\n\"ast-lam\":ast$lam688.$var,\n\"flat-prim-app\":flat$prim$app700,\n\"desugar-check\":desugar$check2155.$var,\n\"sets\":sets41,\n\"is-CheckInfo\":is$CheckInfo634.$var,\n\"check-info\":check$info636.$var,\n\"U\":U21,\n\"option\":option39,\n\"$base\":$base34,\n\"lists\":lists38,\n\"is-check-info\":is$check$info635.$var,\n\"create-check-block\":create$check$block1945.$var,\n\"no-checks-visitor\":no$checks$visitor2164,\n\"make-lam\":make$lam1899.$var,\n\"SL\":SL11,\n\"arrays\":arrays32,\n\"desugar-no-checks\":desugar$no$checks2171.$var},\n\"defined-types\":{\"A\":A25,\n\"G\":G53,\n\"$global\":$global35,\n\"error\":error30,\n\"L\":L46,\n\"sets\":sets51,\n\"U\":U52,\n\"option\":option49,\n\"$base\":$base26,\n\"lists\":lists45,\n\"CheckInfo\":CheckInfo1925,\n\"SL\":SL27,\n\"arrays\":arrays23},\n\"provide-plus-types\":R.mO({\"values\":provides2173,\n\"types\":{\"CheckInfo\":CheckInfo1925}}),\n\"checks\":checks2175});\nbreak;\ncase 5: ++R.GAS;\nreturn $ans618;\ndefault: R.ffi.throwSpinnakerError(L[267],$step118);\n}\n}\nif($step118 !== 5) {\n$ans618.stack[R.EXN_STACKHEIGHT++] = R.mAR($al619,$toplevel119,$step118,[],[is$CheckInfo634,is$check$info635,CheckInfo1925,ast$srcloc718,desugar$no$checks2171,answer2174,flat$prim$app700,create$check$block1945,check$info636,make$lam1899,ast$lam688,provides2173,no$checks$visitor2164,get$checks1873,desugar$check2155,check$stmts$visitor1221,ast$pretty655,check$visitor2152],$elidedFrames621);\n}\nreturn $ans618;\n};\nreturn R.safeCall($toplevel119,function module_load(moduleVal) {\nR.modules[\"$file:///home/travis/build/brownplt/pyret$npm/pyret$lang/src/arr/compiler/desugar$check.arr54\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"values":{"desugar-no-checks":"tany",
"make-lam":"tany",
"no-checks-visitor":"tany",
"create-check-block":"tany",
"is-check-info":{"bind":"fun",
"flatness":0,
"name":"is-check-info",
"typ":"tany"},
"check-info":{"bind":"fun",
"flatness":0,
"name":"check-info",
"typ":"tany"},
"is-CheckInfo":"tany",
"desugar-check":"tany",
"flat-prim-app":"tany",
"ast-lam":"tany",
"check-visitor":"tany",
"check-stmts-visitor":"tany",
"ast-srcloc":"tany",
"get-checks":"tany",
"ast-pretty":"tany"},
"datatypes":{"atom#CheckInfo#1":["data","CheckInfo",[],[["check-info",
[["l",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://srcloc"},
"name":"Srcloc"}],["name",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}],["body",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://ast"},
"name":"Expr"}],["keyword-check",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]]]],{}]},
"aliases":{"CheckInfo":"tany"}},
"requires":[{"import-type":"builtin",
"name":"arrays"},
{"import-type":"builtin",
"name":"ast"},
{"import-type":"builtin",
"name":"base"},
{"import-type":"builtin",
"name":"error"},
{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"lists"},
{"import-type":"builtin",
"name":"lists"},
{"import-type":"builtin",
"name":"option"},
{"import-type":"builtin",
"name":"sets"},
{"import-type":"builtin",
"name":"srcloc"},
{"import-type":"dependency",
"protocol":"file",
"args":["ast-util.arr"]},
{"import-type":"dependency",
"protocol":"file",
"args":["gensym.arr"]}]})