({"theMap":"{\"version\":3,\"sources\":[\"file:///home/travis/build/brownplt/pyret-npm/pyret-lang/src/arr/compiler/gensym.arr\"],\"names\":[\"file:///home/travis/build/brownplt/pyret-npm/pyret-lang/src/arr/compiler/gensym.arr\",\",12,20,135,12,38,153\",\",13,10,164,13,34,188\",\",13,2,156,13,35,189\",\",5,0,24,14,3,193\"],\"mappingsmBC,oCAXnBD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAYSE,sCAZTF;AAAAA;AAYSE,mCAZTF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAYCG,wCAZDH;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,SAIDI,oDAJCJ;AAAAA;AAAAA;AAAAA;AAAAA,SAIDI,oDAJCJ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA\",\"file\":\"file:///home/travis/build/brownplt/pyret-npm/pyret-lang/src/arr/compiler/gensym.arr\"}",
"theModule":"function _0c7137c8824cefbf5f963c1feb68e19b6450304adbf124a6cb12adf6d37b3899__7(R,NAMESPACE,M,$arrays33,$$base23,$error16,$$global24,$lists21,$option35,$sets25) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"file:///home/travis/build/brownplt/pyret-npm/pyret-lang/src/arr/compiler/gensym.arr\";\nvar D = R.undefined;\nvar L = [[M,7,0,48,9,3,86],\n[M,11,0,88,14,3,193],\n[M,13,2,156,13,35,189],\n[M,13,10,164,13,34,188],\n[M,12,20,135,12,38,153],\n[\"dummy location\"],\n[M,5,0,24,14,3,193],\n[M,3,0,13,14,3,193]];\nvar builtins1 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"builtins\"];\nvar nothing2 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"nothing\"];\nvar _plus5 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"_plus\"];\nvar tostring1 = R.gF(R.modules[\"builtin://global\"],\"defined-values\")[\"tostring\"];\nvar arrays1 = R.gF($arrays33,\"values\");\nvar $base2 = R.gF($$base23,\"values\");\nvar error3 = R.gF($error16,\"values\");\nvar $global4 = R.gF($$global24,\"values\");\nvar lists5 = R.gF($lists21,\"values\");\nvar option6 = R.gF($option35,\"values\");\nvar sets7 = R.gF($sets25,\"values\");\nvar arrays9 = R.gF($arrays33,\"types\");\nvar $base11 = R.gF($$base23,\"types\");\nvar error12 = R.gF($error16,\"types\");\nvar $global14 = R.gF($$global24,\"types\");\nvar lists15 = R.gF($lists21,\"types\");\nvar option16 = R.gF($option35,\"types\");\nvar sets18 = R.gF($sets25,\"types\");\nNAMESPACE = R.aMTN(NAMESPACE,[\"array-to-list-now\",\"array-length\",\"array-get-now\",\"array-set-now\",\"array-of\",\"is-array\",\"array-from-list\",\"build-array\",\"array\"],[\"Array\"],$arrays33);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$$base23);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$error16);\nNAMESPACE = R.aMTN(NAMESPACE,[],[],$$global24);\nNAMESPACE = R.aMTN(NAMESPACE,[\"fold4\",\"fold3\",\"fold2\",\"fold\",\"each4_n\",\"each3_n\",\"each2_n\",\"each_n\",\"each4\",\"each3\",\"each2\",\"each\",\"map4_n\",\"map3_n\",\"map2_n\",\"map_n\",\"map4\",\"map3\",\"map2\",\"map\",\"find\",\"any\",\"split-at\",\"partition\",\"filter\",\"repeat\",\"range-by\",\"range\",\"link\",\"empty\",\"is-link\",\"is-empty\",\"is-List\",\"list\"],[\"List\"],$lists21);\nNAMESPACE = R.aMTN(NAMESPACE,[\"some\",\"none\",\"is-some\",\"is-none\",\"is-Option\"],[\"Option\"],$option35);\nNAMESPACE = R.aMTN(NAMESPACE,[\"list-to-tree-set\",\"list-to-list-set\",\"list-to-set\",\"empty-tree-set\",\"empty-list-set\",\"empty-set\",\"list-set\",\"tree-set\",\"set\"],[\"Set\"],$sets25);\nvar $toplevel21 = function _0c7137c8824cefbf5f963c1feb68e19b6450304adbf124a6cb12adf6d37b3899__7($$resumer14) {\nvar $step20 = 0;\nvar $elidedFrames35 = 0;\nvar $ans32 = D;\nvar $al33 = L[7];\nif(R.isAR($$resumer14)) {\n$step20 = $$resumer14.step;\n$al33 = $$resumer14.from;\n$ans32 = $$resumer14.ans;\n$elidedFrames35 = $$resumer14.elidedFrames;\n$resumer14 = $$resumer14.args[0];\nreset193 = $$resumer14.vars[0];\nmake$name229 = $$resumer14.vars[1];\ngensym$counter135 = $$resumer14.vars[2];\nprovides231 = $$resumer14.vars[3];\nanswer232 = $$resumer14.vars[4];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans32 = R.mC();\n}\nwhile(!R.isContinuation($ans32)) {\nswitch($step20) {\ncase 0: var gensym$counter135 = {\"$var\":(0)};\nvar reset193 = {\"$var\":D};\nvar make$name229 = {\"$var\":D};\nvar $temp_lam75 = function _0c7137c8824cefbf5f963c1feb68e19b6450304adbf124a6cb12adf6d37b3899__0($$resumer14) {\nvar $step74 = 0;\nvar $elidedFrames134 = 0;\nvar $ans80 = D;\nvar $al132 = L[0];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[0],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans80)) {\nswitch($step74) {\ncase 0: $step74 = 1;\ngensym$counter135.$var = (0);\n$ans80 = R.nothing;\nbreak;\ncase 1: return $ans80;\ndefault: R.ffi.throwSpinnakerError(L[0],$step74);\n}\n}\nreturn $ans80;\n};\nvar anf_assign192 = R.mF($temp_lam75,\"reset\");\nreset193.$var = anf_assign192;\nR.nothing;\nvar $temp_lam203 = function _0c7137c8824cefbf5f963c1feb68e19b6450304adbf124a6cb12adf6d37b3899__1($base204) {\nvar $step202 = 0;\nvar $elidedFrames216 = 0;\nvar $ans213 = D;\nvar $al214 = L[1];\nif(R.isAR($base204)) {\n$step202 = $base204.step;\n$al214 = $base204.from;\n$ans213 = $base204.ans;\n$elidedFrames216 = $base204.elidedFrames;\nbase204 = $base204.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1],1,$t,false);\n}\nvar base204 = $base204;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans213 = R.mC();\n}\nwhile(!R.isContinuation($ans213)) {\nswitch($step202) {\ncase 0: var anf_arg125 = gensym$counter135.$var;\n$step202 = 1;\n$al214 = L[4];\n// omitting isFunction check;\n$ans213 = _plus5.app((1),anf_arg125);\nbreak;\ncase 1: var anf_assign217 = $ans213;\ngensym$counter135.$var = anf_assign217;\nR.nothing;\nvar anf_arg128 = gensym$counter135.$var;\n$step202 = 2;\n$al214 = L[3];\nif(typeof(tostring1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al214,tostring1);\n}\n$ans213 = tostring1.app(anf_arg128);\nbreak;\ncase 2: var anf_arg127 = $ans213;\n$step202 = 3;\n$al214 = L[2];\n// omitting isFunction check;\n$ans213 = _plus5.app(base204,anf_arg127);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans213;\ndefault: R.ffi.throwSpinnakerError(L[1],$step202);\n}\n}\nif($step202 !== 3) {\n$ans213.stack[R.EXN_STACKHEIGHT++] = R.mAR($al214,$temp_lam203,$step202,[base204],[],$elidedFrames216);\n}\nreturn $ans213;\n};\nvar anf_assign228 = R.mF($temp_lam203,\"make-name\");\nmake$name229.$var = anf_assign228;\nR.nothing;\n$step20 = 1;\n$ans32 = R.maybeMethodCall2(builtins1,\"trace-value\",L[5],L[5],nothing2);\nbreak;\ncase 1: var answer232 = $ans32;\nvar anf_obj230 = gensym$counter135.$var;\nvar provides231 = R.mO({\"gensym-counter\":anf_obj230,\n\"reset\":reset193.$var,\n\"make-name\":make$name229.$var});\n$step20 = 2;\n$ans32 = R.maybeMethodCall0(builtins1,\"current-checker\",L[6]);\nbreak;\ncase 2: var anf_method_obj380 = $ans32;\n$step20 = 3;\n$ans32 = R.maybeMethodCall0(anf_method_obj380,\"results\",L[6]);\nbreak;\ncase 3: var checks233 = $ans32;\n$step20 = 4;\n$ans32 = R.mO({\"answer\":answer232,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-values\":{\"$global\":$global4,\n\"error\":error3,\n\"make-name\":make$name229.$var,\n\"reset\":reset193.$var,\n\"sets\":sets7,\n\"option\":option6,\n\"$base\":$base2,\n\"lists\":lists5,\n\"arrays\":arrays1,\n\"gensym-counter\":gensym$counter135},\n\"defined-types\":{\"$global\":$global14,\n\"error\":error12,\n\"sets\":sets18,\n\"option\":option16,\n\"$base\":$base11,\n\"lists\":lists15,\n\"arrays\":arrays9},\n\"provide-plus-types\":R.mO({\"values\":provides231,\n\"types\":{}}),\n\"checks\":checks233});\nbreak;\ncase 4: ++R.GAS;\nreturn $ans32;\ndefault: R.ffi.throwSpinnakerError(L[7],$step20);\n}\n}\nif($step20 !== 4) {\n$ans32.stack[R.EXN_STACKHEIGHT++] = R.mAR($al33,$toplevel21,$step20,[],[reset193,make$name229,gensym$counter135,provides231,answer232],$elidedFrames35);\n}\nreturn $ans32;\n};\nreturn R.safeCall($toplevel21,function module_load(moduleVal) {\nR.modules[\"$file:///home/travis/build/brownplt/pyret$npm/pyret$lang/src/arr/compiler/gensym.arr19\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"values":{"reset":{"bind":"fun",
"flatness":0,
"name":"reset",
"typ":"tany"},
"make-name":"tany",
"gensym-counter":{"bind":"var",
"typ":"tany"}},
"datatypes":{},
"aliases":{}},
"requires":[{"import-type":"builtin",
"name":"arrays"},
{"import-type":"builtin",
"name":"base"},
{"import-type":"builtin",
"name":"error"},
{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"lists"},
{"import-type":"builtin",
"name":"option"},
{"import-type":"builtin",
"name":"sets"}]})